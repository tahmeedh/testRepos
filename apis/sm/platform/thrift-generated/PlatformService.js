//
// Autogenerated by Thrift Compiler (0.16.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;
var Int64 = require('node-int64');


var ttypes = require('./Platform_types');
//HELPER FUNCTIONS AND STRUCTURES

var PlatformService_getVersion_args = function(args) {
};
PlatformService_getVersion_args.prototype = {};
PlatformService_getVersion_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getVersion_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getVersion_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getVersion_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
PlatformService_getVersion_result.prototype = {};
PlatformService_getVersion_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getVersion_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getVersion_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setPreferredMailboxRecoveryAddress_args = function(args) {
  this.userId = null;
  this.userAliasId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.userAliasId !== undefined && args.userAliasId !== null) {
      this.userAliasId = args.userAliasId;
    }
  }
};
PlatformService_setPreferredMailboxRecoveryAddress_args.prototype = {};
PlatformService_setPreferredMailboxRecoveryAddress_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.userAliasId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setPreferredMailboxRecoveryAddress_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setPreferredMailboxRecoveryAddress_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.userAliasId !== null && this.userAliasId !== undefined) {
    output.writeFieldBegin('userAliasId', Thrift.Type.I64, 2);
    output.writeI64(this.userAliasId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setPreferredMailboxRecoveryAddress_result = function(args) {
  this.failure = null;
  this.userNotFound = null;
  this.userAliasNotFound = null;
  this.userAliasNotValidMailboxRecoveryAddress = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args instanceof ttypes.UserAliasNotFoundException) {
    this.userAliasNotFound = args;
    return;
  }
  if (args instanceof ttypes.UserAliasNotValidMailboxRecoveryAddressException) {
    this.userAliasNotValidMailboxRecoveryAddress = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
    if (args.userAliasNotFound !== undefined && args.userAliasNotFound !== null) {
      this.userAliasNotFound = args.userAliasNotFound;
    }
    if (args.userAliasNotValidMailboxRecoveryAddress !== undefined && args.userAliasNotValidMailboxRecoveryAddress !== null) {
      this.userAliasNotValidMailboxRecoveryAddress = args.userAliasNotValidMailboxRecoveryAddress;
    }
  }
};
PlatformService_setPreferredMailboxRecoveryAddress_result.prototype = {};
PlatformService_setPreferredMailboxRecoveryAddress_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.userAliasNotFound = new ttypes.UserAliasNotFoundException();
        this.userAliasNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.userAliasNotValidMailboxRecoveryAddress = new ttypes.UserAliasNotValidMailboxRecoveryAddressException();
        this.userAliasNotValidMailboxRecoveryAddress.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setPreferredMailboxRecoveryAddress_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setPreferredMailboxRecoveryAddress_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.userAliasNotFound !== null && this.userAliasNotFound !== undefined) {
    output.writeFieldBegin('userAliasNotFound', Thrift.Type.STRUCT, 3);
    this.userAliasNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.userAliasNotValidMailboxRecoveryAddress !== null && this.userAliasNotValidMailboxRecoveryAddress !== undefined) {
    output.writeFieldBegin('userAliasNotValidMailboxRecoveryAddress', Thrift.Type.STRUCT, 4);
    this.userAliasNotValidMailboxRecoveryAddress.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_removePreferredMailboxRecoveryAddress_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_removePreferredMailboxRecoveryAddress_args.prototype = {};
PlatformService_removePreferredMailboxRecoveryAddress_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_removePreferredMailboxRecoveryAddress_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_removePreferredMailboxRecoveryAddress_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_removePreferredMailboxRecoveryAddress_result = function(args) {
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_removePreferredMailboxRecoveryAddress_result.prototype = {};
PlatformService_removePreferredMailboxRecoveryAddress_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_removePreferredMailboxRecoveryAddress_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_removePreferredMailboxRecoveryAddress_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getMailboxRecoveryAddresses_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_getMailboxRecoveryAddresses_args.prototype = {};
PlatformService_getMailboxRecoveryAddresses_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getMailboxRecoveryAddresses_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getMailboxRecoveryAddresses_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getMailboxRecoveryAddresses_result = function(args) {
  this.success = null;
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.MailboxRecoveryAddressStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getMailboxRecoveryAddresses_result.prototype = {};
PlatformService_getMailboxRecoveryAddresses_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp371 = input.readListBegin();
        var _size70 = _rtmp371.size || 0;
        for (var _i72 = 0; _i72 < _size70; ++_i72) {
          var elem73 = null;
          elem73 = new ttypes.MailboxRecoveryAddressStruct();
          elem73.read(input);
          this.success.push(elem73);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getMailboxRecoveryAddresses_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getMailboxRecoveryAddresses_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter74 in this.success) {
      if (this.success.hasOwnProperty(iter74)) {
        iter74 = this.success[iter74];
        iter74.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createCompany_args = function(args) {
  this.companyLegalName = null;
  if (args) {
    if (args.companyLegalName !== undefined && args.companyLegalName !== null) {
      this.companyLegalName = args.companyLegalName;
    }
  }
};
PlatformService_createCompany_args.prototype = {};
PlatformService_createCompany_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.companyLegalName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createCompany_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createCompany_args');
  if (this.companyLegalName !== null && this.companyLegalName !== undefined) {
    output.writeFieldBegin('companyLegalName', Thrift.Type.STRING, 1);
    output.writeString(this.companyLegalName);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createCompany_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyAlreadyExists = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyAlreadyExistsException) {
    this.companyAlreadyExists = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyAlreadyExists !== undefined && args.companyAlreadyExists !== null) {
      this.companyAlreadyExists = args.companyAlreadyExists;
    }
  }
};
PlatformService_createCompany_result.prototype = {};
PlatformService_createCompany_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyAlreadyExists = new ttypes.CompanyAlreadyExistsException();
        this.companyAlreadyExists.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createCompany_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createCompany_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyAlreadyExists !== null && this.companyAlreadyExists !== undefined) {
    output.writeFieldBegin('companyAlreadyExists', Thrift.Type.STRUCT, 2);
    this.companyAlreadyExists.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deleteCompany_args = function(args) {
  this.companyId = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
  }
};
PlatformService_deleteCompany_args.prototype = {};
PlatformService_deleteCompany_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deleteCompany_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deleteCompany_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deleteCompany_result = function(args) {
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_deleteCompany_result.prototype = {};
PlatformService_deleteCompany_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deleteCompany_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deleteCompany_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_findCompanies_args = function(args) {
  this.queryStruct = null;
  if (args) {
    if (args.queryStruct !== undefined && args.queryStruct !== null) {
      this.queryStruct = new ttypes.CompanyQueryStruct(args.queryStruct);
    }
  }
};
PlatformService_findCompanies_args.prototype = {};
PlatformService_findCompanies_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.queryStruct = new ttypes.CompanyQueryStruct();
        this.queryStruct.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_findCompanies_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_findCompanies_args');
  if (this.queryStruct !== null && this.queryStruct !== undefined) {
    output.writeFieldBegin('queryStruct', Thrift.Type.STRUCT, 1);
    this.queryStruct.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_findCompanies_result = function(args) {
  this.success = null;
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.CompanyStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_findCompanies_result.prototype = {};
PlatformService_findCompanies_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp376 = input.readListBegin();
        var _size75 = _rtmp376.size || 0;
        for (var _i77 = 0; _i77 < _size75; ++_i77) {
          var elem78 = null;
          elem78 = new ttypes.CompanyStruct();
          elem78.read(input);
          this.success.push(elem78);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_findCompanies_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_findCompanies_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter79 in this.success) {
      if (this.success.hasOwnProperty(iter79)) {
        iter79 = this.success[iter79];
        iter79.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createUsers_args = function(args) {
  this.companyId = null;
  this.passwordHash = null;
  this.users = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.passwordHash !== undefined && args.passwordHash !== null) {
      this.passwordHash = args.passwordHash;
    }
    if (args.users !== undefined && args.users !== null) {
      this.users = Thrift.copyList(args.users, [ttypes.UserNameStruct]);
    }
  }
};
PlatformService_createUsers_args.prototype = {};
PlatformService_createUsers_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.passwordHash = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        this.users = [];
        var _rtmp381 = input.readListBegin();
        var _size80 = _rtmp381.size || 0;
        for (var _i82 = 0; _i82 < _size80; ++_i82) {
          var elem83 = null;
          elem83 = new ttypes.UserNameStruct();
          elem83.read(input);
          this.users.push(elem83);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createUsers_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createUsers_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.passwordHash !== null && this.passwordHash !== undefined) {
    output.writeFieldBegin('passwordHash', Thrift.Type.STRING, 2);
    output.writeString(this.passwordHash);
    output.writeFieldEnd();
  }
  if (this.users !== null && this.users !== undefined) {
    output.writeFieldBegin('users', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.STRUCT, this.users.length);
    for (var iter84 in this.users) {
      if (this.users.hasOwnProperty(iter84)) {
        iter84 = this.users[iter84];
        iter84.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createUsers_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  this.invalidUserCount = null;
  this.userCountTooLarge = null;
  this.communicationPlatformNotFoundException = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args instanceof ttypes.InvalidUserCountException) {
    this.invalidUserCount = args;
    return;
  }
  if (args instanceof ttypes.UserCountTooLargeException) {
    this.userCountTooLarge = args;
    return;
  }
  if (args instanceof ttypes.CommunicationPlatformNotFoundException) {
    this.communicationPlatformNotFoundException = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.UserStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
    if (args.invalidUserCount !== undefined && args.invalidUserCount !== null) {
      this.invalidUserCount = args.invalidUserCount;
    }
    if (args.userCountTooLarge !== undefined && args.userCountTooLarge !== null) {
      this.userCountTooLarge = args.userCountTooLarge;
    }
    if (args.communicationPlatformNotFoundException !== undefined && args.communicationPlatformNotFoundException !== null) {
      this.communicationPlatformNotFoundException = args.communicationPlatformNotFoundException;
    }
  }
};
PlatformService_createUsers_result.prototype = {};
PlatformService_createUsers_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp386 = input.readListBegin();
        var _size85 = _rtmp386.size || 0;
        for (var _i87 = 0; _i87 < _size85; ++_i87) {
          var elem88 = null;
          elem88 = new ttypes.UserStruct();
          elem88.read(input);
          this.success.push(elem88);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.invalidUserCount = new ttypes.InvalidUserCountException();
        this.invalidUserCount.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.userCountTooLarge = new ttypes.UserCountTooLargeException();
        this.userCountTooLarge.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRUCT) {
        this.communicationPlatformNotFoundException = new ttypes.CommunicationPlatformNotFoundException();
        this.communicationPlatformNotFoundException.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createUsers_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createUsers_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter89 in this.success) {
      if (this.success.hasOwnProperty(iter89)) {
        iter89 = this.success[iter89];
        iter89.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.invalidUserCount !== null && this.invalidUserCount !== undefined) {
    output.writeFieldBegin('invalidUserCount', Thrift.Type.STRUCT, 3);
    this.invalidUserCount.write(output);
    output.writeFieldEnd();
  }
  if (this.userCountTooLarge !== null && this.userCountTooLarge !== undefined) {
    output.writeFieldBegin('userCountTooLarge', Thrift.Type.STRUCT, 4);
    this.userCountTooLarge.write(output);
    output.writeFieldEnd();
  }
  if (this.communicationPlatformNotFoundException !== null && this.communicationPlatformNotFoundException !== undefined) {
    output.writeFieldBegin('communicationPlatformNotFoundException', Thrift.Type.STRUCT, 5);
    this.communicationPlatformNotFoundException.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deleteUser_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_deleteUser_args.prototype = {};
PlatformService_deleteUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deleteUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deleteUser_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deleteUser_result = function(args) {
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_deleteUser_result.prototype = {};
PlatformService_deleteUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deleteUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deleteUser_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createCompanyDomain_args = function(args) {
  this.companyId = null;
  this.domainName = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.domainName !== undefined && args.domainName !== null) {
      this.domainName = args.domainName;
    }
  }
};
PlatformService_createCompanyDomain_args.prototype = {};
PlatformService_createCompanyDomain_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.domainName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createCompanyDomain_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createCompanyDomain_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.domainName !== null && this.domainName !== undefined) {
    output.writeFieldBegin('domainName', Thrift.Type.STRING, 2);
    output.writeString(this.domainName);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createCompanyDomain_result = function(args) {
  this.success = null;
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.CompanyDomainStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_createCompanyDomain_result.prototype = {};
PlatformService_createCompanyDomain_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.CompanyDomainStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createCompanyDomain_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createCompanyDomain_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deleteCompanyDomain_args = function(args) {
  this.companyId = null;
  this.companyDomainId = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.companyDomainId !== undefined && args.companyDomainId !== null) {
      this.companyDomainId = args.companyDomainId;
    }
  }
};
PlatformService_deleteCompanyDomain_args.prototype = {};
PlatformService_deleteCompanyDomain_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.companyDomainId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deleteCompanyDomain_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deleteCompanyDomain_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.companyDomainId !== null && this.companyDomainId !== undefined) {
    output.writeFieldBegin('companyDomainId', Thrift.Type.I64, 2);
    output.writeI64(this.companyDomainId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deleteCompanyDomain_result = function(args) {
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_deleteCompanyDomain_result.prototype = {};
PlatformService_deleteCompanyDomain_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deleteCompanyDomain_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deleteCompanyDomain_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyDomains_args = function(args) {
  this.companyId = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
  }
};
PlatformService_getCompanyDomains_args.prototype = {};
PlatformService_getCompanyDomains_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyDomains_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyDomains_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyDomains_result = function(args) {
  this.success = null;
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.CompanyDomainStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_getCompanyDomains_result.prototype = {};
PlatformService_getCompanyDomains_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp391 = input.readListBegin();
        var _size90 = _rtmp391.size || 0;
        for (var _i92 = 0; _i92 < _size90; ++_i92) {
          var elem93 = null;
          elem93 = new ttypes.CompanyDomainStruct();
          elem93.read(input);
          this.success.push(elem93);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyDomains_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyDomains_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter94 in this.success) {
      if (this.success.hasOwnProperty(iter94)) {
        iter94 = this.success[iter94];
        iter94.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createCompanyDomainV2_args = function(args) {
  this.companyId = null;
  this.domainName = null;
  this.isDoingBusinessAs = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.domainName !== undefined && args.domainName !== null) {
      this.domainName = args.domainName;
    }
    if (args.isDoingBusinessAs !== undefined && args.isDoingBusinessAs !== null) {
      this.isDoingBusinessAs = args.isDoingBusinessAs;
    }
  }
};
PlatformService_createCompanyDomainV2_args.prototype = {};
PlatformService_createCompanyDomainV2_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.domainName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.BOOL) {
        this.isDoingBusinessAs = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createCompanyDomainV2_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createCompanyDomainV2_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.domainName !== null && this.domainName !== undefined) {
    output.writeFieldBegin('domainName', Thrift.Type.STRING, 2);
    output.writeString(this.domainName);
    output.writeFieldEnd();
  }
  if (this.isDoingBusinessAs !== null && this.isDoingBusinessAs !== undefined) {
    output.writeFieldBegin('isDoingBusinessAs', Thrift.Type.BOOL, 3);
    output.writeBool(this.isDoingBusinessAs);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createCompanyDomainV2_result = function(args) {
  this.success = null;
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.CompanyDomainStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_createCompanyDomainV2_result.prototype = {};
PlatformService_createCompanyDomainV2_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.CompanyDomainStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createCompanyDomainV2_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createCompanyDomainV2_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createGroup_args = function(args) {
  this.companyId = null;
  this.groupName = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.groupName !== undefined && args.groupName !== null) {
      this.groupName = args.groupName;
    }
  }
};
PlatformService_createGroup_args.prototype = {};
PlatformService_createGroup_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.groupName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createGroup_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createGroup_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.groupName !== null && this.groupName !== undefined) {
    output.writeFieldBegin('groupName', Thrift.Type.STRING, 2);
    output.writeString(this.groupName);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createGroup_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  this.groupAlreadyExist = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args instanceof ttypes.GroupAlreadyExistsException) {
    this.groupAlreadyExist = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.GroupStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
    if (args.groupAlreadyExist !== undefined && args.groupAlreadyExist !== null) {
      this.groupAlreadyExist = args.groupAlreadyExist;
    }
  }
};
PlatformService_createGroup_result.prototype = {};
PlatformService_createGroup_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.GroupStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.groupAlreadyExist = new ttypes.GroupAlreadyExistsException();
        this.groupAlreadyExist.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createGroup_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createGroup_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.groupAlreadyExist !== null && this.groupAlreadyExist !== undefined) {
    output.writeFieldBegin('groupAlreadyExist', Thrift.Type.STRUCT, 3);
    this.groupAlreadyExist.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deleteGroup_args = function(args) {
  this.groupId = null;
  if (args) {
    if (args.groupId !== undefined && args.groupId !== null) {
      this.groupId = args.groupId;
    }
  }
};
PlatformService_deleteGroup_args.prototype = {};
PlatformService_deleteGroup_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.groupId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deleteGroup_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deleteGroup_args');
  if (this.groupId !== null && this.groupId !== undefined) {
    output.writeFieldBegin('groupId', Thrift.Type.I32, 1);
    output.writeI32(this.groupId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deleteGroup_result = function(args) {
  this.failure = null;
  this.groupNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.GroupNotFoundException) {
    this.groupNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.groupNotFound !== undefined && args.groupNotFound !== null) {
      this.groupNotFound = args.groupNotFound;
    }
  }
};
PlatformService_deleteGroup_result.prototype = {};
PlatformService_deleteGroup_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.groupNotFound = new ttypes.GroupNotFoundException();
        this.groupNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deleteGroup_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deleteGroup_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.groupNotFound !== null && this.groupNotFound !== undefined) {
    output.writeFieldBegin('groupNotFound', Thrift.Type.STRUCT, 2);
    this.groupNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_findGroups_args = function(args) {
  this.groupQuery = null;
  if (args) {
    if (args.groupQuery !== undefined && args.groupQuery !== null) {
      this.groupQuery = new ttypes.GroupQueryStruct(args.groupQuery);
    }
  }
};
PlatformService_findGroups_args.prototype = {};
PlatformService_findGroups_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.groupQuery = new ttypes.GroupQueryStruct();
        this.groupQuery.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_findGroups_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_findGroups_args');
  if (this.groupQuery !== null && this.groupQuery !== undefined) {
    output.writeFieldBegin('groupQuery', Thrift.Type.STRUCT, 1);
    this.groupQuery.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_findGroups_result = function(args) {
  this.success = null;
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.FindGroupsResultStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_findGroups_result.prototype = {};
PlatformService_findGroups_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.FindGroupsResultStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_findGroups_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_findGroups_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_addUsersToGroup_args = function(args) {
  this.groupId = null;
  this.userIds = null;
  if (args) {
    if (args.groupId !== undefined && args.groupId !== null) {
      this.groupId = args.groupId;
    }
    if (args.userIds !== undefined && args.userIds !== null) {
      this.userIds = Thrift.copyList(args.userIds, [null]);
    }
  }
};
PlatformService_addUsersToGroup_args.prototype = {};
PlatformService_addUsersToGroup_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.groupId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        this.userIds = [];
        var _rtmp396 = input.readListBegin();
        var _size95 = _rtmp396.size || 0;
        for (var _i97 = 0; _i97 < _size95; ++_i97) {
          var elem98 = null;
          elem98 = input.readI64();
          this.userIds.push(elem98);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_addUsersToGroup_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_addUsersToGroup_args');
  if (this.groupId !== null && this.groupId !== undefined) {
    output.writeFieldBegin('groupId', Thrift.Type.I32, 1);
    output.writeI32(this.groupId);
    output.writeFieldEnd();
  }
  if (this.userIds !== null && this.userIds !== undefined) {
    output.writeFieldBegin('userIds', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.I64, this.userIds.length);
    for (var iter99 in this.userIds) {
      if (this.userIds.hasOwnProperty(iter99)) {
        iter99 = this.userIds[iter99];
        output.writeI64(iter99);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_addUsersToGroup_result = function(args) {
  this.failure = null;
  this.groupNotFound = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.GroupNotFoundException) {
    this.groupNotFound = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.groupNotFound !== undefined && args.groupNotFound !== null) {
      this.groupNotFound = args.groupNotFound;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_addUsersToGroup_result.prototype = {};
PlatformService_addUsersToGroup_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.groupNotFound = new ttypes.GroupNotFoundException();
        this.groupNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_addUsersToGroup_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_addUsersToGroup_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.groupNotFound !== null && this.groupNotFound !== undefined) {
    output.writeFieldBegin('groupNotFound', Thrift.Type.STRUCT, 2);
    this.groupNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 3);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_removeUsersFromGroup_args = function(args) {
  this.groupId = null;
  this.userIds = null;
  if (args) {
    if (args.groupId !== undefined && args.groupId !== null) {
      this.groupId = args.groupId;
    }
    if (args.userIds !== undefined && args.userIds !== null) {
      this.userIds = Thrift.copyList(args.userIds, [null]);
    }
  }
};
PlatformService_removeUsersFromGroup_args.prototype = {};
PlatformService_removeUsersFromGroup_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.groupId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        this.userIds = [];
        var _rtmp3101 = input.readListBegin();
        var _size100 = _rtmp3101.size || 0;
        for (var _i102 = 0; _i102 < _size100; ++_i102) {
          var elem103 = null;
          elem103 = input.readI64();
          this.userIds.push(elem103);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_removeUsersFromGroup_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_removeUsersFromGroup_args');
  if (this.groupId !== null && this.groupId !== undefined) {
    output.writeFieldBegin('groupId', Thrift.Type.I32, 1);
    output.writeI32(this.groupId);
    output.writeFieldEnd();
  }
  if (this.userIds !== null && this.userIds !== undefined) {
    output.writeFieldBegin('userIds', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.I64, this.userIds.length);
    for (var iter104 in this.userIds) {
      if (this.userIds.hasOwnProperty(iter104)) {
        iter104 = this.userIds[iter104];
        output.writeI64(iter104);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_removeUsersFromGroup_result = function(args) {
  this.failure = null;
  this.groupNotFound = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.GroupNotFoundException) {
    this.groupNotFound = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.groupNotFound !== undefined && args.groupNotFound !== null) {
      this.groupNotFound = args.groupNotFound;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_removeUsersFromGroup_result.prototype = {};
PlatformService_removeUsersFromGroup_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.groupNotFound = new ttypes.GroupNotFoundException();
        this.groupNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_removeUsersFromGroup_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_removeUsersFromGroup_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.groupNotFound !== null && this.groupNotFound !== undefined) {
    output.writeFieldBegin('groupNotFound', Thrift.Type.STRUCT, 2);
    this.groupNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 3);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_findUsersInGroup_args = function(args) {
  this.groupId = null;
  if (args) {
    if (args.groupId !== undefined && args.groupId !== null) {
      this.groupId = args.groupId;
    }
  }
};
PlatformService_findUsersInGroup_args.prototype = {};
PlatformService_findUsersInGroup_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.groupId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_findUsersInGroup_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_findUsersInGroup_args');
  if (this.groupId !== null && this.groupId !== undefined) {
    output.writeFieldBegin('groupId', Thrift.Type.I32, 1);
    output.writeI32(this.groupId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_findUsersInGroup_result = function(args) {
  this.success = null;
  this.failure = null;
  this.groupNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.GroupNotFoundException) {
    this.groupNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.FindUsersResultsStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.groupNotFound !== undefined && args.groupNotFound !== null) {
      this.groupNotFound = args.groupNotFound;
    }
  }
};
PlatformService_findUsersInGroup_result.prototype = {};
PlatformService_findUsersInGroup_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.FindUsersResultsStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.groupNotFound = new ttypes.GroupNotFoundException();
        this.groupNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_findUsersInGroup_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_findUsersInGroup_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.groupNotFound !== null && this.groupNotFound !== undefined) {
    output.writeFieldBegin('groupNotFound', Thrift.Type.STRUCT, 2);
    this.groupNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_args = function(args) {
  this.companyId = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
  }
};
PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_args.prototype = {};
PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_result.prototype = {};
PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserDateTimeDisplayTimeZone_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_getUserDateTimeDisplayTimeZone_args.prototype = {};
PlatformService_getUserDateTimeDisplayTimeZone_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserDateTimeDisplayTimeZone_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserDateTimeDisplayTimeZone_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserDateTimeDisplayTimeZone_result = function(args) {
  this.success = null;
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getUserDateTimeDisplayTimeZone_result.prototype = {};
PlatformService_getUserDateTimeDisplayTimeZone_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserDateTimeDisplayTimeZone_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserDateTimeDisplayTimeZone_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getApplicationsForUserByUserId_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_getApplicationsForUserByUserId_args.prototype = {};
PlatformService_getApplicationsForUserByUserId_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getApplicationsForUserByUserId_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getApplicationsForUserByUserId_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getApplicationsForUserByUserId_result = function(args) {
  this.success = null;
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [null]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getApplicationsForUserByUserId_result.prototype = {};
PlatformService_getApplicationsForUserByUserId_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3106 = input.readListBegin();
        var _size105 = _rtmp3106.size || 0;
        for (var _i107 = 0; _i107 < _size105; ++_i107) {
          var elem108 = null;
          elem108 = input.readString();
          this.success.push(elem108);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getApplicationsForUserByUserId_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getApplicationsForUserByUserId_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRING, this.success.length);
    for (var iter109 in this.success) {
      if (this.success.hasOwnProperty(iter109)) {
        iter109 = this.success[iter109];
        output.writeString(iter109);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getApplicationsForSystemUser_args = function(args) {
};
PlatformService_getApplicationsForSystemUser_args.prototype = {};
PlatformService_getApplicationsForSystemUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getApplicationsForSystemUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getApplicationsForSystemUser_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getApplicationsForSystemUser_result = function(args) {
  this.success = null;
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [null]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_getApplicationsForSystemUser_result.prototype = {};
PlatformService_getApplicationsForSystemUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3111 = input.readListBegin();
        var _size110 = _rtmp3111.size || 0;
        for (var _i112 = 0; _i112 < _size110; ++_i112) {
          var elem113 = null;
          elem113 = input.readString();
          this.success.push(elem113);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getApplicationsForSystemUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getApplicationsForSystemUser_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRING, this.success.length);
    for (var iter114 in this.success) {
      if (this.success.hasOwnProperty(iter114)) {
        iter114 = this.success[iter114];
        output.writeString(iter114);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getAllApplications_args = function(args) {
};
PlatformService_getAllApplications_args.prototype = {};
PlatformService_getAllApplications_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getAllApplications_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getAllApplications_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getAllApplications_result = function(args) {
  this.success = null;
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [null]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_getAllApplications_result.prototype = {};
PlatformService_getAllApplications_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3116 = input.readListBegin();
        var _size115 = _rtmp3116.size || 0;
        for (var _i117 = 0; _i117 < _size115; ++_i117) {
          var elem118 = null;
          elem118 = input.readString();
          this.success.push(elem118);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getAllApplications_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getAllApplications_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRING, this.success.length);
    for (var iter119 in this.success) {
      if (this.success.hasOwnProperty(iter119)) {
        iter119 = this.success[iter119];
        output.writeString(iter119);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_args = function(args) {
  this.companyId = null;
  this.timeZone = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.timeZone !== undefined && args.timeZone !== null) {
      this.timeZone = args.timeZone;
    }
  }
};
PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_args.prototype = {};
PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.timeZone = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.timeZone !== null && this.timeZone !== undefined) {
    output.writeFieldBegin('timeZone', Thrift.Type.STRING, 2);
    output.writeString(this.timeZone);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_result = function(args) {
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_result.prototype = {};
PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setUserDateTimeDisplayTimeZone_args = function(args) {
  this.userId = null;
  this.timeZone = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.timeZone !== undefined && args.timeZone !== null) {
      this.timeZone = args.timeZone;
    }
  }
};
PlatformService_setUserDateTimeDisplayTimeZone_args.prototype = {};
PlatformService_setUserDateTimeDisplayTimeZone_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.timeZone = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setUserDateTimeDisplayTimeZone_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setUserDateTimeDisplayTimeZone_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.timeZone !== null && this.timeZone !== undefined) {
    output.writeFieldBegin('timeZone', Thrift.Type.STRING, 2);
    output.writeString(this.timeZone);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setUserDateTimeDisplayTimeZone_result = function(args) {
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_setUserDateTimeDisplayTimeZone_result.prototype = {};
PlatformService_setUserDateTimeDisplayTimeZone_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setUserDateTimeDisplayTimeZone_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setUserDateTimeDisplayTimeZone_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_args.prototype = {};
PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_result = function(args) {
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_result.prototype = {};
PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_enableGrMessageForCompany_args = function(args) {
  this.companyId = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
  }
};
PlatformService_enableGrMessageForCompany_args.prototype = {};
PlatformService_enableGrMessageForCompany_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_enableGrMessageForCompany_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_enableGrMessageForCompany_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_enableGrMessageForCompany_result = function(args) {
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_enableGrMessageForCompany_result.prototype = {};
PlatformService_enableGrMessageForCompany_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_enableGrMessageForCompany_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_enableGrMessageForCompany_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_enableAllServicesForCompany_args = function(args) {
  this.companyId = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
  }
};
PlatformService_enableAllServicesForCompany_args.prototype = {};
PlatformService_enableAllServicesForCompany_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_enableAllServicesForCompany_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_enableAllServicesForCompany_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_enableAllServicesForCompany_result = function(args) {
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_enableAllServicesForCompany_result.prototype = {};
PlatformService_enableAllServicesForCompany_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_enableAllServicesForCompany_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_enableAllServicesForCompany_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_enableServiceForCompany_args = function(args) {
  this.companyId = null;
  this.serviceSku = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.serviceSku !== undefined && args.serviceSku !== null) {
      this.serviceSku = args.serviceSku;
    }
  }
};
PlatformService_enableServiceForCompany_args.prototype = {};
PlatformService_enableServiceForCompany_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.serviceSku = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_enableServiceForCompany_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_enableServiceForCompany_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.serviceSku !== null && this.serviceSku !== undefined) {
    output.writeFieldBegin('serviceSku', Thrift.Type.I32, 2);
    output.writeI32(this.serviceSku);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_enableServiceForCompany_result = function(args) {
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_enableServiceForCompany_result.prototype = {};
PlatformService_enableServiceForCompany_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_enableServiceForCompany_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_enableServiceForCompany_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_enableServiceForCompanyV2_args = function(args) {
  this.enableCompanyServiceStruct = null;
  if (args) {
    if (args.enableCompanyServiceStruct !== undefined && args.enableCompanyServiceStruct !== null) {
      this.enableCompanyServiceStruct = new ttypes.EnableCompanyServiceStruct(args.enableCompanyServiceStruct);
    }
  }
};
PlatformService_enableServiceForCompanyV2_args.prototype = {};
PlatformService_enableServiceForCompanyV2_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.enableCompanyServiceStruct = new ttypes.EnableCompanyServiceStruct();
        this.enableCompanyServiceStruct.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_enableServiceForCompanyV2_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_enableServiceForCompanyV2_args');
  if (this.enableCompanyServiceStruct !== null && this.enableCompanyServiceStruct !== undefined) {
    output.writeFieldBegin('enableCompanyServiceStruct', Thrift.Type.STRUCT, 1);
    this.enableCompanyServiceStruct.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_enableServiceForCompanyV2_result = function(args) {
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_enableServiceForCompanyV2_result.prototype = {};
PlatformService_enableServiceForCompanyV2_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_enableServiceForCompanyV2_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_enableServiceForCompanyV2_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_enableReportServiceForCompany_args = function(args) {
  this.companyId = null;
  this.reportPackCode = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.reportPackCode !== undefined && args.reportPackCode !== null) {
      this.reportPackCode = args.reportPackCode;
    }
  }
};
PlatformService_enableReportServiceForCompany_args.prototype = {};
PlatformService_enableReportServiceForCompany_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.reportPackCode = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_enableReportServiceForCompany_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_enableReportServiceForCompany_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.reportPackCode !== null && this.reportPackCode !== undefined) {
    output.writeFieldBegin('reportPackCode', Thrift.Type.I32, 2);
    output.writeI32(this.reportPackCode);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_enableReportServiceForCompany_result = function(args) {
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_enableReportServiceForCompany_result.prototype = {};
PlatformService_enableReportServiceForCompany_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_enableReportServiceForCompany_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_enableReportServiceForCompany_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_disableServiceForCompany_args = function(args) {
  this.companyId = null;
  this.serviceSku = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.serviceSku !== undefined && args.serviceSku !== null) {
      this.serviceSku = args.serviceSku;
    }
  }
};
PlatformService_disableServiceForCompany_args.prototype = {};
PlatformService_disableServiceForCompany_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.serviceSku = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_disableServiceForCompany_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_disableServiceForCompany_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.serviceSku !== null && this.serviceSku !== undefined) {
    output.writeFieldBegin('serviceSku', Thrift.Type.I32, 2);
    output.writeI32(this.serviceSku);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_disableServiceForCompany_result = function(args) {
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_disableServiceForCompany_result.prototype = {};
PlatformService_disableServiceForCompany_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_disableServiceForCompany_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_disableServiceForCompany_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_vHostExists_args = function(args) {
  this.vHostPrefix = null;
  if (args) {
    if (args.vHostPrefix !== undefined && args.vHostPrefix !== null) {
      this.vHostPrefix = args.vHostPrefix;
    }
  }
};
PlatformService_vHostExists_args.prototype = {};
PlatformService_vHostExists_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.vHostPrefix = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_vHostExists_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_vHostExists_args');
  if (this.vHostPrefix !== null && this.vHostPrefix !== undefined) {
    output.writeFieldBegin('vHostPrefix', Thrift.Type.STRING, 1);
    output.writeString(this.vHostPrefix);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_vHostExists_result = function(args) {
  this.success = null;
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_vHostExists_result.prototype = {};
PlatformService_vHostExists_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_vHostExists_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_vHostExists_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getArchiveContactInformation_args = function(args) {
  this.archiveId = null;
  if (args) {
    if (args.archiveId !== undefined && args.archiveId !== null) {
      this.archiveId = args.archiveId;
    }
  }
};
PlatformService_getArchiveContactInformation_args.prototype = {};
PlatformService_getArchiveContactInformation_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.archiveId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getArchiveContactInformation_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getArchiveContactInformation_args');
  if (this.archiveId !== null && this.archiveId !== undefined) {
    output.writeFieldBegin('archiveId', Thrift.Type.STRING, 1);
    output.writeString(this.archiveId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getArchiveContactInformation_result = function(args) {
  this.success = null;
  this.failure = null;
  this.archiveNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.ArchiveNotFoundException) {
    this.archiveNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.ArchiveContactStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.archiveNotFound !== undefined && args.archiveNotFound !== null) {
      this.archiveNotFound = args.archiveNotFound;
    }
  }
};
PlatformService_getArchiveContactInformation_result.prototype = {};
PlatformService_getArchiveContactInformation_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.ArchiveContactStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.archiveNotFound = new ttypes.ArchiveNotFoundException();
        this.archiveNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getArchiveContactInformation_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getArchiveContactInformation_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.archiveNotFound !== null && this.archiveNotFound !== undefined) {
    output.writeFieldBegin('archiveNotFound', Thrift.Type.STRUCT, 2);
    this.archiveNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getOperationsForUser_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_getOperationsForUser_args.prototype = {};
PlatformService_getOperationsForUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getOperationsForUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getOperationsForUser_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getOperationsForUser_result = function(args) {
  this.success = null;
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [null]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getOperationsForUser_result.prototype = {};
PlatformService_getOperationsForUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3121 = input.readListBegin();
        var _size120 = _rtmp3121.size || 0;
        for (var _i122 = 0; _i122 < _size120; ++_i122) {
          var elem123 = null;
          elem123 = input.readString();
          this.success.push(elem123);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getOperationsForUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getOperationsForUser_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRING, this.success.length);
    for (var iter124 in this.success) {
      if (this.success.hasOwnProperty(iter124)) {
        iter124 = this.success[iter124];
        output.writeString(iter124);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getEntitlementsForUser_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_getEntitlementsForUser_args.prototype = {};
PlatformService_getEntitlementsForUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getEntitlementsForUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getEntitlementsForUser_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getEntitlementsForUser_result = function(args) {
  this.success = null;
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.EntitlementStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getEntitlementsForUser_result.prototype = {};
PlatformService_getEntitlementsForUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3126 = input.readListBegin();
        var _size125 = _rtmp3126.size || 0;
        for (var _i127 = 0; _i127 < _size125; ++_i127) {
          var elem128 = null;
          elem128 = new ttypes.EntitlementStruct();
          elem128.read(input);
          this.success.push(elem128);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getEntitlementsForUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getEntitlementsForUser_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter129 in this.success) {
      if (this.success.hasOwnProperty(iter129)) {
        iter129 = this.success[iter129];
        iter129.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getServiceManagerOperationsForUser_args = function(args) {
  this.userId = null;
  this.companyId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
  }
};
PlatformService_getServiceManagerOperationsForUser_args.prototype = {};
PlatformService_getServiceManagerOperationsForUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getServiceManagerOperationsForUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getServiceManagerOperationsForUser_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 2);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getServiceManagerOperationsForUser_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [null]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getServiceManagerOperationsForUser_result.prototype = {};
PlatformService_getServiceManagerOperationsForUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3131 = input.readListBegin();
        var _size130 = _rtmp3131.size || 0;
        for (var _i132 = 0; _i132 < _size130; ++_i132) {
          var elem133 = null;
          elem133 = input.readString();
          this.success.push(elem133);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getServiceManagerOperationsForUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getServiceManagerOperationsForUser_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRING, this.success.length);
    for (var iter134 in this.success) {
      if (this.success.hasOwnProperty(iter134)) {
        iter134 = this.success[iter134];
        output.writeString(iter134);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 3);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getOperationsForUserByApplicationName_args = function(args) {
  this.userId = null;
  this.applicationName = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.applicationName !== undefined && args.applicationName !== null) {
      this.applicationName = args.applicationName;
    }
  }
};
PlatformService_getOperationsForUserByApplicationName_args.prototype = {};
PlatformService_getOperationsForUserByApplicationName_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.applicationName = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getOperationsForUserByApplicationName_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getOperationsForUserByApplicationName_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.applicationName !== null && this.applicationName !== undefined) {
    output.writeFieldBegin('applicationName', Thrift.Type.I32, 2);
    output.writeI32(this.applicationName);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getOperationsForUserByApplicationName_result = function(args) {
  this.success = null;
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [null]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getOperationsForUserByApplicationName_result.prototype = {};
PlatformService_getOperationsForUserByApplicationName_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3136 = input.readListBegin();
        var _size135 = _rtmp3136.size || 0;
        for (var _i137 = 0; _i137 < _size135; ++_i137) {
          var elem138 = null;
          elem138 = input.readString();
          this.success.push(elem138);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getOperationsForUserByApplicationName_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getOperationsForUserByApplicationName_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRING, this.success.length);
    for (var iter139 in this.success) {
      if (this.success.hasOwnProperty(iter139)) {
        iter139 = this.success[iter139];
        output.writeString(iter139);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserInfo_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_getUserInfo_args.prototype = {};
PlatformService_getUserInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserInfo_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserInfo_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserInfo_result = function(args) {
  this.success = null;
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.UserInfoStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getUserInfo_result.prototype = {};
PlatformService_getUserInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.UserInfoStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserInfo_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserInfo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserInfoByEmail_args = function(args) {
  this.email = null;
  if (args) {
    if (args.email !== undefined && args.email !== null) {
      this.email = args.email;
    }
  }
};
PlatformService_getUserInfoByEmail_args.prototype = {};
PlatformService_getUserInfoByEmail_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.email = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserInfoByEmail_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserInfoByEmail_args');
  if (this.email !== null && this.email !== undefined) {
    output.writeFieldBegin('email', Thrift.Type.STRING, 1);
    output.writeString(this.email);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserInfoByEmail_result = function(args) {
  this.success = null;
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.UserInfoStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getUserInfoByEmail_result.prototype = {};
PlatformService_getUserInfoByEmail_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.UserInfoStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserInfoByEmail_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserInfoByEmail_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserInfoBasic_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_getUserInfoBasic_args.prototype = {};
PlatformService_getUserInfoBasic_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserInfoBasic_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserInfoBasic_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserInfoBasic_result = function(args) {
  this.success = null;
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.UserInfoBasicStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getUserInfoBasic_result.prototype = {};
PlatformService_getUserInfoBasic_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.UserInfoBasicStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserInfoBasic_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserInfoBasic_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getSystemUserInfo_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_getSystemUserInfo_args.prototype = {};
PlatformService_getSystemUserInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getSystemUserInfo_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getSystemUserInfo_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getSystemUserInfo_result = function(args) {
  this.success = null;
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.SystemUserInfoStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getSystemUserInfo_result.prototype = {};
PlatformService_getSystemUserInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.SystemUserInfoStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getSystemUserInfo_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getSystemUserInfo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserInfoWithSupportMessage_args = function(args) {
  this.userId = null;
  this.language = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.language !== undefined && args.language !== null) {
      this.language = args.language;
    }
  }
};
PlatformService_getUserInfoWithSupportMessage_args.prototype = {};
PlatformService_getUserInfoWithSupportMessage_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.language = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserInfoWithSupportMessage_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserInfoWithSupportMessage_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.language !== null && this.language !== undefined) {
    output.writeFieldBegin('language', Thrift.Type.STRING, 2);
    output.writeString(this.language);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserInfoWithSupportMessage_result = function(args) {
  this.success = null;
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.UserInfoStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getUserInfoWithSupportMessage_result.prototype = {};
PlatformService_getUserInfoWithSupportMessage_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.UserInfoStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserInfoWithSupportMessage_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserInfoWithSupportMessage_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getProvisionedServices_args = function(args) {
  this.companyId = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
  }
};
PlatformService_getProvisionedServices_args.prototype = {};
PlatformService_getProvisionedServices_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getProvisionedServices_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getProvisionedServices_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getProvisionedServices_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [null]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_getProvisionedServices_result.prototype = {};
PlatformService_getProvisionedServices_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3141 = input.readListBegin();
        var _size140 = _rtmp3141.size || 0;
        for (var _i142 = 0; _i142 < _size140; ++_i142) {
          var elem143 = null;
          elem143 = input.readString();
          this.success.push(elem143);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getProvisionedServices_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getProvisionedServices_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRING, this.success.length);
    for (var iter144 in this.success) {
      if (this.success.hasOwnProperty(iter144)) {
        iter144 = this.success[iter144];
        output.writeString(iter144);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setUserCustomerUserId_args = function(args) {
  this.userId = null;
  this.customerUserId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.customerUserId !== undefined && args.customerUserId !== null) {
      this.customerUserId = args.customerUserId;
    }
  }
};
PlatformService_setUserCustomerUserId_args.prototype = {};
PlatformService_setUserCustomerUserId_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.customerUserId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setUserCustomerUserId_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setUserCustomerUserId_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.customerUserId !== null && this.customerUserId !== undefined) {
    output.writeFieldBegin('customerUserId', Thrift.Type.STRING, 2);
    output.writeString(this.customerUserId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setUserCustomerUserId_result = function(args) {
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_setUserCustomerUserId_result.prototype = {};
PlatformService_setUserCustomerUserId_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setUserCustomerUserId_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setUserCustomerUserId_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setCompanySupportContactInformation_args = function(args) {
  this.companyId = null;
  this.supportMessages = null;
  this.useSupportMessages = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.supportMessages !== undefined && args.supportMessages !== null) {
      this.supportMessages = Thrift.copyMap(args.supportMessages, [null]);
    }
    if (args.useSupportMessages !== undefined && args.useSupportMessages !== null) {
      this.useSupportMessages = args.useSupportMessages;
    }
  }
};
PlatformService_setCompanySupportContactInformation_args.prototype = {};
PlatformService_setCompanySupportContactInformation_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.MAP) {
        this.supportMessages = {};
        var _rtmp3146 = input.readMapBegin();
        var _size145 = _rtmp3146.size || 0;
        for (var _i147 = 0; _i147 < _size145; ++_i147) {
          var key148 = null;
          var val149 = null;
          key148 = input.readString();
          val149 = input.readString();
          this.supportMessages[key148] = val149;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.BOOL) {
        this.useSupportMessages = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setCompanySupportContactInformation_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setCompanySupportContactInformation_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.supportMessages !== null && this.supportMessages !== undefined) {
    output.writeFieldBegin('supportMessages', Thrift.Type.MAP, 2);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRING, Thrift.objectLength(this.supportMessages));
    for (var kiter150 in this.supportMessages) {
      if (this.supportMessages.hasOwnProperty(kiter150)) {
        var viter151 = this.supportMessages[kiter150];
        output.writeString(kiter150);
        output.writeString(viter151);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.useSupportMessages !== null && this.useSupportMessages !== undefined) {
    output.writeFieldBegin('useSupportMessages', Thrift.Type.BOOL, 3);
    output.writeBool(this.useSupportMessages);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setCompanySupportContactInformation_result = function(args) {
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_setCompanySupportContactInformation_result.prototype = {};
PlatformService_setCompanySupportContactInformation_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setCompanySupportContactInformation_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setCompanySupportContactInformation_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deactivateUser_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_deactivateUser_args.prototype = {};
PlatformService_deactivateUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deactivateUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deactivateUser_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deactivateUser_result = function(args) {
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_deactivateUser_result.prototype = {};
PlatformService_deactivateUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deactivateUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deactivateUser_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_activateUser_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_activateUser_args.prototype = {};
PlatformService_activateUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_activateUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_activateUser_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_activateUser_result = function(args) {
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_activateUser_result.prototype = {};
PlatformService_activateUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_activateUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_activateUser_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyProfile_args = function(args) {
  this.companyId = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
  }
};
PlatformService_getCompanyProfile_args.prototype = {};
PlatformService_getCompanyProfile_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyProfile_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyProfile_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyProfile_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.CompanyProfileStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_getCompanyProfile_result.prototype = {};
PlatformService_getCompanyProfile_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.CompanyProfileStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyProfile_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyProfile_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyProfileBasic_args = function(args) {
  this.companyId = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
  }
};
PlatformService_getCompanyProfileBasic_args.prototype = {};
PlatformService_getCompanyProfileBasic_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyProfileBasic_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyProfileBasic_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyProfileBasic_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.CompanyProfileBasicStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_getCompanyProfileBasic_result.prototype = {};
PlatformService_getCompanyProfileBasic_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.CompanyProfileBasicStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyProfileBasic_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyProfileBasic_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyLogo_args = function(args) {
  this.companyId = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
  }
};
PlatformService_getCompanyLogo_args.prototype = {};
PlatformService_getCompanyLogo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyLogo_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyLogo_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyLogo_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.CompanyLogoStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_getCompanyLogo_result.prototype = {};
PlatformService_getCompanyLogo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.CompanyLogoStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyLogo_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyLogo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setCompanyProfile_args = function(args) {
  this.companyProfile = null;
  if (args) {
    if (args.companyProfile !== undefined && args.companyProfile !== null) {
      this.companyProfile = new ttypes.CompanyProfileStruct(args.companyProfile);
    }
  }
};
PlatformService_setCompanyProfile_args.prototype = {};
PlatformService_setCompanyProfile_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyProfile = new ttypes.CompanyProfileStruct();
        this.companyProfile.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setCompanyProfile_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setCompanyProfile_args');
  if (this.companyProfile !== null && this.companyProfile !== undefined) {
    output.writeFieldBegin('companyProfile', Thrift.Type.STRUCT, 1);
    this.companyProfile.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setCompanyProfile_result = function(args) {
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_setCompanyProfile_result.prototype = {};
PlatformService_setCompanyProfile_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setCompanyProfile_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setCompanyProfile_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserProfile_args = function(args) {
  this.userId = null;
  this.actingUserId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.actingUserId !== undefined && args.actingUserId !== null) {
      this.actingUserId = args.actingUserId;
    }
  }
};
PlatformService_getUserProfile_args.prototype = {};
PlatformService_getUserProfile_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.actingUserId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserProfile_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserProfile_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.actingUserId !== null && this.actingUserId !== undefined) {
    output.writeFieldBegin('actingUserId', Thrift.Type.I64, 2);
    output.writeI64(this.actingUserId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserProfile_result = function(args) {
  this.success = null;
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.UserProfileStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getUserProfile_result.prototype = {};
PlatformService_getUserProfile_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.UserProfileStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserProfile_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserProfile_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setUserProfile_args = function(args) {
  this.userId = null;
  this.userSetAttributes = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.userSetAttributes !== undefined && args.userSetAttributes !== null) {
      this.userSetAttributes = new ttypes.UserProfileUserSetAttributesStruct(args.userSetAttributes);
    }
  }
};
PlatformService_setUserProfile_args.prototype = {};
PlatformService_setUserProfile_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userSetAttributes = new ttypes.UserProfileUserSetAttributesStruct();
        this.userSetAttributes.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setUserProfile_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setUserProfile_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.userSetAttributes !== null && this.userSetAttributes !== undefined) {
    output.writeFieldBegin('userSetAttributes', Thrift.Type.STRUCT, 2);
    this.userSetAttributes.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setUserProfile_result = function(args) {
  this.failure = null;
  this.userProfileEditability = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserProfileEditabilityException) {
    this.userProfileEditability = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userProfileEditability !== undefined && args.userProfileEditability !== null) {
      this.userProfileEditability = args.userProfileEditability;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_setUserProfile_result.prototype = {};
PlatformService_setUserProfile_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userProfileEditability = new ttypes.UserProfileEditabilityException();
        this.userProfileEditability.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setUserProfile_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setUserProfile_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userProfileEditability !== null && this.userProfileEditability !== undefined) {
    output.writeFieldBegin('userProfileEditability', Thrift.Type.STRUCT, 2);
    this.userProfileEditability.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 3);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_userAutoComplete_args = function(args) {
  this.companyId = null;
  this.searchTerm = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.searchTerm !== undefined && args.searchTerm !== null) {
      this.searchTerm = args.searchTerm;
    }
  }
};
PlatformService_userAutoComplete_args.prototype = {};
PlatformService_userAutoComplete_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.searchTerm = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_userAutoComplete_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_userAutoComplete_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.searchTerm !== null && this.searchTerm !== undefined) {
    output.writeFieldBegin('searchTerm', Thrift.Type.STRING, 2);
    output.writeString(this.searchTerm);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_userAutoComplete_result = function(args) {
  this.success = null;
  this.failure = null;
  this.invalidSearchCriteria = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.InvalidSearchCriteriaException) {
    this.invalidSearchCriteria = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.UserAutoCompleteResultStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.invalidSearchCriteria !== undefined && args.invalidSearchCriteria !== null) {
      this.invalidSearchCriteria = args.invalidSearchCriteria;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_userAutoComplete_result.prototype = {};
PlatformService_userAutoComplete_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3153 = input.readListBegin();
        var _size152 = _rtmp3153.size || 0;
        for (var _i154 = 0; _i154 < _size152; ++_i154) {
          var elem155 = null;
          elem155 = new ttypes.UserAutoCompleteResultStruct();
          elem155.read(input);
          this.success.push(elem155);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.invalidSearchCriteria = new ttypes.InvalidSearchCriteriaException();
        this.invalidSearchCriteria.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_userAutoComplete_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_userAutoComplete_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter156 in this.success) {
      if (this.success.hasOwnProperty(iter156)) {
        iter156 = this.success[iter156];
        iter156.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.invalidSearchCriteria !== null && this.invalidSearchCriteria !== undefined) {
    output.writeFieldBegin('invalidSearchCriteria', Thrift.Type.STRUCT, 2);
    this.invalidSearchCriteria.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 3);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createExtendedUserProperty_args = function(args) {
  this.companyId = null;
  this.name = null;
  this.dataType = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.name !== undefined && args.name !== null) {
      this.name = args.name;
    }
    if (args.dataType !== undefined && args.dataType !== null) {
      this.dataType = args.dataType;
    }
  }
};
PlatformService_createExtendedUserProperty_args.prototype = {};
PlatformService_createExtendedUserProperty_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.dataType = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createExtendedUserProperty_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createExtendedUserProperty_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.dataType !== null && this.dataType !== undefined) {
    output.writeFieldBegin('dataType', Thrift.Type.STRING, 3);
    output.writeString(this.dataType);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createExtendedUserProperty_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_createExtendedUserProperty_result.prototype = {};
PlatformService_createExtendedUserProperty_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createExtendedUserProperty_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createExtendedUserProperty_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createExtendedUserPropertyV2_args = function(args) {
  this.createStruct = null;
  if (args) {
    if (args.createStruct !== undefined && args.createStruct !== null) {
      this.createStruct = new ttypes.CreateExtendedPropertyStruct(args.createStruct);
    }
  }
};
PlatformService_createExtendedUserPropertyV2_args.prototype = {};
PlatformService_createExtendedUserPropertyV2_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.createStruct = new ttypes.CreateExtendedPropertyStruct();
        this.createStruct.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createExtendedUserPropertyV2_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createExtendedUserPropertyV2_args');
  if (this.createStruct !== null && this.createStruct !== undefined) {
    output.writeFieldBegin('createStruct', Thrift.Type.STRUCT, 1);
    this.createStruct.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createExtendedUserPropertyV2_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_createExtendedUserPropertyV2_result.prototype = {};
PlatformService_createExtendedUserPropertyV2_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createExtendedUserPropertyV2_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createExtendedUserPropertyV2_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deleteExtendedUserProperty_args = function(args) {
  this.extendedUserPropertyId = null;
  if (args) {
    if (args.extendedUserPropertyId !== undefined && args.extendedUserPropertyId !== null) {
      this.extendedUserPropertyId = args.extendedUserPropertyId;
    }
  }
};
PlatformService_deleteExtendedUserProperty_args.prototype = {};
PlatformService_deleteExtendedUserProperty_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.extendedUserPropertyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deleteExtendedUserProperty_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deleteExtendedUserProperty_args');
  if (this.extendedUserPropertyId !== null && this.extendedUserPropertyId !== undefined) {
    output.writeFieldBegin('extendedUserPropertyId', Thrift.Type.I32, 1);
    output.writeI32(this.extendedUserPropertyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deleteExtendedUserProperty_result = function(args) {
  this.failure = null;
  this.companyExtendedUserPropertyNotFoundException = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyExtendedUserPropertyNotFoundException) {
    this.companyExtendedUserPropertyNotFoundException = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyExtendedUserPropertyNotFoundException !== undefined && args.companyExtendedUserPropertyNotFoundException !== null) {
      this.companyExtendedUserPropertyNotFoundException = args.companyExtendedUserPropertyNotFoundException;
    }
  }
};
PlatformService_deleteExtendedUserProperty_result.prototype = {};
PlatformService_deleteExtendedUserProperty_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyExtendedUserPropertyNotFoundException = new ttypes.CompanyExtendedUserPropertyNotFoundException();
        this.companyExtendedUserPropertyNotFoundException.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deleteExtendedUserProperty_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deleteExtendedUserProperty_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyExtendedUserPropertyNotFoundException !== null && this.companyExtendedUserPropertyNotFoundException !== undefined) {
    output.writeFieldBegin('companyExtendedUserPropertyNotFoundException', Thrift.Type.STRUCT, 2);
    this.companyExtendedUserPropertyNotFoundException.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createExtendedPropertyValues_args = function(args) {
  this.userId = null;
  this.extendedPropertyName = null;
  this.values = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.extendedPropertyName !== undefined && args.extendedPropertyName !== null) {
      this.extendedPropertyName = args.extendedPropertyName;
    }
    if (args.values !== undefined && args.values !== null) {
      this.values = Thrift.copyList(args.values, [null]);
    }
  }
};
PlatformService_createExtendedPropertyValues_args.prototype = {};
PlatformService_createExtendedPropertyValues_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.extendedPropertyName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        this.values = [];
        var _rtmp3158 = input.readListBegin();
        var _size157 = _rtmp3158.size || 0;
        for (var _i159 = 0; _i159 < _size157; ++_i159) {
          var elem160 = null;
          elem160 = input.readString();
          this.values.push(elem160);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createExtendedPropertyValues_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createExtendedPropertyValues_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.extendedPropertyName !== null && this.extendedPropertyName !== undefined) {
    output.writeFieldBegin('extendedPropertyName', Thrift.Type.STRING, 2);
    output.writeString(this.extendedPropertyName);
    output.writeFieldEnd();
  }
  if (this.values !== null && this.values !== undefined) {
    output.writeFieldBegin('values', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.STRING, this.values.length);
    for (var iter161 in this.values) {
      if (this.values.hasOwnProperty(iter161)) {
        iter161 = this.values[iter161];
        output.writeString(iter161);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createExtendedPropertyValues_result = function(args) {
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_createExtendedPropertyValues_result.prototype = {};
PlatformService_createExtendedPropertyValues_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createExtendedPropertyValues_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createExtendedPropertyValues_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createGroupExtendedPropertyValues_args = function(args) {
  this.companyGroupId = null;
  this.extendedPropertyName = null;
  this.values = null;
  if (args) {
    if (args.companyGroupId !== undefined && args.companyGroupId !== null) {
      this.companyGroupId = args.companyGroupId;
    }
    if (args.extendedPropertyName !== undefined && args.extendedPropertyName !== null) {
      this.extendedPropertyName = args.extendedPropertyName;
    }
    if (args.values !== undefined && args.values !== null) {
      this.values = Thrift.copyList(args.values, [null]);
    }
  }
};
PlatformService_createGroupExtendedPropertyValues_args.prototype = {};
PlatformService_createGroupExtendedPropertyValues_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyGroupId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.extendedPropertyName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        this.values = [];
        var _rtmp3163 = input.readListBegin();
        var _size162 = _rtmp3163.size || 0;
        for (var _i164 = 0; _i164 < _size162; ++_i164) {
          var elem165 = null;
          elem165 = input.readString();
          this.values.push(elem165);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createGroupExtendedPropertyValues_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createGroupExtendedPropertyValues_args');
  if (this.companyGroupId !== null && this.companyGroupId !== undefined) {
    output.writeFieldBegin('companyGroupId', Thrift.Type.I32, 1);
    output.writeI32(this.companyGroupId);
    output.writeFieldEnd();
  }
  if (this.extendedPropertyName !== null && this.extendedPropertyName !== undefined) {
    output.writeFieldBegin('extendedPropertyName', Thrift.Type.STRING, 2);
    output.writeString(this.extendedPropertyName);
    output.writeFieldEnd();
  }
  if (this.values !== null && this.values !== undefined) {
    output.writeFieldBegin('values', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.STRING, this.values.length);
    for (var iter166 in this.values) {
      if (this.values.hasOwnProperty(iter166)) {
        iter166 = this.values[iter166];
        output.writeString(iter166);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createGroupExtendedPropertyValues_result = function(args) {
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_createGroupExtendedPropertyValues_result.prototype = {};
PlatformService_createGroupExtendedPropertyValues_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createGroupExtendedPropertyValues_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createGroupExtendedPropertyValues_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCommunicationPlatforms_args = function(args) {
};
PlatformService_getCommunicationPlatforms_args.prototype = {};
PlatformService_getCommunicationPlatforms_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCommunicationPlatforms_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCommunicationPlatforms_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCommunicationPlatforms_result = function(args) {
  this.success = null;
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.CommunicationPlatformStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_getCommunicationPlatforms_result.prototype = {};
PlatformService_getCommunicationPlatforms_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3168 = input.readListBegin();
        var _size167 = _rtmp3168.size || 0;
        for (var _i169 = 0; _i169 < _size167; ++_i169) {
          var elem170 = null;
          elem170 = new ttypes.CommunicationPlatformStruct();
          elem170.read(input);
          this.success.push(elem170);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCommunicationPlatforms_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCommunicationPlatforms_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter171 in this.success) {
      if (this.success.hasOwnProperty(iter171)) {
        iter171 = this.success[iter171];
        iter171.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_assignCommunicationPlatform_args = function(args) {
  this.companyId = null;
  this.platformCode = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.platformCode !== undefined && args.platformCode !== null) {
      this.platformCode = args.platformCode;
    }
  }
};
PlatformService_assignCommunicationPlatform_args.prototype = {};
PlatformService_assignCommunicationPlatform_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.platformCode = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_assignCommunicationPlatform_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_assignCommunicationPlatform_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.platformCode !== null && this.platformCode !== undefined) {
    output.writeFieldBegin('platformCode', Thrift.Type.STRING, 2);
    output.writeString(this.platformCode);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_assignCommunicationPlatform_result = function(args) {
  this.failure = null;
  this.companyNotFound = null;
  this.communicationPlatformNotFoundException = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args instanceof ttypes.CommunicationPlatformNotFoundException) {
    this.communicationPlatformNotFoundException = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
    if (args.communicationPlatformNotFoundException !== undefined && args.communicationPlatformNotFoundException !== null) {
      this.communicationPlatformNotFoundException = args.communicationPlatformNotFoundException;
    }
  }
};
PlatformService_assignCommunicationPlatform_result.prototype = {};
PlatformService_assignCommunicationPlatform_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.communicationPlatformNotFoundException = new ttypes.CommunicationPlatformNotFoundException();
        this.communicationPlatformNotFoundException.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_assignCommunicationPlatform_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_assignCommunicationPlatform_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.communicationPlatformNotFoundException !== null && this.communicationPlatformNotFoundException !== undefined) {
    output.writeFieldBegin('communicationPlatformNotFoundException', Thrift.Type.STRUCT, 3);
    this.communicationPlatformNotFoundException.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyCommunicationPlatforms_args = function(args) {
  this.companyId = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
  }
};
PlatformService_getCompanyCommunicationPlatforms_args.prototype = {};
PlatformService_getCompanyCommunicationPlatforms_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyCommunicationPlatforms_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyCommunicationPlatforms_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyCommunicationPlatforms_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.CompanyCommunicationPlatformStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_getCompanyCommunicationPlatforms_result.prototype = {};
PlatformService_getCompanyCommunicationPlatforms_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3173 = input.readListBegin();
        var _size172 = _rtmp3173.size || 0;
        for (var _i174 = 0; _i174 < _size172; ++_i174) {
          var elem175 = null;
          elem175 = new ttypes.CompanyCommunicationPlatformStruct();
          elem175.read(input);
          this.success.push(elem175);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyCommunicationPlatforms_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyCommunicationPlatforms_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter176 in this.success) {
      if (this.success.hasOwnProperty(iter176)) {
        iter176 = this.success[iter176];
        iter176.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_findUserAliases_args = function(args) {
  this.queryParameters = null;
  if (args) {
    if (args.queryParameters !== undefined && args.queryParameters !== null) {
      this.queryParameters = new ttypes.UserAliasQueryStruct(args.queryParameters);
    }
  }
};
PlatformService_findUserAliases_args.prototype = {};
PlatformService_findUserAliases_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.queryParameters = new ttypes.UserAliasQueryStruct();
        this.queryParameters.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_findUserAliases_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_findUserAliases_args');
  if (this.queryParameters !== null && this.queryParameters !== undefined) {
    output.writeFieldBegin('queryParameters', Thrift.Type.STRUCT, 1);
    this.queryParameters.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_findUserAliases_result = function(args) {
  this.success = null;
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.FindUserAliasesResultStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_findUserAliases_result.prototype = {};
PlatformService_findUserAliases_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.FindUserAliasesResultStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_findUserAliases_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_findUserAliases_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getRolesForCompany_args = function(args) {
  this.companyId = null;
  this.applicationName = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.applicationName !== undefined && args.applicationName !== null) {
      this.applicationName = args.applicationName;
    }
  }
};
PlatformService_getRolesForCompany_args.prototype = {};
PlatformService_getRolesForCompany_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.applicationName = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getRolesForCompany_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getRolesForCompany_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.applicationName !== null && this.applicationName !== undefined) {
    output.writeFieldBegin('applicationName', Thrift.Type.I32, 2);
    output.writeI32(this.applicationName);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getRolesForCompany_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  this.companyApplicationNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args instanceof ttypes.CompanyApplicationNotFoundException) {
    this.companyApplicationNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.RoleStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
    if (args.companyApplicationNotFound !== undefined && args.companyApplicationNotFound !== null) {
      this.companyApplicationNotFound = args.companyApplicationNotFound;
    }
  }
};
PlatformService_getRolesForCompany_result.prototype = {};
PlatformService_getRolesForCompany_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3178 = input.readListBegin();
        var _size177 = _rtmp3178.size || 0;
        for (var _i179 = 0; _i179 < _size177; ++_i179) {
          var elem180 = null;
          elem180 = new ttypes.RoleStruct();
          elem180.read(input);
          this.success.push(elem180);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyApplicationNotFound = new ttypes.CompanyApplicationNotFoundException();
        this.companyApplicationNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getRolesForCompany_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getRolesForCompany_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter181 in this.success) {
      if (this.success.hasOwnProperty(iter181)) {
        iter181 = this.success[iter181];
        iter181.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.companyApplicationNotFound !== null && this.companyApplicationNotFound !== undefined) {
    output.writeFieldBegin('companyApplicationNotFound', Thrift.Type.STRUCT, 3);
    this.companyApplicationNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserRoles_args = function(args) {
  this.userId = null;
  this.applicationInstance = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.applicationInstance !== undefined && args.applicationInstance !== null) {
      this.applicationInstance = new ttypes.ApplicationInstanceStruct(args.applicationInstance);
    }
  }
};
PlatformService_getUserRoles_args.prototype = {};
PlatformService_getUserRoles_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.applicationInstance = new ttypes.ApplicationInstanceStruct();
        this.applicationInstance.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserRoles_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserRoles_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.applicationInstance !== null && this.applicationInstance !== undefined) {
    output.writeFieldBegin('applicationInstance', Thrift.Type.STRUCT, 2);
    this.applicationInstance.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserRoles_result = function(args) {
  this.success = null;
  this.failure = null;
  this.userNotFound = null;
  this.applicationInstanceNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args instanceof ttypes.ApplicationInstanceNotFoundException) {
    this.applicationInstanceNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.RoleStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
    if (args.applicationInstanceNotFound !== undefined && args.applicationInstanceNotFound !== null) {
      this.applicationInstanceNotFound = args.applicationInstanceNotFound;
    }
  }
};
PlatformService_getUserRoles_result.prototype = {};
PlatformService_getUserRoles_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3183 = input.readListBegin();
        var _size182 = _rtmp3183.size || 0;
        for (var _i184 = 0; _i184 < _size182; ++_i184) {
          var elem185 = null;
          elem185 = new ttypes.RoleStruct();
          elem185.read(input);
          this.success.push(elem185);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.applicationInstanceNotFound = new ttypes.ApplicationInstanceNotFoundException();
        this.applicationInstanceNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserRoles_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserRoles_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter186 in this.success) {
      if (this.success.hasOwnProperty(iter186)) {
        iter186 = this.success[iter186];
        iter186.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.applicationInstanceNotFound !== null && this.applicationInstanceNotFound !== undefined) {
    output.writeFieldBegin('applicationInstanceNotFound', Thrift.Type.STRUCT, 3);
    this.applicationInstanceNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createRole_args = function(args) {
  this.roleName = null;
  this.companyId = null;
  this.applicationName = null;
  if (args) {
    if (args.roleName !== undefined && args.roleName !== null) {
      this.roleName = args.roleName;
    }
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.applicationName !== undefined && args.applicationName !== null) {
      this.applicationName = args.applicationName;
    }
  }
};
PlatformService_createRole_args.prototype = {};
PlatformService_createRole_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.roleName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.applicationName = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createRole_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createRole_args');
  if (this.roleName !== null && this.roleName !== undefined) {
    output.writeFieldBegin('roleName', Thrift.Type.STRING, 1);
    output.writeString(this.roleName);
    output.writeFieldEnd();
  }
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 2);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.applicationName !== null && this.applicationName !== undefined) {
    output.writeFieldBegin('applicationName', Thrift.Type.I32, 3);
    output.writeI32(this.applicationName);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createRole_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  this.companyApplicationNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args instanceof ttypes.CompanyApplicationNotFoundException) {
    this.companyApplicationNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
    if (args.companyApplicationNotFound !== undefined && args.companyApplicationNotFound !== null) {
      this.companyApplicationNotFound = args.companyApplicationNotFound;
    }
  }
};
PlatformService_createRole_result.prototype = {};
PlatformService_createRole_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyApplicationNotFound = new ttypes.CompanyApplicationNotFoundException();
        this.companyApplicationNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createRole_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createRole_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.companyApplicationNotFound !== null && this.companyApplicationNotFound !== undefined) {
    output.writeFieldBegin('companyApplicationNotFound', Thrift.Type.STRUCT, 3);
    this.companyApplicationNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deleteRole_args = function(args) {
  this.roleId = null;
  if (args) {
    if (args.roleId !== undefined && args.roleId !== null) {
      this.roleId = args.roleId;
    }
  }
};
PlatformService_deleteRole_args.prototype = {};
PlatformService_deleteRole_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.roleId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deleteRole_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deleteRole_args');
  if (this.roleId !== null && this.roleId !== undefined) {
    output.writeFieldBegin('roleId', Thrift.Type.I64, 1);
    output.writeI64(this.roleId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deleteRole_result = function(args) {
  this.failure = null;
  this.roleNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.RoleNotFoundException) {
    this.roleNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.roleNotFound !== undefined && args.roleNotFound !== null) {
      this.roleNotFound = args.roleNotFound;
    }
  }
};
PlatformService_deleteRole_result.prototype = {};
PlatformService_deleteRole_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.roleNotFound = new ttypes.RoleNotFoundException();
        this.roleNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deleteRole_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deleteRole_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.roleNotFound !== null && this.roleNotFound !== undefined) {
    output.writeFieldBegin('roleNotFound', Thrift.Type.STRUCT, 2);
    this.roleNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setOperationsForRole_args = function(args) {
  this.roleId = null;
  this.operations = null;
  if (args) {
    if (args.roleId !== undefined && args.roleId !== null) {
      this.roleId = args.roleId;
    }
    if (args.operations !== undefined && args.operations !== null) {
      this.operations = Thrift.copyList(args.operations, [null]);
    }
  }
};
PlatformService_setOperationsForRole_args.prototype = {};
PlatformService_setOperationsForRole_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.roleId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        this.operations = [];
        var _rtmp3188 = input.readListBegin();
        var _size187 = _rtmp3188.size || 0;
        for (var _i189 = 0; _i189 < _size187; ++_i189) {
          var elem190 = null;
          elem190 = input.readString();
          this.operations.push(elem190);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setOperationsForRole_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setOperationsForRole_args');
  if (this.roleId !== null && this.roleId !== undefined) {
    output.writeFieldBegin('roleId', Thrift.Type.I64, 1);
    output.writeI64(this.roleId);
    output.writeFieldEnd();
  }
  if (this.operations !== null && this.operations !== undefined) {
    output.writeFieldBegin('operations', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.operations.length);
    for (var iter191 in this.operations) {
      if (this.operations.hasOwnProperty(iter191)) {
        iter191 = this.operations[iter191];
        output.writeString(iter191);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setOperationsForRole_result = function(args) {
  this.failure = null;
  this.roleNotFound = null;
  this.operationNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.RoleNotFoundException) {
    this.roleNotFound = args;
    return;
  }
  if (args instanceof ttypes.OperationNotFoundException) {
    this.operationNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.roleNotFound !== undefined && args.roleNotFound !== null) {
      this.roleNotFound = args.roleNotFound;
    }
    if (args.operationNotFound !== undefined && args.operationNotFound !== null) {
      this.operationNotFound = args.operationNotFound;
    }
  }
};
PlatformService_setOperationsForRole_result.prototype = {};
PlatformService_setOperationsForRole_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.roleNotFound = new ttypes.RoleNotFoundException();
        this.roleNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.operationNotFound = new ttypes.OperationNotFoundException();
        this.operationNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setOperationsForRole_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setOperationsForRole_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.roleNotFound !== null && this.roleNotFound !== undefined) {
    output.writeFieldBegin('roleNotFound', Thrift.Type.STRUCT, 2);
    this.roleNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.operationNotFound !== null && this.operationNotFound !== undefined) {
    output.writeFieldBegin('operationNotFound', Thrift.Type.STRUCT, 3);
    this.operationNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_addRoleToUser_args = function(args) {
  this.roleId = null;
  this.userId = null;
  this.applicationInstance = null;
  if (args) {
    if (args.roleId !== undefined && args.roleId !== null) {
      this.roleId = args.roleId;
    }
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.applicationInstance !== undefined && args.applicationInstance !== null) {
      this.applicationInstance = new ttypes.ApplicationInstanceStruct(args.applicationInstance);
    }
  }
};
PlatformService_addRoleToUser_args.prototype = {};
PlatformService_addRoleToUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.roleId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.applicationInstance = new ttypes.ApplicationInstanceStruct();
        this.applicationInstance.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_addRoleToUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_addRoleToUser_args');
  if (this.roleId !== null && this.roleId !== undefined) {
    output.writeFieldBegin('roleId', Thrift.Type.I64, 1);
    output.writeI64(this.roleId);
    output.writeFieldEnd();
  }
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 2);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.applicationInstance !== null && this.applicationInstance !== undefined) {
    output.writeFieldBegin('applicationInstance', Thrift.Type.STRUCT, 3);
    this.applicationInstance.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_addRoleToUser_result = function(args) {
  this.failure = null;
  this.roleNotFound = null;
  this.userNotFound = null;
  this.applicationInstanceNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.RoleNotFoundException) {
    this.roleNotFound = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args instanceof ttypes.ApplicationInstanceNotFoundException) {
    this.applicationInstanceNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.roleNotFound !== undefined && args.roleNotFound !== null) {
      this.roleNotFound = args.roleNotFound;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
    if (args.applicationInstanceNotFound !== undefined && args.applicationInstanceNotFound !== null) {
      this.applicationInstanceNotFound = args.applicationInstanceNotFound;
    }
  }
};
PlatformService_addRoleToUser_result.prototype = {};
PlatformService_addRoleToUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.roleNotFound = new ttypes.RoleNotFoundException();
        this.roleNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.applicationInstanceNotFound = new ttypes.ApplicationInstanceNotFoundException();
        this.applicationInstanceNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_addRoleToUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_addRoleToUser_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.roleNotFound !== null && this.roleNotFound !== undefined) {
    output.writeFieldBegin('roleNotFound', Thrift.Type.STRUCT, 2);
    this.roleNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 3);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.applicationInstanceNotFound !== null && this.applicationInstanceNotFound !== undefined) {
    output.writeFieldBegin('applicationInstanceNotFound', Thrift.Type.STRUCT, 4);
    this.applicationInstanceNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_removeRoleFromUser_args = function(args) {
  this.roleId = null;
  this.userId = null;
  this.applicationInstance = null;
  if (args) {
    if (args.roleId !== undefined && args.roleId !== null) {
      this.roleId = args.roleId;
    }
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.applicationInstance !== undefined && args.applicationInstance !== null) {
      this.applicationInstance = new ttypes.ApplicationInstanceStruct(args.applicationInstance);
    }
  }
};
PlatformService_removeRoleFromUser_args.prototype = {};
PlatformService_removeRoleFromUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.roleId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.applicationInstance = new ttypes.ApplicationInstanceStruct();
        this.applicationInstance.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_removeRoleFromUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_removeRoleFromUser_args');
  if (this.roleId !== null && this.roleId !== undefined) {
    output.writeFieldBegin('roleId', Thrift.Type.I64, 1);
    output.writeI64(this.roleId);
    output.writeFieldEnd();
  }
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 2);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.applicationInstance !== null && this.applicationInstance !== undefined) {
    output.writeFieldBegin('applicationInstance', Thrift.Type.STRUCT, 3);
    this.applicationInstance.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_removeRoleFromUser_result = function(args) {
  this.failure = null;
  this.roleNotFound = null;
  this.userNotFound = null;
  this.applicationInstanceNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.RoleNotFoundException) {
    this.roleNotFound = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args instanceof ttypes.ApplicationInstanceNotFoundException) {
    this.applicationInstanceNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.roleNotFound !== undefined && args.roleNotFound !== null) {
      this.roleNotFound = args.roleNotFound;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
    if (args.applicationInstanceNotFound !== undefined && args.applicationInstanceNotFound !== null) {
      this.applicationInstanceNotFound = args.applicationInstanceNotFound;
    }
  }
};
PlatformService_removeRoleFromUser_result.prototype = {};
PlatformService_removeRoleFromUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.roleNotFound = new ttypes.RoleNotFoundException();
        this.roleNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.applicationInstanceNotFound = new ttypes.ApplicationInstanceNotFoundException();
        this.applicationInstanceNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_removeRoleFromUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_removeRoleFromUser_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.roleNotFound !== null && this.roleNotFound !== undefined) {
    output.writeFieldBegin('roleNotFound', Thrift.Type.STRUCT, 2);
    this.roleNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 3);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.applicationInstanceNotFound !== null && this.applicationInstanceNotFound !== undefined) {
    output.writeFieldBegin('applicationInstanceNotFound', Thrift.Type.STRUCT, 4);
    this.applicationInstanceNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_addRoleToGroup_args = function(args) {
  this.roleId = null;
  this.groupId = null;
  this.applicationInstance = null;
  if (args) {
    if (args.roleId !== undefined && args.roleId !== null) {
      this.roleId = args.roleId;
    }
    if (args.groupId !== undefined && args.groupId !== null) {
      this.groupId = args.groupId;
    }
    if (args.applicationInstance !== undefined && args.applicationInstance !== null) {
      this.applicationInstance = new ttypes.ApplicationInstanceStruct(args.applicationInstance);
    }
  }
};
PlatformService_addRoleToGroup_args.prototype = {};
PlatformService_addRoleToGroup_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.roleId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.groupId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.applicationInstance = new ttypes.ApplicationInstanceStruct();
        this.applicationInstance.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_addRoleToGroup_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_addRoleToGroup_args');
  if (this.roleId !== null && this.roleId !== undefined) {
    output.writeFieldBegin('roleId', Thrift.Type.I64, 1);
    output.writeI64(this.roleId);
    output.writeFieldEnd();
  }
  if (this.groupId !== null && this.groupId !== undefined) {
    output.writeFieldBegin('groupId', Thrift.Type.I32, 2);
    output.writeI32(this.groupId);
    output.writeFieldEnd();
  }
  if (this.applicationInstance !== null && this.applicationInstance !== undefined) {
    output.writeFieldBegin('applicationInstance', Thrift.Type.STRUCT, 3);
    this.applicationInstance.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_addRoleToGroup_result = function(args) {
  this.failure = null;
  this.roleNotFound = null;
  this.groupNotFound = null;
  this.applicationInstanceNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.RoleNotFoundException) {
    this.roleNotFound = args;
    return;
  }
  if (args instanceof ttypes.GroupNotFoundException) {
    this.groupNotFound = args;
    return;
  }
  if (args instanceof ttypes.ApplicationInstanceNotFoundException) {
    this.applicationInstanceNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.roleNotFound !== undefined && args.roleNotFound !== null) {
      this.roleNotFound = args.roleNotFound;
    }
    if (args.groupNotFound !== undefined && args.groupNotFound !== null) {
      this.groupNotFound = args.groupNotFound;
    }
    if (args.applicationInstanceNotFound !== undefined && args.applicationInstanceNotFound !== null) {
      this.applicationInstanceNotFound = args.applicationInstanceNotFound;
    }
  }
};
PlatformService_addRoleToGroup_result.prototype = {};
PlatformService_addRoleToGroup_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.roleNotFound = new ttypes.RoleNotFoundException();
        this.roleNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.groupNotFound = new ttypes.GroupNotFoundException();
        this.groupNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.applicationInstanceNotFound = new ttypes.ApplicationInstanceNotFoundException();
        this.applicationInstanceNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_addRoleToGroup_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_addRoleToGroup_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.roleNotFound !== null && this.roleNotFound !== undefined) {
    output.writeFieldBegin('roleNotFound', Thrift.Type.STRUCT, 2);
    this.roleNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.groupNotFound !== null && this.groupNotFound !== undefined) {
    output.writeFieldBegin('groupNotFound', Thrift.Type.STRUCT, 3);
    this.groupNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.applicationInstanceNotFound !== null && this.applicationInstanceNotFound !== undefined) {
    output.writeFieldBegin('applicationInstanceNotFound', Thrift.Type.STRUCT, 4);
    this.applicationInstanceNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deactivateUserAlias_args = function(args) {
  this.userAlias = null;
  if (args) {
    if (args.userAlias !== undefined && args.userAlias !== null) {
      this.userAlias = new ttypes.UserAliasStruct(args.userAlias);
    }
  }
};
PlatformService_deactivateUserAlias_args.prototype = {};
PlatformService_deactivateUserAlias_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.userAlias = new ttypes.UserAliasStruct();
        this.userAlias.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deactivateUserAlias_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deactivateUserAlias_args');
  if (this.userAlias !== null && this.userAlias !== undefined) {
    output.writeFieldBegin('userAlias', Thrift.Type.STRUCT, 1);
    this.userAlias.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deactivateUserAlias_result = function(args) {
  this.failure = null;
  this.userAliasNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserAliasNotFoundException) {
    this.userAliasNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userAliasNotFound !== undefined && args.userAliasNotFound !== null) {
      this.userAliasNotFound = args.userAliasNotFound;
    }
  }
};
PlatformService_deactivateUserAlias_result.prototype = {};
PlatformService_deactivateUserAlias_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userAliasNotFound = new ttypes.UserAliasNotFoundException();
        this.userAliasNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deactivateUserAlias_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deactivateUserAlias_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userAliasNotFound !== null && this.userAliasNotFound !== undefined) {
    output.writeFieldBegin('userAliasNotFound', Thrift.Type.STRUCT, 2);
    this.userAliasNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_addAliasesToUser_args = function(args) {
  this.companyId = null;
  this.userId = null;
  this.aliasList = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.aliasList !== undefined && args.aliasList !== null) {
      this.aliasList = Thrift.copyList(args.aliasList, [ttypes.UserAliasStruct]);
    }
  }
};
PlatformService_addAliasesToUser_args.prototype = {};
PlatformService_addAliasesToUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        this.aliasList = [];
        var _rtmp3193 = input.readListBegin();
        var _size192 = _rtmp3193.size || 0;
        for (var _i194 = 0; _i194 < _size192; ++_i194) {
          var elem195 = null;
          elem195 = new ttypes.UserAliasStruct();
          elem195.read(input);
          this.aliasList.push(elem195);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_addAliasesToUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_addAliasesToUser_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 2);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.aliasList !== null && this.aliasList !== undefined) {
    output.writeFieldBegin('aliasList', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.STRUCT, this.aliasList.length);
    for (var iter196 in this.aliasList) {
      if (this.aliasList.hasOwnProperty(iter196)) {
        iter196 = this.aliasList[iter196];
        iter196.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_addAliasesToUser_result = function(args) {
  this.failure = null;
  this.userNotFound = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_addAliasesToUser_result.prototype = {};
PlatformService_addAliasesToUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_addAliasesToUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_addAliasesToUser_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 3);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getGroupInformation_args = function(args) {
  this.groupIds = null;
  if (args) {
    if (args.groupIds !== undefined && args.groupIds !== null) {
      this.groupIds = Thrift.copyList(args.groupIds, [null]);
    }
  }
};
PlatformService_getGroupInformation_args.prototype = {};
PlatformService_getGroupInformation_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        this.groupIds = [];
        var _rtmp3198 = input.readListBegin();
        var _size197 = _rtmp3198.size || 0;
        for (var _i199 = 0; _i199 < _size197; ++_i199) {
          var elem200 = null;
          elem200 = input.readI32();
          this.groupIds.push(elem200);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getGroupInformation_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getGroupInformation_args');
  if (this.groupIds !== null && this.groupIds !== undefined) {
    output.writeFieldBegin('groupIds', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.I32, this.groupIds.length);
    for (var iter201 in this.groupIds) {
      if (this.groupIds.hasOwnProperty(iter201)) {
        iter201 = this.groupIds[iter201];
        output.writeI32(iter201);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getGroupInformation_result = function(args) {
  this.success = null;
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.GroupInformationStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_getGroupInformation_result.prototype = {};
PlatformService_getGroupInformation_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3203 = input.readListBegin();
        var _size202 = _rtmp3203.size || 0;
        for (var _i204 = 0; _i204 < _size202; ++_i204) {
          var elem205 = null;
          elem205 = new ttypes.GroupInformationStruct();
          elem205.read(input);
          this.success.push(elem205);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getGroupInformation_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getGroupInformation_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter206 in this.success) {
      if (this.success.hasOwnProperty(iter206)) {
        iter206 = this.success[iter206];
        iter206.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_authorizeSocialMediaAccount_args = function(args) {
  this.userId = null;
  this.platformCode = null;
  this.socialMediaAccessToken = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.platformCode !== undefined && args.platformCode !== null) {
      this.platformCode = args.platformCode;
    }
    if (args.socialMediaAccessToken !== undefined && args.socialMediaAccessToken !== null) {
      this.socialMediaAccessToken = new ttypes.SocialMediaAccessTokenStruct(args.socialMediaAccessToken);
    }
  }
};
PlatformService_authorizeSocialMediaAccount_args.prototype = {};
PlatformService_authorizeSocialMediaAccount_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.platformCode = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.socialMediaAccessToken = new ttypes.SocialMediaAccessTokenStruct();
        this.socialMediaAccessToken.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_authorizeSocialMediaAccount_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_authorizeSocialMediaAccount_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.platformCode !== null && this.platformCode !== undefined) {
    output.writeFieldBegin('platformCode', Thrift.Type.STRING, 2);
    output.writeString(this.platformCode);
    output.writeFieldEnd();
  }
  if (this.socialMediaAccessToken !== null && this.socialMediaAccessToken !== undefined) {
    output.writeFieldBegin('socialMediaAccessToken', Thrift.Type.STRUCT, 3);
    this.socialMediaAccessToken.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_authorizeSocialMediaAccount_result = function(args) {
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_authorizeSocialMediaAccount_result.prototype = {};
PlatformService_authorizeSocialMediaAccount_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_authorizeSocialMediaAccount_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_authorizeSocialMediaAccount_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserProfilePolicy_args = function(args) {
  this.companyId = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
  }
};
PlatformService_getUserProfilePolicy_args.prototype = {};
PlatformService_getUserProfilePolicy_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserProfilePolicy_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserProfilePolicy_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getUserProfilePolicy_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.ProfilePolicyStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_getUserProfilePolicy_result.prototype = {};
PlatformService_getUserProfilePolicy_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.ProfilePolicyStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getUserProfilePolicy_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getUserProfilePolicy_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setUserProfilePolicy_args = function(args) {
  this.companyId = null;
  this.profilePolicy = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.profilePolicy !== undefined && args.profilePolicy !== null) {
      this.profilePolicy = new ttypes.ProfilePolicyStruct(args.profilePolicy);
    }
  }
};
PlatformService_setUserProfilePolicy_args.prototype = {};
PlatformService_setUserProfilePolicy_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.profilePolicy = new ttypes.ProfilePolicyStruct();
        this.profilePolicy.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setUserProfilePolicy_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setUserProfilePolicy_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.profilePolicy !== null && this.profilePolicy !== undefined) {
    output.writeFieldBegin('profilePolicy', Thrift.Type.STRUCT, 2);
    this.profilePolicy.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setUserProfilePolicy_result = function(args) {
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_setUserProfilePolicy_result.prototype = {};
PlatformService_setUserProfilePolicy_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setUserProfilePolicy_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setUserProfilePolicy_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_assignMessageAccessRightsToArchive_args = function(args) {
  this.userId = null;
  this.archiveId = null;
  this.accessRights = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.archiveId !== undefined && args.archiveId !== null) {
      this.archiveId = args.archiveId;
    }
    if (args.accessRights !== undefined && args.accessRights !== null) {
      this.accessRights = Thrift.copyList(args.accessRights, [ttypes.AccessRightsStruct]);
    }
  }
};
PlatformService_assignMessageAccessRightsToArchive_args.prototype = {};
PlatformService_assignMessageAccessRightsToArchive_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.archiveId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        this.accessRights = [];
        var _rtmp3208 = input.readListBegin();
        var _size207 = _rtmp3208.size || 0;
        for (var _i209 = 0; _i209 < _size207; ++_i209) {
          var elem210 = null;
          elem210 = new ttypes.AccessRightsStruct();
          elem210.read(input);
          this.accessRights.push(elem210);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_assignMessageAccessRightsToArchive_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_assignMessageAccessRightsToArchive_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.archiveId !== null && this.archiveId !== undefined) {
    output.writeFieldBegin('archiveId', Thrift.Type.STRING, 2);
    output.writeString(this.archiveId);
    output.writeFieldEnd();
  }
  if (this.accessRights !== null && this.accessRights !== undefined) {
    output.writeFieldBegin('accessRights', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.STRUCT, this.accessRights.length);
    for (var iter211 in this.accessRights) {
      if (this.accessRights.hasOwnProperty(iter211)) {
        iter211 = this.accessRights[iter211];
        iter211.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_assignMessageAccessRightsToArchive_result = function(args) {
  this.failure = null;
  this.userNotFound = null;
  this.archiveNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args instanceof ttypes.ArchiveNotFoundException) {
    this.archiveNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
    if (args.archiveNotFound !== undefined && args.archiveNotFound !== null) {
      this.archiveNotFound = args.archiveNotFound;
    }
  }
};
PlatformService_assignMessageAccessRightsToArchive_result.prototype = {};
PlatformService_assignMessageAccessRightsToArchive_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.archiveNotFound = new ttypes.ArchiveNotFoundException();
        this.archiveNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_assignMessageAccessRightsToArchive_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_assignMessageAccessRightsToArchive_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.archiveNotFound !== null && this.archiveNotFound !== undefined) {
    output.writeFieldBegin('archiveNotFound', Thrift.Type.STRUCT, 3);
    this.archiveNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_enableUser_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_enableUser_args.prototype = {};
PlatformService_enableUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_enableUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_enableUser_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_enableUser_result = function(args) {
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_enableUser_result.prototype = {};
PlatformService_enableUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_enableUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_enableUser_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_disableUser_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_disableUser_args.prototype = {};
PlatformService_disableUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_disableUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_disableUser_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_disableUser_result = function(args) {
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_disableUser_result.prototype = {};
PlatformService_disableUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_disableUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_disableUser_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createSystemUser_args = function(args) {
  this.companyId = null;
  this.systemUser = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.systemUser !== undefined && args.systemUser !== null) {
      this.systemUser = new ttypes.SystemUserNameStruct(args.systemUser);
    }
  }
};
PlatformService_createSystemUser_args.prototype = {};
PlatformService_createSystemUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.systemUser = new ttypes.SystemUserNameStruct();
        this.systemUser.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createSystemUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createSystemUser_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.systemUser !== null && this.systemUser !== undefined) {
    output.writeFieldBegin('systemUser', Thrift.Type.STRUCT, 2);
    this.systemUser.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createSystemUser_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_createSystemUser_result.prototype = {};
PlatformService_createSystemUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createSystemUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createSystemUser_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deleteSystemUser_args = function(args) {
  this.companyId = null;
  this.systemUserId = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.systemUserId !== undefined && args.systemUserId !== null) {
      this.systemUserId = args.systemUserId;
    }
  }
};
PlatformService_deleteSystemUser_args.prototype = {};
PlatformService_deleteSystemUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.systemUserId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deleteSystemUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deleteSystemUser_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.systemUserId !== null && this.systemUserId !== undefined) {
    output.writeFieldBegin('systemUserId', Thrift.Type.I64, 2);
    output.writeI64(this.systemUserId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_deleteSystemUser_result = function(args) {
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_deleteSystemUser_result.prototype = {};
PlatformService_deleteSystemUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_deleteSystemUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_deleteSystemUser_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_updateSystemUser_args = function(args) {
  this.companyId = null;
  this.systemUserId = null;
  this.systemUser = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.systemUserId !== undefined && args.systemUserId !== null) {
      this.systemUserId = args.systemUserId;
    }
    if (args.systemUser !== undefined && args.systemUser !== null) {
      this.systemUser = new ttypes.SystemUserNameStruct(args.systemUser);
    }
  }
};
PlatformService_updateSystemUser_args.prototype = {};
PlatformService_updateSystemUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.systemUserId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.systemUser = new ttypes.SystemUserNameStruct();
        this.systemUser.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_updateSystemUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_updateSystemUser_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.systemUserId !== null && this.systemUserId !== undefined) {
    output.writeFieldBegin('systemUserId', Thrift.Type.I64, 2);
    output.writeI64(this.systemUserId);
    output.writeFieldEnd();
  }
  if (this.systemUser !== null && this.systemUser !== undefined) {
    output.writeFieldBegin('systemUser', Thrift.Type.STRUCT, 3);
    this.systemUser.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_updateSystemUser_result = function(args) {
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_updateSystemUser_result.prototype = {};
PlatformService_updateSystemUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_updateSystemUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_updateSystemUser_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createCompanyUsers_args = function(args) {
  this.companyId = null;
  this.users = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.users !== undefined && args.users !== null) {
      this.users = Thrift.copyList(args.users, [ttypes.CompanyUserCreateStruct]);
    }
  }
};
PlatformService_createCompanyUsers_args.prototype = {};
PlatformService_createCompanyUsers_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        this.users = [];
        var _rtmp3213 = input.readListBegin();
        var _size212 = _rtmp3213.size || 0;
        for (var _i214 = 0; _i214 < _size212; ++_i214) {
          var elem215 = null;
          elem215 = new ttypes.CompanyUserCreateStruct();
          elem215.read(input);
          this.users.push(elem215);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createCompanyUsers_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createCompanyUsers_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.users !== null && this.users !== undefined) {
    output.writeFieldBegin('users', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.users.length);
    for (var iter216 in this.users) {
      if (this.users.hasOwnProperty(iter216)) {
        iter216 = this.users[iter216];
        iter216.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createCompanyUsers_result = function(args) {
  this.success = null;
  this.companyNotFound = null;
  this.failureException = null;
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args instanceof ttypes.FailureException) {
    this.failureException = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.UserStruct]);
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
    if (args.failureException !== undefined && args.failureException !== null) {
      this.failureException = args.failureException;
    }
  }
};
PlatformService_createCompanyUsers_result.prototype = {};
PlatformService_createCompanyUsers_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3218 = input.readListBegin();
        var _size217 = _rtmp3218.size || 0;
        for (var _i219 = 0; _i219 < _size217; ++_i219) {
          var elem220 = null;
          elem220 = new ttypes.UserStruct();
          elem220.read(input);
          this.success.push(elem220);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.failureException = new ttypes.FailureException();
        this.failureException.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createCompanyUsers_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createCompanyUsers_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter221 in this.success) {
      if (this.success.hasOwnProperty(iter221)) {
        iter221 = this.success[iter221];
        iter221.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 1);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.failureException !== null && this.failureException !== undefined) {
    output.writeFieldBegin('failureException', Thrift.Type.STRUCT, 2);
    this.failureException.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createCompanyUserLogin_args = function(args) {
  this.login = null;
  if (args) {
    if (args.login !== undefined && args.login !== null) {
      this.login = new ttypes.CompanyUserLoginStruct(args.login);
    }
  }
};
PlatformService_createCompanyUserLogin_args.prototype = {};
PlatformService_createCompanyUserLogin_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.login = new ttypes.CompanyUserLoginStruct();
        this.login.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createCompanyUserLogin_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createCompanyUserLogin_args');
  if (this.login !== null && this.login !== undefined) {
    output.writeFieldBegin('login', Thrift.Type.STRUCT, 1);
    this.login.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createCompanyUserLogin_result = function(args) {
  this.companyNotFound = null;
  this.userNotFound = null;
  this.failureException = null;
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args instanceof ttypes.FailureException) {
    this.failureException = args;
    return;
  }
  if (args) {
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
    if (args.failureException !== undefined && args.failureException !== null) {
      this.failureException = args.failureException;
    }
  }
};
PlatformService_createCompanyUserLogin_result.prototype = {};
PlatformService_createCompanyUserLogin_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.failureException = new ttypes.FailureException();
        this.failureException.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createCompanyUserLogin_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createCompanyUserLogin_result');
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 1);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.failureException !== null && this.failureException !== undefined) {
    output.writeFieldBegin('failureException', Thrift.Type.STRUCT, 3);
    this.failureException.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createSystemUserLogin_args = function(args) {
  this.login = null;
  if (args) {
    if (args.login !== undefined && args.login !== null) {
      this.login = new ttypes.SystemUserLoginStruct(args.login);
    }
  }
};
PlatformService_createSystemUserLogin_args.prototype = {};
PlatformService_createSystemUserLogin_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.login = new ttypes.SystemUserLoginStruct();
        this.login.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createSystemUserLogin_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createSystemUserLogin_args');
  if (this.login !== null && this.login !== undefined) {
    output.writeFieldBegin('login', Thrift.Type.STRUCT, 1);
    this.login.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createSystemUserLogin_result = function(args) {
  this.companyNotFound = null;
  this.userNotFound = null;
  this.failureException = null;
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args instanceof ttypes.FailureException) {
    this.failureException = args;
    return;
  }
  if (args) {
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
    if (args.failureException !== undefined && args.failureException !== null) {
      this.failureException = args.failureException;
    }
  }
};
PlatformService_createSystemUserLogin_result.prototype = {};
PlatformService_createSystemUserLogin_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.failureException = new ttypes.FailureException();
        this.failureException.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createSystemUserLogin_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createSystemUserLogin_result');
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 1);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.failureException !== null && this.failureException !== undefined) {
    output.writeFieldBegin('failureException', Thrift.Type.STRUCT, 3);
    this.failureException.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_migrateCompany_args = function(args) {
  this.company = null;
  this.dryRun = null;
  if (args) {
    if (args.company !== undefined && args.company !== null) {
      this.company = new ttypes.ControlCenterCompanyStruct(args.company);
    }
    if (args.dryRun !== undefined && args.dryRun !== null) {
      this.dryRun = args.dryRun;
    }
  }
};
PlatformService_migrateCompany_args.prototype = {};
PlatformService_migrateCompany_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.company = new ttypes.ControlCenterCompanyStruct();
        this.company.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.BOOL) {
        this.dryRun = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_migrateCompany_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_migrateCompany_args');
  if (this.company !== null && this.company !== undefined) {
    output.writeFieldBegin('company', Thrift.Type.STRUCT, 1);
    this.company.write(output);
    output.writeFieldEnd();
  }
  if (this.dryRun !== null && this.dryRun !== undefined) {
    output.writeFieldBegin('dryRun', Thrift.Type.BOOL, 2);
    output.writeBool(this.dryRun);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_migrateCompany_result = function(args) {
  this.success = null;
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_migrateCompany_result.prototype = {};
PlatformService_migrateCompany_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_migrateCompany_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_migrateCompany_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyByDomain_args = function(args) {
  this.domain = null;
  if (args) {
    if (args.domain !== undefined && args.domain !== null) {
      this.domain = args.domain;
    }
  }
};
PlatformService_getCompanyByDomain_args.prototype = {};
PlatformService_getCompanyByDomain_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.domain = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyByDomain_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyByDomain_args');
  if (this.domain !== null && this.domain !== undefined) {
    output.writeFieldBegin('domain', Thrift.Type.STRING, 1);
    output.writeString(this.domain);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyByDomain_result = function(args) {
  this.success = null;
  this.companyNotFound = null;
  this.failure = null;
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.CompanyStruct(args.success);
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_getCompanyByDomain_result.prototype = {};
PlatformService_getCompanyByDomain_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.CompanyStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyByDomain_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyByDomain_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 1);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 2);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createCompanyWithDomain_args = function(args) {
  this.name = null;
  this.domain = null;
  if (args) {
    if (args.name !== undefined && args.name !== null) {
      this.name = args.name;
    }
    if (args.domain !== undefined && args.domain !== null) {
      this.domain = args.domain;
    }
  }
};
PlatformService_createCompanyWithDomain_args.prototype = {};
PlatformService_createCompanyWithDomain_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.domain = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createCompanyWithDomain_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createCompanyWithDomain_args');
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 1);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.domain !== null && this.domain !== undefined) {
    output.writeFieldBegin('domain', Thrift.Type.STRING, 2);
    output.writeString(this.domain);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createCompanyWithDomain_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyAlreadyExists = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyAlreadyExistsException) {
    this.companyAlreadyExists = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyAlreadyExists !== undefined && args.companyAlreadyExists !== null) {
      this.companyAlreadyExists = args.companyAlreadyExists;
    }
  }
};
PlatformService_createCompanyWithDomain_result.prototype = {};
PlatformService_createCompanyWithDomain_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyAlreadyExists = new ttypes.CompanyAlreadyExistsException();
        this.companyAlreadyExists.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createCompanyWithDomain_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createCompanyWithDomain_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyAlreadyExists !== null && this.companyAlreadyExists !== undefined) {
    output.writeFieldBegin('companyAlreadyExists', Thrift.Type.STRUCT, 2);
    this.companyAlreadyExists.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createUser_args = function(args) {
  this.companyId = null;
  this.passwordHash = null;
  this.user = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.passwordHash !== undefined && args.passwordHash !== null) {
      this.passwordHash = args.passwordHash;
    }
    if (args.user !== undefined && args.user !== null) {
      this.user = new ttypes.UserNameStruct(args.user);
    }
  }
};
PlatformService_createUser_args.prototype = {};
PlatformService_createUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.passwordHash = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.user = new ttypes.UserNameStruct();
        this.user.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createUser_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.passwordHash !== null && this.passwordHash !== undefined) {
    output.writeFieldBegin('passwordHash', Thrift.Type.STRING, 2);
    output.writeString(this.passwordHash);
    output.writeFieldEnd();
  }
  if (this.user !== null && this.user !== undefined) {
    output.writeFieldBegin('user', Thrift.Type.STRUCT, 3);
    this.user.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_createUser_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  this.communicationPlatformNotFoundException = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args instanceof ttypes.CommunicationPlatformNotFoundException) {
    this.communicationPlatformNotFoundException = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.UserStruct(args.success);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
    if (args.communicationPlatformNotFoundException !== undefined && args.communicationPlatformNotFoundException !== null) {
      this.communicationPlatformNotFoundException = args.communicationPlatformNotFoundException;
    }
  }
};
PlatformService_createUser_result.prototype = {};
PlatformService_createUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.UserStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.communicationPlatformNotFoundException = new ttypes.CommunicationPlatformNotFoundException();
        this.communicationPlatformNotFoundException.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_createUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_createUser_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.communicationPlatformNotFoundException !== null && this.communicationPlatformNotFoundException !== undefined) {
    output.writeFieldBegin('communicationPlatformNotFoundException', Thrift.Type.STRUCT, 3);
    this.communicationPlatformNotFoundException.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompaniesWithServiceEnabled_args = function(args) {
  this.serviceSku = null;
  if (args) {
    if (args.serviceSku !== undefined && args.serviceSku !== null) {
      this.serviceSku = args.serviceSku;
    }
  }
};
PlatformService_getCompaniesWithServiceEnabled_args.prototype = {};
PlatformService_getCompaniesWithServiceEnabled_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.serviceSku = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompaniesWithServiceEnabled_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompaniesWithServiceEnabled_args');
  if (this.serviceSku !== null && this.serviceSku !== undefined) {
    output.writeFieldBegin('serviceSku', Thrift.Type.I32, 1);
    output.writeI32(this.serviceSku);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompaniesWithServiceEnabled_result = function(args) {
  this.success = null;
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.CompanyStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_getCompaniesWithServiceEnabled_result.prototype = {};
PlatformService_getCompaniesWithServiceEnabled_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3223 = input.readListBegin();
        var _size222 = _rtmp3223.size || 0;
        for (var _i224 = 0; _i224 < _size222; ++_i224) {
          var elem225 = null;
          elem225 = new ttypes.CompanyStruct();
          elem225.read(input);
          this.success.push(elem225);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompaniesWithServiceEnabled_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompaniesWithServiceEnabled_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter226 in this.success) {
      if (this.success.hasOwnProperty(iter226)) {
        iter226 = this.success[iter226];
        iter226.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyArchives_args = function(args) {
  this.companyId = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
  }
};
PlatformService_getCompanyArchives_args.prototype = {};
PlatformService_getCompanyArchives_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyArchives_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyArchives_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyArchives_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.ArchiveBasicStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
  }
};
PlatformService_getCompanyArchives_result.prototype = {};
PlatformService_getCompanyArchives_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3228 = input.readListBegin();
        var _size227 = _rtmp3228.size || 0;
        for (var _i229 = 0; _i229 < _size227; ++_i229) {
          var elem230 = null;
          elem230 = new ttypes.ArchiveBasicStruct();
          elem230.read(input);
          this.success.push(elem230);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyArchives_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyArchives_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter231 in this.success) {
      if (this.success.hasOwnProperty(iter231)) {
        iter231 = this.success[iter231];
        iter231.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_findUsersWithAllEntitlements_args = function(args) {
  this.companyId = null;
  this.applicationName = null;
  this.entitlements = null;
  if (args) {
    if (args.companyId !== undefined && args.companyId !== null) {
      this.companyId = args.companyId;
    }
    if (args.applicationName !== undefined && args.applicationName !== null) {
      this.applicationName = args.applicationName;
    }
    if (args.entitlements !== undefined && args.entitlements !== null) {
      this.entitlements = Thrift.copyList(args.entitlements, [null]);
    }
  }
};
PlatformService_findUsersWithAllEntitlements_args.prototype = {};
PlatformService_findUsersWithAllEntitlements_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.companyId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.applicationName = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        this.entitlements = [];
        var _rtmp3233 = input.readListBegin();
        var _size232 = _rtmp3233.size || 0;
        for (var _i234 = 0; _i234 < _size232; ++_i234) {
          var elem235 = null;
          elem235 = input.readString();
          this.entitlements.push(elem235);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_findUsersWithAllEntitlements_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_findUsersWithAllEntitlements_args');
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I32, 1);
    output.writeI32(this.companyId);
    output.writeFieldEnd();
  }
  if (this.applicationName !== null && this.applicationName !== undefined) {
    output.writeFieldBegin('applicationName', Thrift.Type.I32, 2);
    output.writeI32(this.applicationName);
    output.writeFieldEnd();
  }
  if (this.entitlements !== null && this.entitlements !== undefined) {
    output.writeFieldBegin('entitlements', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.STRING, this.entitlements.length);
    for (var iter236 in this.entitlements) {
      if (this.entitlements.hasOwnProperty(iter236)) {
        iter236 = this.entitlements[iter236];
        output.writeString(iter236);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_findUsersWithAllEntitlements_result = function(args) {
  this.success = null;
  this.failure = null;
  this.companyNotFound = null;
  this.companyApplicationNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.CompanyNotFoundException) {
    this.companyNotFound = args;
    return;
  }
  if (args instanceof ttypes.CompanyApplicationNotFoundException) {
    this.companyApplicationNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.UserInfoStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.companyNotFound !== undefined && args.companyNotFound !== null) {
      this.companyNotFound = args.companyNotFound;
    }
    if (args.companyApplicationNotFound !== undefined && args.companyApplicationNotFound !== null) {
      this.companyApplicationNotFound = args.companyApplicationNotFound;
    }
  }
};
PlatformService_findUsersWithAllEntitlements_result.prototype = {};
PlatformService_findUsersWithAllEntitlements_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3238 = input.readListBegin();
        var _size237 = _rtmp3238.size || 0;
        for (var _i239 = 0; _i239 < _size237; ++_i239) {
          var elem240 = null;
          elem240 = new ttypes.UserInfoStruct();
          elem240.read(input);
          this.success.push(elem240);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyNotFound = new ttypes.CompanyNotFoundException();
        this.companyNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.companyApplicationNotFound = new ttypes.CompanyApplicationNotFoundException();
        this.companyApplicationNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_findUsersWithAllEntitlements_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_findUsersWithAllEntitlements_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter241 in this.success) {
      if (this.success.hasOwnProperty(iter241)) {
        iter241 = this.success[iter241];
        iter241.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.companyNotFound !== null && this.companyNotFound !== undefined) {
    output.writeFieldBegin('companyNotFound', Thrift.Type.STRUCT, 2);
    this.companyNotFound.write(output);
    output.writeFieldEnd();
  }
  if (this.companyApplicationNotFound !== null && this.companyApplicationNotFound !== undefined) {
    output.writeFieldBegin('companyApplicationNotFound', Thrift.Type.STRUCT, 3);
    this.companyApplicationNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyServiceConfigBySku_args = function(args) {
  this.sku = null;
  if (args) {
    if (args.sku !== undefined && args.sku !== null) {
      this.sku = args.sku;
    }
  }
};
PlatformService_getCompanyServiceConfigBySku_args.prototype = {};
PlatformService_getCompanyServiceConfigBySku_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.sku = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyServiceConfigBySku_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyServiceConfigBySku_args');
  if (this.sku !== null && this.sku !== undefined) {
    output.writeFieldBegin('sku', Thrift.Type.I32, 1);
    output.writeI32(this.sku);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getCompanyServiceConfigBySku_result = function(args) {
  this.success = null;
  this.failure = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.ServiceConfigurationStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
  }
};
PlatformService_getCompanyServiceConfigBySku_result.prototype = {};
PlatformService_getCompanyServiceConfigBySku_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3243 = input.readListBegin();
        var _size242 = _rtmp3243.size || 0;
        for (var _i244 = 0; _i244 < _size242; ++_i244) {
          var elem245 = null;
          elem245 = new ttypes.ServiceConfigurationStruct();
          elem245.read(input);
          this.success.push(elem245);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getCompanyServiceConfigBySku_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getCompanyServiceConfigBySku_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter246 in this.success) {
      if (this.success.hasOwnProperty(iter246)) {
        iter246 = this.success[iter246];
        iter246.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_args = function(args) {
  this.userId = null;
  this.applicationName = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.applicationName !== undefined && args.applicationName !== null) {
      this.applicationName = args.applicationName;
    }
  }
};
PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_args.prototype = {};
PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.applicationName = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.applicationName !== null && this.applicationName !== undefined) {
    output.writeFieldBegin('applicationName', Thrift.Type.I32, 2);
    output.writeI32(this.applicationName);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_result = function(args) {
  this.success = null;
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.EntitlementWithConstraintStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_result.prototype = {};
PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.SET) {
        this.success = [];
        var _rtmp3248 = input.readSetBegin();
        var _size247 = _rtmp3248.size || 0;
        for (var _i249 = 0; _i249 < _size247; ++_i249) {
          var elem250 = null;
          elem250 = new ttypes.EntitlementWithConstraintStruct();
          elem250.read(input);
          this.success.push(elem250);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.SET, 0);
    output.writeSetBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter251 in this.success) {
      if (this.success.hasOwnProperty(iter251)) {
        iter251 = this.success[iter251];
        iter251.write(output);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setWebsiteRoleConstraintsToUser_args = function(args) {
  this.userId = null;
  this.roleId = null;
  this.applicationInstance = null;
  this.applicationName = null;
  this.listOfConstraints = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.roleId !== undefined && args.roleId !== null) {
      this.roleId = args.roleId;
    }
    if (args.applicationInstance !== undefined && args.applicationInstance !== null) {
      this.applicationInstance = new ttypes.ApplicationInstanceStruct(args.applicationInstance);
    }
    if (args.applicationName !== undefined && args.applicationName !== null) {
      this.applicationName = args.applicationName;
    }
    if (args.listOfConstraints !== undefined && args.listOfConstraints !== null) {
      this.listOfConstraints = Thrift.copyList(args.listOfConstraints, [ttypes.ApplicationRoleAssignmentConstraintStruct]);
    }
  }
};
PlatformService_setWebsiteRoleConstraintsToUser_args.prototype = {};
PlatformService_setWebsiteRoleConstraintsToUser_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.roleId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.applicationInstance = new ttypes.ApplicationInstanceStruct();
        this.applicationInstance.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.applicationName = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.LIST) {
        this.listOfConstraints = [];
        var _rtmp3253 = input.readListBegin();
        var _size252 = _rtmp3253.size || 0;
        for (var _i254 = 0; _i254 < _size252; ++_i254) {
          var elem255 = null;
          elem255 = new ttypes.ApplicationRoleAssignmentConstraintStruct();
          elem255.read(input);
          this.listOfConstraints.push(elem255);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setWebsiteRoleConstraintsToUser_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setWebsiteRoleConstraintsToUser_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.roleId !== null && this.roleId !== undefined) {
    output.writeFieldBegin('roleId', Thrift.Type.I64, 2);
    output.writeI64(this.roleId);
    output.writeFieldEnd();
  }
  if (this.applicationInstance !== null && this.applicationInstance !== undefined) {
    output.writeFieldBegin('applicationInstance', Thrift.Type.STRUCT, 3);
    this.applicationInstance.write(output);
    output.writeFieldEnd();
  }
  if (this.applicationName !== null && this.applicationName !== undefined) {
    output.writeFieldBegin('applicationName', Thrift.Type.I32, 4);
    output.writeI32(this.applicationName);
    output.writeFieldEnd();
  }
  if (this.listOfConstraints !== null && this.listOfConstraints !== undefined) {
    output.writeFieldBegin('listOfConstraints', Thrift.Type.LIST, 5);
    output.writeListBegin(Thrift.Type.STRUCT, this.listOfConstraints.length);
    for (var iter256 in this.listOfConstraints) {
      if (this.listOfConstraints.hasOwnProperty(iter256)) {
        iter256 = this.listOfConstraints[iter256];
        iter256.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_setWebsiteRoleConstraintsToUser_result = function(args) {
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_setWebsiteRoleConstraintsToUser_result.prototype = {};
PlatformService_setWebsiteRoleConstraintsToUser_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_setWebsiteRoleConstraintsToUser_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_setWebsiteRoleConstraintsToUser_result');
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getMessageAccessExclusions_args = function(args) {
  this.userId = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
  }
};
PlatformService_getMessageAccessExclusions_args.prototype = {};
PlatformService_getMessageAccessExclusions_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getMessageAccessExclusions_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getMessageAccessExclusions_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getMessageAccessExclusions_result = function(args) {
  this.success = null;
  this.userNotFound = null;
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.MessageAccessExclusionStruct]);
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getMessageAccessExclusions_result.prototype = {};
PlatformService_getMessageAccessExclusions_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.SET) {
        this.success = [];
        var _rtmp3258 = input.readSetBegin();
        var _size257 = _rtmp3258.size || 0;
        for (var _i259 = 0; _i259 < _size257; ++_i259) {
          var elem260 = null;
          elem260 = new ttypes.MessageAccessExclusionStruct();
          elem260.read(input);
          this.success.push(elem260);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getMessageAccessExclusions_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getMessageAccessExclusions_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.SET, 0);
    output.writeSetBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter261 in this.success) {
      if (this.success.hasOwnProperty(iter261)) {
        iter261 = this.success[iter261];
        iter261.write(output);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 1);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getAccessibleCompanies_args = function(args) {
  this.userId = null;
  this.applicationName = null;
  if (args) {
    if (args.userId !== undefined && args.userId !== null) {
      this.userId = args.userId;
    }
    if (args.applicationName !== undefined && args.applicationName !== null) {
      this.applicationName = args.applicationName;
    }
  }
};
PlatformService_getAccessibleCompanies_args.prototype = {};
PlatformService_getAccessibleCompanies_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.userId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.applicationName = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getAccessibleCompanies_args.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getAccessibleCompanies_args');
  if (this.userId !== null && this.userId !== undefined) {
    output.writeFieldBegin('userId', Thrift.Type.I64, 1);
    output.writeI64(this.userId);
    output.writeFieldEnd();
  }
  if (this.applicationName !== null && this.applicationName !== undefined) {
    output.writeFieldBegin('applicationName', Thrift.Type.I32, 2);
    output.writeI32(this.applicationName);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformService_getAccessibleCompanies_result = function(args) {
  this.success = null;
  this.failure = null;
  this.userNotFound = null;
  if (args instanceof ttypes.FailureException) {
    this.failure = args;
    return;
  }
  if (args instanceof ttypes.UserNotFoundException) {
    this.userNotFound = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.CompanyStruct]);
    }
    if (args.failure !== undefined && args.failure !== null) {
      this.failure = args.failure;
    }
    if (args.userNotFound !== undefined && args.userNotFound !== null) {
      this.userNotFound = args.userNotFound;
    }
  }
};
PlatformService_getAccessibleCompanies_result.prototype = {};
PlatformService_getAccessibleCompanies_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp3263 = input.readListBegin();
        var _size262 = _rtmp3263.size || 0;
        for (var _i264 = 0; _i264 < _size262; ++_i264) {
          var elem265 = null;
          elem265 = new ttypes.CompanyStruct();
          elem265.read(input);
          this.success.push(elem265);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.failure = new ttypes.FailureException();
        this.failure.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userNotFound = new ttypes.UserNotFoundException();
        this.userNotFound.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PlatformService_getAccessibleCompanies_result.prototype.write = function(output) {
  output.writeStructBegin('PlatformService_getAccessibleCompanies_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter266 in this.success) {
      if (this.success.hasOwnProperty(iter266)) {
        iter266 = this.success[iter266];
        iter266.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.failure !== null && this.failure !== undefined) {
    output.writeFieldBegin('failure', Thrift.Type.STRUCT, 1);
    this.failure.write(output);
    output.writeFieldEnd();
  }
  if (this.userNotFound !== null && this.userNotFound !== undefined) {
    output.writeFieldBegin('userNotFound', Thrift.Type.STRUCT, 2);
    this.userNotFound.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PlatformServiceClient = exports.Client = function(output, pClass) {
  this.output = output;
  this.pClass = pClass;
  this._seqid = 0;
  this._reqs = {};
};
PlatformServiceClient.prototype = {};
PlatformServiceClient.prototype.seqid = function() { return this._seqid; };
PlatformServiceClient.prototype.new_seqid = function() { return this._seqid += 1; };

PlatformServiceClient.prototype.getVersion = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getVersion();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getVersion();
  }
};

PlatformServiceClient.prototype.send_getVersion = function() {
  var output = new this.pClass(this.output);
  var args = new PlatformService_getVersion_args();
  try {
    output.writeMessageBegin('getVersion', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getVersion = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getVersion_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getVersion failed: unknown result');
};

PlatformServiceClient.prototype.setPreferredMailboxRecoveryAddress = function(userId, userAliasId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_setPreferredMailboxRecoveryAddress(userId, userAliasId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_setPreferredMailboxRecoveryAddress(userId, userAliasId);
  }
};

PlatformServiceClient.prototype.send_setPreferredMailboxRecoveryAddress = function(userId, userAliasId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId,
    userAliasId: userAliasId
  };
  var args = new PlatformService_setPreferredMailboxRecoveryAddress_args(params);
  try {
    output.writeMessageBegin('setPreferredMailboxRecoveryAddress', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_setPreferredMailboxRecoveryAddress = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_setPreferredMailboxRecoveryAddress_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.userAliasNotFound) {
    return callback(result.userAliasNotFound);
  }
  if (null !== result.userAliasNotValidMailboxRecoveryAddress) {
    return callback(result.userAliasNotValidMailboxRecoveryAddress);
  }
  callback(null);
};

PlatformServiceClient.prototype.removePreferredMailboxRecoveryAddress = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_removePreferredMailboxRecoveryAddress(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_removePreferredMailboxRecoveryAddress(userId);
  }
};

PlatformServiceClient.prototype.send_removePreferredMailboxRecoveryAddress = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_removePreferredMailboxRecoveryAddress_args(params);
  try {
    output.writeMessageBegin('removePreferredMailboxRecoveryAddress', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_removePreferredMailboxRecoveryAddress = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_removePreferredMailboxRecoveryAddress_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.getMailboxRecoveryAddresses = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getMailboxRecoveryAddresses(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getMailboxRecoveryAddresses(userId);
  }
};

PlatformServiceClient.prototype.send_getMailboxRecoveryAddresses = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_getMailboxRecoveryAddresses_args(params);
  try {
    output.writeMessageBegin('getMailboxRecoveryAddresses', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getMailboxRecoveryAddresses = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getMailboxRecoveryAddresses_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getMailboxRecoveryAddresses failed: unknown result');
};

PlatformServiceClient.prototype.createCompany = function(companyLegalName, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createCompany(companyLegalName);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createCompany(companyLegalName);
  }
};

PlatformServiceClient.prototype.send_createCompany = function(companyLegalName) {
  var output = new this.pClass(this.output);
  var params = {
    companyLegalName: companyLegalName
  };
  var args = new PlatformService_createCompany_args(params);
  try {
    output.writeMessageBegin('createCompany', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createCompany = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createCompany_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyAlreadyExists) {
    return callback(result.companyAlreadyExists);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createCompany failed: unknown result');
};

PlatformServiceClient.prototype.deleteCompany = function(companyId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_deleteCompany(companyId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_deleteCompany(companyId);
  }
};

PlatformServiceClient.prototype.send_deleteCompany = function(companyId) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId
  };
  var args = new PlatformService_deleteCompany_args(params);
  try {
    output.writeMessageBegin('deleteCompany', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_deleteCompany = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_deleteCompany_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.findCompanies = function(queryStruct, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_findCompanies(queryStruct);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_findCompanies(queryStruct);
  }
};

PlatformServiceClient.prototype.send_findCompanies = function(queryStruct) {
  var output = new this.pClass(this.output);
  var params = {
    queryStruct: queryStruct
  };
  var args = new PlatformService_findCompanies_args(params);
  try {
    output.writeMessageBegin('findCompanies', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_findCompanies = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_findCompanies_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('findCompanies failed: unknown result');
};

PlatformServiceClient.prototype.createUsers = function(companyId, passwordHash, users, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createUsers(companyId, passwordHash, users);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createUsers(companyId, passwordHash, users);
  }
};

PlatformServiceClient.prototype.send_createUsers = function(companyId, passwordHash, users) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    passwordHash: passwordHash,
    users: users
  };
  var args = new PlatformService_createUsers_args(params);
  try {
    output.writeMessageBegin('createUsers', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createUsers = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createUsers_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.invalidUserCount) {
    return callback(result.invalidUserCount);
  }
  if (null !== result.userCountTooLarge) {
    return callback(result.userCountTooLarge);
  }
  if (null !== result.communicationPlatformNotFoundException) {
    return callback(result.communicationPlatformNotFoundException);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createUsers failed: unknown result');
};

PlatformServiceClient.prototype.deleteUser = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_deleteUser(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_deleteUser(userId);
  }
};

PlatformServiceClient.prototype.send_deleteUser = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_deleteUser_args(params);
  try {
    output.writeMessageBegin('deleteUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_deleteUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_deleteUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.createCompanyDomain = function(companyId, domainName, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createCompanyDomain(companyId, domainName);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createCompanyDomain(companyId, domainName);
  }
};

PlatformServiceClient.prototype.send_createCompanyDomain = function(companyId, domainName) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    domainName: domainName
  };
  var args = new PlatformService_createCompanyDomain_args(params);
  try {
    output.writeMessageBegin('createCompanyDomain', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createCompanyDomain = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createCompanyDomain_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createCompanyDomain failed: unknown result');
};

PlatformServiceClient.prototype.deleteCompanyDomain = function(companyId, companyDomainId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_deleteCompanyDomain(companyId, companyDomainId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_deleteCompanyDomain(companyId, companyDomainId);
  }
};

PlatformServiceClient.prototype.send_deleteCompanyDomain = function(companyId, companyDomainId) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    companyDomainId: companyDomainId
  };
  var args = new PlatformService_deleteCompanyDomain_args(params);
  try {
    output.writeMessageBegin('deleteCompanyDomain', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_deleteCompanyDomain = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_deleteCompanyDomain_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  callback(null);
};

PlatformServiceClient.prototype.getCompanyDomains = function(companyId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getCompanyDomains(companyId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getCompanyDomains(companyId);
  }
};

PlatformServiceClient.prototype.send_getCompanyDomains = function(companyId) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId
  };
  var args = new PlatformService_getCompanyDomains_args(params);
  try {
    output.writeMessageBegin('getCompanyDomains', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getCompanyDomains = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getCompanyDomains_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getCompanyDomains failed: unknown result');
};

PlatformServiceClient.prototype.createCompanyDomainV2 = function(companyId, domainName, isDoingBusinessAs, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createCompanyDomainV2(companyId, domainName, isDoingBusinessAs);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createCompanyDomainV2(companyId, domainName, isDoingBusinessAs);
  }
};

PlatformServiceClient.prototype.send_createCompanyDomainV2 = function(companyId, domainName, isDoingBusinessAs) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    domainName: domainName,
    isDoingBusinessAs: isDoingBusinessAs
  };
  var args = new PlatformService_createCompanyDomainV2_args(params);
  try {
    output.writeMessageBegin('createCompanyDomainV2', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createCompanyDomainV2 = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createCompanyDomainV2_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createCompanyDomainV2 failed: unknown result');
};

PlatformServiceClient.prototype.createGroup = function(companyId, groupName, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createGroup(companyId, groupName);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createGroup(companyId, groupName);
  }
};

PlatformServiceClient.prototype.send_createGroup = function(companyId, groupName) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    groupName: groupName
  };
  var args = new PlatformService_createGroup_args(params);
  try {
    output.writeMessageBegin('createGroup', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createGroup = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createGroup_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.groupAlreadyExist) {
    return callback(result.groupAlreadyExist);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createGroup failed: unknown result');
};

PlatformServiceClient.prototype.deleteGroup = function(groupId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_deleteGroup(groupId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_deleteGroup(groupId);
  }
};

PlatformServiceClient.prototype.send_deleteGroup = function(groupId) {
  var output = new this.pClass(this.output);
  var params = {
    groupId: groupId
  };
  var args = new PlatformService_deleteGroup_args(params);
  try {
    output.writeMessageBegin('deleteGroup', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_deleteGroup = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_deleteGroup_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.groupNotFound) {
    return callback(result.groupNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.findGroups = function(groupQuery, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_findGroups(groupQuery);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_findGroups(groupQuery);
  }
};

PlatformServiceClient.prototype.send_findGroups = function(groupQuery) {
  var output = new this.pClass(this.output);
  var params = {
    groupQuery: groupQuery
  };
  var args = new PlatformService_findGroups_args(params);
  try {
    output.writeMessageBegin('findGroups', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_findGroups = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_findGroups_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('findGroups failed: unknown result');
};

PlatformServiceClient.prototype.addUsersToGroup = function(groupId, userIds, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_addUsersToGroup(groupId, userIds);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_addUsersToGroup(groupId, userIds);
  }
};

PlatformServiceClient.prototype.send_addUsersToGroup = function(groupId, userIds) {
  var output = new this.pClass(this.output);
  var params = {
    groupId: groupId,
    userIds: userIds
  };
  var args = new PlatformService_addUsersToGroup_args(params);
  try {
    output.writeMessageBegin('addUsersToGroup', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_addUsersToGroup = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_addUsersToGroup_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.groupNotFound) {
    return callback(result.groupNotFound);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.removeUsersFromGroup = function(groupId, userIds, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_removeUsersFromGroup(groupId, userIds);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_removeUsersFromGroup(groupId, userIds);
  }
};

PlatformServiceClient.prototype.send_removeUsersFromGroup = function(groupId, userIds) {
  var output = new this.pClass(this.output);
  var params = {
    groupId: groupId,
    userIds: userIds
  };
  var args = new PlatformService_removeUsersFromGroup_args(params);
  try {
    output.writeMessageBegin('removeUsersFromGroup', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_removeUsersFromGroup = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_removeUsersFromGroup_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.groupNotFound) {
    return callback(result.groupNotFound);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.findUsersInGroup = function(groupId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_findUsersInGroup(groupId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_findUsersInGroup(groupId);
  }
};

PlatformServiceClient.prototype.send_findUsersInGroup = function(groupId) {
  var output = new this.pClass(this.output);
  var params = {
    groupId: groupId
  };
  var args = new PlatformService_findUsersInGroup_args(params);
  try {
    output.writeMessageBegin('findUsersInGroup', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_findUsersInGroup = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_findUsersInGroup_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.groupNotFound) {
    return callback(result.groupNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('findUsersInGroup failed: unknown result');
};

PlatformServiceClient.prototype.getCompanyDefaultDateTimeDisplayTimeZone = function(companyId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getCompanyDefaultDateTimeDisplayTimeZone(companyId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getCompanyDefaultDateTimeDisplayTimeZone(companyId);
  }
};

PlatformServiceClient.prototype.send_getCompanyDefaultDateTimeDisplayTimeZone = function(companyId) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId
  };
  var args = new PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_args(params);
  try {
    output.writeMessageBegin('getCompanyDefaultDateTimeDisplayTimeZone', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getCompanyDefaultDateTimeDisplayTimeZone = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getCompanyDefaultDateTimeDisplayTimeZone failed: unknown result');
};

PlatformServiceClient.prototype.getUserDateTimeDisplayTimeZone = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getUserDateTimeDisplayTimeZone(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getUserDateTimeDisplayTimeZone(userId);
  }
};

PlatformServiceClient.prototype.send_getUserDateTimeDisplayTimeZone = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_getUserDateTimeDisplayTimeZone_args(params);
  try {
    output.writeMessageBegin('getUserDateTimeDisplayTimeZone', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getUserDateTimeDisplayTimeZone = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getUserDateTimeDisplayTimeZone_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getUserDateTimeDisplayTimeZone failed: unknown result');
};

PlatformServiceClient.prototype.getApplicationsForUserByUserId = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getApplicationsForUserByUserId(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getApplicationsForUserByUserId(userId);
  }
};

PlatformServiceClient.prototype.send_getApplicationsForUserByUserId = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_getApplicationsForUserByUserId_args(params);
  try {
    output.writeMessageBegin('getApplicationsForUserByUserId', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getApplicationsForUserByUserId = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getApplicationsForUserByUserId_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getApplicationsForUserByUserId failed: unknown result');
};

PlatformServiceClient.prototype.getApplicationsForSystemUser = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getApplicationsForSystemUser();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getApplicationsForSystemUser();
  }
};

PlatformServiceClient.prototype.send_getApplicationsForSystemUser = function() {
  var output = new this.pClass(this.output);
  var args = new PlatformService_getApplicationsForSystemUser_args();
  try {
    output.writeMessageBegin('getApplicationsForSystemUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getApplicationsForSystemUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getApplicationsForSystemUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getApplicationsForSystemUser failed: unknown result');
};

PlatformServiceClient.prototype.getAllApplications = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getAllApplications();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getAllApplications();
  }
};

PlatformServiceClient.prototype.send_getAllApplications = function() {
  var output = new this.pClass(this.output);
  var args = new PlatformService_getAllApplications_args();
  try {
    output.writeMessageBegin('getAllApplications', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getAllApplications = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getAllApplications_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getAllApplications failed: unknown result');
};

PlatformServiceClient.prototype.setCompanyDefaultDateTimeDisplayTimeZone = function(companyId, timeZone, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_setCompanyDefaultDateTimeDisplayTimeZone(companyId, timeZone);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_setCompanyDefaultDateTimeDisplayTimeZone(companyId, timeZone);
  }
};

PlatformServiceClient.prototype.send_setCompanyDefaultDateTimeDisplayTimeZone = function(companyId, timeZone) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    timeZone: timeZone
  };
  var args = new PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_args(params);
  try {
    output.writeMessageBegin('setCompanyDefaultDateTimeDisplayTimeZone', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_setCompanyDefaultDateTimeDisplayTimeZone = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.setUserDateTimeDisplayTimeZone = function(userId, timeZone, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_setUserDateTimeDisplayTimeZone(userId, timeZone);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_setUserDateTimeDisplayTimeZone(userId, timeZone);
  }
};

PlatformServiceClient.prototype.send_setUserDateTimeDisplayTimeZone = function(userId, timeZone) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId,
    timeZone: timeZone
  };
  var args = new PlatformService_setUserDateTimeDisplayTimeZone_args(params);
  try {
    output.writeMessageBegin('setUserDateTimeDisplayTimeZone', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_setUserDateTimeDisplayTimeZone = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_setUserDateTimeDisplayTimeZone_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.setUserDateTimeDisplayTimeZoneToCompanyDefault = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_setUserDateTimeDisplayTimeZoneToCompanyDefault(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_setUserDateTimeDisplayTimeZoneToCompanyDefault(userId);
  }
};

PlatformServiceClient.prototype.send_setUserDateTimeDisplayTimeZoneToCompanyDefault = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_args(params);
  try {
    output.writeMessageBegin('setUserDateTimeDisplayTimeZoneToCompanyDefault', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_setUserDateTimeDisplayTimeZoneToCompanyDefault = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.enableGrMessageForCompany = function(companyId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_enableGrMessageForCompany(companyId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_enableGrMessageForCompany(companyId);
  }
};

PlatformServiceClient.prototype.send_enableGrMessageForCompany = function(companyId) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId
  };
  var args = new PlatformService_enableGrMessageForCompany_args(params);
  try {
    output.writeMessageBegin('enableGrMessageForCompany', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_enableGrMessageForCompany = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_enableGrMessageForCompany_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.enableAllServicesForCompany = function(companyId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_enableAllServicesForCompany(companyId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_enableAllServicesForCompany(companyId);
  }
};

PlatformServiceClient.prototype.send_enableAllServicesForCompany = function(companyId) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId
  };
  var args = new PlatformService_enableAllServicesForCompany_args(params);
  try {
    output.writeMessageBegin('enableAllServicesForCompany', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_enableAllServicesForCompany = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_enableAllServicesForCompany_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.enableServiceForCompany = function(companyId, serviceSku, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_enableServiceForCompany(companyId, serviceSku);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_enableServiceForCompany(companyId, serviceSku);
  }
};

PlatformServiceClient.prototype.send_enableServiceForCompany = function(companyId, serviceSku) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    serviceSku: serviceSku
  };
  var args = new PlatformService_enableServiceForCompany_args(params);
  try {
    output.writeMessageBegin('enableServiceForCompany', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_enableServiceForCompany = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_enableServiceForCompany_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.enableServiceForCompanyV2 = function(enableCompanyServiceStruct, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_enableServiceForCompanyV2(enableCompanyServiceStruct);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_enableServiceForCompanyV2(enableCompanyServiceStruct);
  }
};

PlatformServiceClient.prototype.send_enableServiceForCompanyV2 = function(enableCompanyServiceStruct) {
  var output = new this.pClass(this.output);
  var params = {
    enableCompanyServiceStruct: enableCompanyServiceStruct
  };
  var args = new PlatformService_enableServiceForCompanyV2_args(params);
  try {
    output.writeMessageBegin('enableServiceForCompanyV2', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_enableServiceForCompanyV2 = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_enableServiceForCompanyV2_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.enableReportServiceForCompany = function(companyId, reportPackCode, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_enableReportServiceForCompany(companyId, reportPackCode);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_enableReportServiceForCompany(companyId, reportPackCode);
  }
};

PlatformServiceClient.prototype.send_enableReportServiceForCompany = function(companyId, reportPackCode) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    reportPackCode: reportPackCode
  };
  var args = new PlatformService_enableReportServiceForCompany_args(params);
  try {
    output.writeMessageBegin('enableReportServiceForCompany', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_enableReportServiceForCompany = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_enableReportServiceForCompany_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.disableServiceForCompany = function(companyId, serviceSku, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_disableServiceForCompany(companyId, serviceSku);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_disableServiceForCompany(companyId, serviceSku);
  }
};

PlatformServiceClient.prototype.send_disableServiceForCompany = function(companyId, serviceSku) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    serviceSku: serviceSku
  };
  var args = new PlatformService_disableServiceForCompany_args(params);
  try {
    output.writeMessageBegin('disableServiceForCompany', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_disableServiceForCompany = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_disableServiceForCompany_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.vHostExists = function(vHostPrefix, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_vHostExists(vHostPrefix);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_vHostExists(vHostPrefix);
  }
};

PlatformServiceClient.prototype.send_vHostExists = function(vHostPrefix) {
  var output = new this.pClass(this.output);
  var params = {
    vHostPrefix: vHostPrefix
  };
  var args = new PlatformService_vHostExists_args(params);
  try {
    output.writeMessageBegin('vHostExists', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_vHostExists = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_vHostExists_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('vHostExists failed: unknown result');
};

PlatformServiceClient.prototype.getArchiveContactInformation = function(archiveId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getArchiveContactInformation(archiveId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getArchiveContactInformation(archiveId);
  }
};

PlatformServiceClient.prototype.send_getArchiveContactInformation = function(archiveId) {
  var output = new this.pClass(this.output);
  var params = {
    archiveId: archiveId
  };
  var args = new PlatformService_getArchiveContactInformation_args(params);
  try {
    output.writeMessageBegin('getArchiveContactInformation', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getArchiveContactInformation = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getArchiveContactInformation_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.archiveNotFound) {
    return callback(result.archiveNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getArchiveContactInformation failed: unknown result');
};

PlatformServiceClient.prototype.getOperationsForUser = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getOperationsForUser(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getOperationsForUser(userId);
  }
};

PlatformServiceClient.prototype.send_getOperationsForUser = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_getOperationsForUser_args(params);
  try {
    output.writeMessageBegin('getOperationsForUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getOperationsForUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getOperationsForUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getOperationsForUser failed: unknown result');
};

PlatformServiceClient.prototype.getEntitlementsForUser = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getEntitlementsForUser(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getEntitlementsForUser(userId);
  }
};

PlatformServiceClient.prototype.send_getEntitlementsForUser = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_getEntitlementsForUser_args(params);
  try {
    output.writeMessageBegin('getEntitlementsForUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getEntitlementsForUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getEntitlementsForUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getEntitlementsForUser failed: unknown result');
};

PlatformServiceClient.prototype.getServiceManagerOperationsForUser = function(userId, companyId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getServiceManagerOperationsForUser(userId, companyId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getServiceManagerOperationsForUser(userId, companyId);
  }
};

PlatformServiceClient.prototype.send_getServiceManagerOperationsForUser = function(userId, companyId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId,
    companyId: companyId
  };
  var args = new PlatformService_getServiceManagerOperationsForUser_args(params);
  try {
    output.writeMessageBegin('getServiceManagerOperationsForUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getServiceManagerOperationsForUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getServiceManagerOperationsForUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getServiceManagerOperationsForUser failed: unknown result');
};

PlatformServiceClient.prototype.getOperationsForUserByApplicationName = function(userId, applicationName, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getOperationsForUserByApplicationName(userId, applicationName);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getOperationsForUserByApplicationName(userId, applicationName);
  }
};

PlatformServiceClient.prototype.send_getOperationsForUserByApplicationName = function(userId, applicationName) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId,
    applicationName: applicationName
  };
  var args = new PlatformService_getOperationsForUserByApplicationName_args(params);
  try {
    output.writeMessageBegin('getOperationsForUserByApplicationName', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getOperationsForUserByApplicationName = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getOperationsForUserByApplicationName_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getOperationsForUserByApplicationName failed: unknown result');
};

PlatformServiceClient.prototype.getUserInfo = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getUserInfo(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getUserInfo(userId);
  }
};

PlatformServiceClient.prototype.send_getUserInfo = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_getUserInfo_args(params);
  try {
    output.writeMessageBegin('getUserInfo', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getUserInfo = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getUserInfo_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getUserInfo failed: unknown result');
};

PlatformServiceClient.prototype.getUserInfoByEmail = function(email, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getUserInfoByEmail(email);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getUserInfoByEmail(email);
  }
};

PlatformServiceClient.prototype.send_getUserInfoByEmail = function(email) {
  var output = new this.pClass(this.output);
  var params = {
    email: email
  };
  var args = new PlatformService_getUserInfoByEmail_args(params);
  try {
    output.writeMessageBegin('getUserInfoByEmail', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getUserInfoByEmail = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getUserInfoByEmail_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getUserInfoByEmail failed: unknown result');
};

PlatformServiceClient.prototype.getUserInfoBasic = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getUserInfoBasic(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getUserInfoBasic(userId);
  }
};

PlatformServiceClient.prototype.send_getUserInfoBasic = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_getUserInfoBasic_args(params);
  try {
    output.writeMessageBegin('getUserInfoBasic', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getUserInfoBasic = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getUserInfoBasic_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getUserInfoBasic failed: unknown result');
};

PlatformServiceClient.prototype.getSystemUserInfo = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getSystemUserInfo(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getSystemUserInfo(userId);
  }
};

PlatformServiceClient.prototype.send_getSystemUserInfo = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_getSystemUserInfo_args(params);
  try {
    output.writeMessageBegin('getSystemUserInfo', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getSystemUserInfo = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getSystemUserInfo_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getSystemUserInfo failed: unknown result');
};

PlatformServiceClient.prototype.getUserInfoWithSupportMessage = function(userId, language, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getUserInfoWithSupportMessage(userId, language);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getUserInfoWithSupportMessage(userId, language);
  }
};

PlatformServiceClient.prototype.send_getUserInfoWithSupportMessage = function(userId, language) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId,
    language: language
  };
  var args = new PlatformService_getUserInfoWithSupportMessage_args(params);
  try {
    output.writeMessageBegin('getUserInfoWithSupportMessage', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getUserInfoWithSupportMessage = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getUserInfoWithSupportMessage_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getUserInfoWithSupportMessage failed: unknown result');
};

PlatformServiceClient.prototype.getProvisionedServices = function(companyId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getProvisionedServices(companyId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getProvisionedServices(companyId);
  }
};

PlatformServiceClient.prototype.send_getProvisionedServices = function(companyId) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId
  };
  var args = new PlatformService_getProvisionedServices_args(params);
  try {
    output.writeMessageBegin('getProvisionedServices', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getProvisionedServices = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getProvisionedServices_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getProvisionedServices failed: unknown result');
};

PlatformServiceClient.prototype.setUserCustomerUserId = function(userId, customerUserId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_setUserCustomerUserId(userId, customerUserId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_setUserCustomerUserId(userId, customerUserId);
  }
};

PlatformServiceClient.prototype.send_setUserCustomerUserId = function(userId, customerUserId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId,
    customerUserId: customerUserId
  };
  var args = new PlatformService_setUserCustomerUserId_args(params);
  try {
    output.writeMessageBegin('setUserCustomerUserId', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_setUserCustomerUserId = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_setUserCustomerUserId_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.setCompanySupportContactInformation = function(companyId, supportMessages, useSupportMessages, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_setCompanySupportContactInformation(companyId, supportMessages, useSupportMessages);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_setCompanySupportContactInformation(companyId, supportMessages, useSupportMessages);
  }
};

PlatformServiceClient.prototype.send_setCompanySupportContactInformation = function(companyId, supportMessages, useSupportMessages) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    supportMessages: supportMessages,
    useSupportMessages: useSupportMessages
  };
  var args = new PlatformService_setCompanySupportContactInformation_args(params);
  try {
    output.writeMessageBegin('setCompanySupportContactInformation', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_setCompanySupportContactInformation = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_setCompanySupportContactInformation_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.deactivateUser = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_deactivateUser(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_deactivateUser(userId);
  }
};

PlatformServiceClient.prototype.send_deactivateUser = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_deactivateUser_args(params);
  try {
    output.writeMessageBegin('deactivateUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_deactivateUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_deactivateUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.activateUser = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_activateUser(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_activateUser(userId);
  }
};

PlatformServiceClient.prototype.send_activateUser = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_activateUser_args(params);
  try {
    output.writeMessageBegin('activateUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_activateUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_activateUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.getCompanyProfile = function(companyId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getCompanyProfile(companyId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getCompanyProfile(companyId);
  }
};

PlatformServiceClient.prototype.send_getCompanyProfile = function(companyId) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId
  };
  var args = new PlatformService_getCompanyProfile_args(params);
  try {
    output.writeMessageBegin('getCompanyProfile', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getCompanyProfile = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getCompanyProfile_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getCompanyProfile failed: unknown result');
};

PlatformServiceClient.prototype.getCompanyProfileBasic = function(companyId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getCompanyProfileBasic(companyId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getCompanyProfileBasic(companyId);
  }
};

PlatformServiceClient.prototype.send_getCompanyProfileBasic = function(companyId) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId
  };
  var args = new PlatformService_getCompanyProfileBasic_args(params);
  try {
    output.writeMessageBegin('getCompanyProfileBasic', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getCompanyProfileBasic = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getCompanyProfileBasic_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getCompanyProfileBasic failed: unknown result');
};

PlatformServiceClient.prototype.getCompanyLogo = function(companyId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getCompanyLogo(companyId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getCompanyLogo(companyId);
  }
};

PlatformServiceClient.prototype.send_getCompanyLogo = function(companyId) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId
  };
  var args = new PlatformService_getCompanyLogo_args(params);
  try {
    output.writeMessageBegin('getCompanyLogo', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getCompanyLogo = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getCompanyLogo_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getCompanyLogo failed: unknown result');
};

PlatformServiceClient.prototype.setCompanyProfile = function(companyProfile, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_setCompanyProfile(companyProfile);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_setCompanyProfile(companyProfile);
  }
};

PlatformServiceClient.prototype.send_setCompanyProfile = function(companyProfile) {
  var output = new this.pClass(this.output);
  var params = {
    companyProfile: companyProfile
  };
  var args = new PlatformService_setCompanyProfile_args(params);
  try {
    output.writeMessageBegin('setCompanyProfile', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_setCompanyProfile = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_setCompanyProfile_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.getUserProfile = function(userId, actingUserId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getUserProfile(userId, actingUserId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getUserProfile(userId, actingUserId);
  }
};

PlatformServiceClient.prototype.send_getUserProfile = function(userId, actingUserId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId,
    actingUserId: actingUserId
  };
  var args = new PlatformService_getUserProfile_args(params);
  try {
    output.writeMessageBegin('getUserProfile', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getUserProfile = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getUserProfile_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getUserProfile failed: unknown result');
};

PlatformServiceClient.prototype.setUserProfile = function(userId, userSetAttributes, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_setUserProfile(userId, userSetAttributes);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_setUserProfile(userId, userSetAttributes);
  }
};

PlatformServiceClient.prototype.send_setUserProfile = function(userId, userSetAttributes) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId,
    userSetAttributes: userSetAttributes
  };
  var args = new PlatformService_setUserProfile_args(params);
  try {
    output.writeMessageBegin('setUserProfile', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_setUserProfile = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_setUserProfile_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userProfileEditability) {
    return callback(result.userProfileEditability);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.userAutoComplete = function(companyId, searchTerm, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_userAutoComplete(companyId, searchTerm);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_userAutoComplete(companyId, searchTerm);
  }
};

PlatformServiceClient.prototype.send_userAutoComplete = function(companyId, searchTerm) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    searchTerm: searchTerm
  };
  var args = new PlatformService_userAutoComplete_args(params);
  try {
    output.writeMessageBegin('userAutoComplete', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_userAutoComplete = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_userAutoComplete_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.invalidSearchCriteria) {
    return callback(result.invalidSearchCriteria);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('userAutoComplete failed: unknown result');
};

PlatformServiceClient.prototype.createExtendedUserProperty = function(companyId, name, dataType, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createExtendedUserProperty(companyId, name, dataType);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createExtendedUserProperty(companyId, name, dataType);
  }
};

PlatformServiceClient.prototype.send_createExtendedUserProperty = function(companyId, name, dataType) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    name: name,
    dataType: dataType
  };
  var args = new PlatformService_createExtendedUserProperty_args(params);
  try {
    output.writeMessageBegin('createExtendedUserProperty', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createExtendedUserProperty = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createExtendedUserProperty_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createExtendedUserProperty failed: unknown result');
};

PlatformServiceClient.prototype.createExtendedUserPropertyV2 = function(createStruct, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createExtendedUserPropertyV2(createStruct);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createExtendedUserPropertyV2(createStruct);
  }
};

PlatformServiceClient.prototype.send_createExtendedUserPropertyV2 = function(createStruct) {
  var output = new this.pClass(this.output);
  var params = {
    createStruct: createStruct
  };
  var args = new PlatformService_createExtendedUserPropertyV2_args(params);
  try {
    output.writeMessageBegin('createExtendedUserPropertyV2', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createExtendedUserPropertyV2 = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createExtendedUserPropertyV2_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createExtendedUserPropertyV2 failed: unknown result');
};

PlatformServiceClient.prototype.deleteExtendedUserProperty = function(extendedUserPropertyId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_deleteExtendedUserProperty(extendedUserPropertyId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_deleteExtendedUserProperty(extendedUserPropertyId);
  }
};

PlatformServiceClient.prototype.send_deleteExtendedUserProperty = function(extendedUserPropertyId) {
  var output = new this.pClass(this.output);
  var params = {
    extendedUserPropertyId: extendedUserPropertyId
  };
  var args = new PlatformService_deleteExtendedUserProperty_args(params);
  try {
    output.writeMessageBegin('deleteExtendedUserProperty', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_deleteExtendedUserProperty = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_deleteExtendedUserProperty_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyExtendedUserPropertyNotFoundException) {
    return callback(result.companyExtendedUserPropertyNotFoundException);
  }
  callback(null);
};

PlatformServiceClient.prototype.createExtendedPropertyValues = function(userId, extendedPropertyName, values, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createExtendedPropertyValues(userId, extendedPropertyName, values);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createExtendedPropertyValues(userId, extendedPropertyName, values);
  }
};

PlatformServiceClient.prototype.send_createExtendedPropertyValues = function(userId, extendedPropertyName, values) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId,
    extendedPropertyName: extendedPropertyName,
    values: values
  };
  var args = new PlatformService_createExtendedPropertyValues_args(params);
  try {
    output.writeMessageBegin('createExtendedPropertyValues', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createExtendedPropertyValues = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createExtendedPropertyValues_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  callback(null);
};

PlatformServiceClient.prototype.createGroupExtendedPropertyValues = function(companyGroupId, extendedPropertyName, values, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createGroupExtendedPropertyValues(companyGroupId, extendedPropertyName, values);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createGroupExtendedPropertyValues(companyGroupId, extendedPropertyName, values);
  }
};

PlatformServiceClient.prototype.send_createGroupExtendedPropertyValues = function(companyGroupId, extendedPropertyName, values) {
  var output = new this.pClass(this.output);
  var params = {
    companyGroupId: companyGroupId,
    extendedPropertyName: extendedPropertyName,
    values: values
  };
  var args = new PlatformService_createGroupExtendedPropertyValues_args(params);
  try {
    output.writeMessageBegin('createGroupExtendedPropertyValues', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createGroupExtendedPropertyValues = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createGroupExtendedPropertyValues_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  callback(null);
};

PlatformServiceClient.prototype.getCommunicationPlatforms = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getCommunicationPlatforms();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getCommunicationPlatforms();
  }
};

PlatformServiceClient.prototype.send_getCommunicationPlatforms = function() {
  var output = new this.pClass(this.output);
  var args = new PlatformService_getCommunicationPlatforms_args();
  try {
    output.writeMessageBegin('getCommunicationPlatforms', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getCommunicationPlatforms = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getCommunicationPlatforms_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getCommunicationPlatforms failed: unknown result');
};

PlatformServiceClient.prototype.assignCommunicationPlatform = function(companyId, platformCode, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_assignCommunicationPlatform(companyId, platformCode);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_assignCommunicationPlatform(companyId, platformCode);
  }
};

PlatformServiceClient.prototype.send_assignCommunicationPlatform = function(companyId, platformCode) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    platformCode: platformCode
  };
  var args = new PlatformService_assignCommunicationPlatform_args(params);
  try {
    output.writeMessageBegin('assignCommunicationPlatform', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_assignCommunicationPlatform = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_assignCommunicationPlatform_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.communicationPlatformNotFoundException) {
    return callback(result.communicationPlatformNotFoundException);
  }
  callback(null);
};

PlatformServiceClient.prototype.getCompanyCommunicationPlatforms = function(companyId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getCompanyCommunicationPlatforms(companyId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getCompanyCommunicationPlatforms(companyId);
  }
};

PlatformServiceClient.prototype.send_getCompanyCommunicationPlatforms = function(companyId) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId
  };
  var args = new PlatformService_getCompanyCommunicationPlatforms_args(params);
  try {
    output.writeMessageBegin('getCompanyCommunicationPlatforms', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getCompanyCommunicationPlatforms = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getCompanyCommunicationPlatforms_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getCompanyCommunicationPlatforms failed: unknown result');
};

PlatformServiceClient.prototype.findUserAliases = function(queryParameters, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_findUserAliases(queryParameters);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_findUserAliases(queryParameters);
  }
};

PlatformServiceClient.prototype.send_findUserAliases = function(queryParameters) {
  var output = new this.pClass(this.output);
  var params = {
    queryParameters: queryParameters
  };
  var args = new PlatformService_findUserAliases_args(params);
  try {
    output.writeMessageBegin('findUserAliases', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_findUserAliases = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_findUserAliases_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('findUserAliases failed: unknown result');
};

PlatformServiceClient.prototype.getRolesForCompany = function(companyId, applicationName, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getRolesForCompany(companyId, applicationName);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getRolesForCompany(companyId, applicationName);
  }
};

PlatformServiceClient.prototype.send_getRolesForCompany = function(companyId, applicationName) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    applicationName: applicationName
  };
  var args = new PlatformService_getRolesForCompany_args(params);
  try {
    output.writeMessageBegin('getRolesForCompany', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getRolesForCompany = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getRolesForCompany_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.companyApplicationNotFound) {
    return callback(result.companyApplicationNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getRolesForCompany failed: unknown result');
};

PlatformServiceClient.prototype.getUserRoles = function(userId, applicationInstance, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getUserRoles(userId, applicationInstance);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getUserRoles(userId, applicationInstance);
  }
};

PlatformServiceClient.prototype.send_getUserRoles = function(userId, applicationInstance) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId,
    applicationInstance: applicationInstance
  };
  var args = new PlatformService_getUserRoles_args(params);
  try {
    output.writeMessageBegin('getUserRoles', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getUserRoles = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getUserRoles_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.applicationInstanceNotFound) {
    return callback(result.applicationInstanceNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getUserRoles failed: unknown result');
};

PlatformServiceClient.prototype.createRole = function(roleName, companyId, applicationName, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createRole(roleName, companyId, applicationName);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createRole(roleName, companyId, applicationName);
  }
};

PlatformServiceClient.prototype.send_createRole = function(roleName, companyId, applicationName) {
  var output = new this.pClass(this.output);
  var params = {
    roleName: roleName,
    companyId: companyId,
    applicationName: applicationName
  };
  var args = new PlatformService_createRole_args(params);
  try {
    output.writeMessageBegin('createRole', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createRole = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createRole_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.companyApplicationNotFound) {
    return callback(result.companyApplicationNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createRole failed: unknown result');
};

PlatformServiceClient.prototype.deleteRole = function(roleId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_deleteRole(roleId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_deleteRole(roleId);
  }
};

PlatformServiceClient.prototype.send_deleteRole = function(roleId) {
  var output = new this.pClass(this.output);
  var params = {
    roleId: roleId
  };
  var args = new PlatformService_deleteRole_args(params);
  try {
    output.writeMessageBegin('deleteRole', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_deleteRole = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_deleteRole_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.roleNotFound) {
    return callback(result.roleNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.setOperationsForRole = function(roleId, operations, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_setOperationsForRole(roleId, operations);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_setOperationsForRole(roleId, operations);
  }
};

PlatformServiceClient.prototype.send_setOperationsForRole = function(roleId, operations) {
  var output = new this.pClass(this.output);
  var params = {
    roleId: roleId,
    operations: operations
  };
  var args = new PlatformService_setOperationsForRole_args(params);
  try {
    output.writeMessageBegin('setOperationsForRole', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_setOperationsForRole = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_setOperationsForRole_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.roleNotFound) {
    return callback(result.roleNotFound);
  }
  if (null !== result.operationNotFound) {
    return callback(result.operationNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.addRoleToUser = function(roleId, userId, applicationInstance, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_addRoleToUser(roleId, userId, applicationInstance);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_addRoleToUser(roleId, userId, applicationInstance);
  }
};

PlatformServiceClient.prototype.send_addRoleToUser = function(roleId, userId, applicationInstance) {
  var output = new this.pClass(this.output);
  var params = {
    roleId: roleId,
    userId: userId,
    applicationInstance: applicationInstance
  };
  var args = new PlatformService_addRoleToUser_args(params);
  try {
    output.writeMessageBegin('addRoleToUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_addRoleToUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_addRoleToUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.roleNotFound) {
    return callback(result.roleNotFound);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.applicationInstanceNotFound) {
    return callback(result.applicationInstanceNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.removeRoleFromUser = function(roleId, userId, applicationInstance, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_removeRoleFromUser(roleId, userId, applicationInstance);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_removeRoleFromUser(roleId, userId, applicationInstance);
  }
};

PlatformServiceClient.prototype.send_removeRoleFromUser = function(roleId, userId, applicationInstance) {
  var output = new this.pClass(this.output);
  var params = {
    roleId: roleId,
    userId: userId,
    applicationInstance: applicationInstance
  };
  var args = new PlatformService_removeRoleFromUser_args(params);
  try {
    output.writeMessageBegin('removeRoleFromUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_removeRoleFromUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_removeRoleFromUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.roleNotFound) {
    return callback(result.roleNotFound);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.applicationInstanceNotFound) {
    return callback(result.applicationInstanceNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.addRoleToGroup = function(roleId, groupId, applicationInstance, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_addRoleToGroup(roleId, groupId, applicationInstance);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_addRoleToGroup(roleId, groupId, applicationInstance);
  }
};

PlatformServiceClient.prototype.send_addRoleToGroup = function(roleId, groupId, applicationInstance) {
  var output = new this.pClass(this.output);
  var params = {
    roleId: roleId,
    groupId: groupId,
    applicationInstance: applicationInstance
  };
  var args = new PlatformService_addRoleToGroup_args(params);
  try {
    output.writeMessageBegin('addRoleToGroup', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_addRoleToGroup = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_addRoleToGroup_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.roleNotFound) {
    return callback(result.roleNotFound);
  }
  if (null !== result.groupNotFound) {
    return callback(result.groupNotFound);
  }
  if (null !== result.applicationInstanceNotFound) {
    return callback(result.applicationInstanceNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.deactivateUserAlias = function(userAlias, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_deactivateUserAlias(userAlias);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_deactivateUserAlias(userAlias);
  }
};

PlatformServiceClient.prototype.send_deactivateUserAlias = function(userAlias) {
  var output = new this.pClass(this.output);
  var params = {
    userAlias: userAlias
  };
  var args = new PlatformService_deactivateUserAlias_args(params);
  try {
    output.writeMessageBegin('deactivateUserAlias', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_deactivateUserAlias = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_deactivateUserAlias_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userAliasNotFound) {
    return callback(result.userAliasNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.addAliasesToUser = function(companyId, userId, aliasList, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_addAliasesToUser(companyId, userId, aliasList);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_addAliasesToUser(companyId, userId, aliasList);
  }
};

PlatformServiceClient.prototype.send_addAliasesToUser = function(companyId, userId, aliasList) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    userId: userId,
    aliasList: aliasList
  };
  var args = new PlatformService_addAliasesToUser_args(params);
  try {
    output.writeMessageBegin('addAliasesToUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_addAliasesToUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_addAliasesToUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.getGroupInformation = function(groupIds, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getGroupInformation(groupIds);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getGroupInformation(groupIds);
  }
};

PlatformServiceClient.prototype.send_getGroupInformation = function(groupIds) {
  var output = new this.pClass(this.output);
  var params = {
    groupIds: groupIds
  };
  var args = new PlatformService_getGroupInformation_args(params);
  try {
    output.writeMessageBegin('getGroupInformation', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getGroupInformation = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getGroupInformation_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getGroupInformation failed: unknown result');
};

PlatformServiceClient.prototype.authorizeSocialMediaAccount = function(userId, platformCode, socialMediaAccessToken, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_authorizeSocialMediaAccount(userId, platformCode, socialMediaAccessToken);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_authorizeSocialMediaAccount(userId, platformCode, socialMediaAccessToken);
  }
};

PlatformServiceClient.prototype.send_authorizeSocialMediaAccount = function(userId, platformCode, socialMediaAccessToken) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId,
    platformCode: platformCode,
    socialMediaAccessToken: socialMediaAccessToken
  };
  var args = new PlatformService_authorizeSocialMediaAccount_args(params);
  try {
    output.writeMessageBegin('authorizeSocialMediaAccount', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_authorizeSocialMediaAccount = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_authorizeSocialMediaAccount_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  callback(null);
};

PlatformServiceClient.prototype.getUserProfilePolicy = function(companyId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getUserProfilePolicy(companyId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getUserProfilePolicy(companyId);
  }
};

PlatformServiceClient.prototype.send_getUserProfilePolicy = function(companyId) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId
  };
  var args = new PlatformService_getUserProfilePolicy_args(params);
  try {
    output.writeMessageBegin('getUserProfilePolicy', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getUserProfilePolicy = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getUserProfilePolicy_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getUserProfilePolicy failed: unknown result');
};

PlatformServiceClient.prototype.setUserProfilePolicy = function(companyId, profilePolicy, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_setUserProfilePolicy(companyId, profilePolicy);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_setUserProfilePolicy(companyId, profilePolicy);
  }
};

PlatformServiceClient.prototype.send_setUserProfilePolicy = function(companyId, profilePolicy) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    profilePolicy: profilePolicy
  };
  var args = new PlatformService_setUserProfilePolicy_args(params);
  try {
    output.writeMessageBegin('setUserProfilePolicy', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_setUserProfilePolicy = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_setUserProfilePolicy_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.assignMessageAccessRightsToArchive = function(userId, archiveId, accessRights, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_assignMessageAccessRightsToArchive(userId, archiveId, accessRights);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_assignMessageAccessRightsToArchive(userId, archiveId, accessRights);
  }
};

PlatformServiceClient.prototype.send_assignMessageAccessRightsToArchive = function(userId, archiveId, accessRights) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId,
    archiveId: archiveId,
    accessRights: accessRights
  };
  var args = new PlatformService_assignMessageAccessRightsToArchive_args(params);
  try {
    output.writeMessageBegin('assignMessageAccessRightsToArchive', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_assignMessageAccessRightsToArchive = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_assignMessageAccessRightsToArchive_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.archiveNotFound) {
    return callback(result.archiveNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.enableUser = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_enableUser(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_enableUser(userId);
  }
};

PlatformServiceClient.prototype.send_enableUser = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_enableUser_args(params);
  try {
    output.writeMessageBegin('enableUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_enableUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_enableUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.disableUser = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_disableUser(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_disableUser(userId);
  }
};

PlatformServiceClient.prototype.send_disableUser = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_disableUser_args(params);
  try {
    output.writeMessageBegin('disableUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_disableUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_disableUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.createSystemUser = function(companyId, systemUser, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createSystemUser(companyId, systemUser);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createSystemUser(companyId, systemUser);
  }
};

PlatformServiceClient.prototype.send_createSystemUser = function(companyId, systemUser) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    systemUser: systemUser
  };
  var args = new PlatformService_createSystemUser_args(params);
  try {
    output.writeMessageBegin('createSystemUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createSystemUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createSystemUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createSystemUser failed: unknown result');
};

PlatformServiceClient.prototype.deleteSystemUser = function(companyId, systemUserId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_deleteSystemUser(companyId, systemUserId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_deleteSystemUser(companyId, systemUserId);
  }
};

PlatformServiceClient.prototype.send_deleteSystemUser = function(companyId, systemUserId) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    systemUserId: systemUserId
  };
  var args = new PlatformService_deleteSystemUser_args(params);
  try {
    output.writeMessageBegin('deleteSystemUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_deleteSystemUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_deleteSystemUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.updateSystemUser = function(companyId, systemUserId, systemUser, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_updateSystemUser(companyId, systemUserId, systemUser);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_updateSystemUser(companyId, systemUserId, systemUser);
  }
};

PlatformServiceClient.prototype.send_updateSystemUser = function(companyId, systemUserId, systemUser) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    systemUserId: systemUserId,
    systemUser: systemUser
  };
  var args = new PlatformService_updateSystemUser_args(params);
  try {
    output.writeMessageBegin('updateSystemUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_updateSystemUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_updateSystemUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.createCompanyUsers = function(companyId, users, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createCompanyUsers(companyId, users);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createCompanyUsers(companyId, users);
  }
};

PlatformServiceClient.prototype.send_createCompanyUsers = function(companyId, users) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    users: users
  };
  var args = new PlatformService_createCompanyUsers_args(params);
  try {
    output.writeMessageBegin('createCompanyUsers', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createCompanyUsers = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createCompanyUsers_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.failureException) {
    return callback(result.failureException);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createCompanyUsers failed: unknown result');
};

PlatformServiceClient.prototype.createCompanyUserLogin = function(login, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createCompanyUserLogin(login);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createCompanyUserLogin(login);
  }
};

PlatformServiceClient.prototype.send_createCompanyUserLogin = function(login) {
  var output = new this.pClass(this.output);
  var params = {
    login: login
  };
  var args = new PlatformService_createCompanyUserLogin_args(params);
  try {
    output.writeMessageBegin('createCompanyUserLogin', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createCompanyUserLogin = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createCompanyUserLogin_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.failureException) {
    return callback(result.failureException);
  }
  callback(null);
};

PlatformServiceClient.prototype.createSystemUserLogin = function(login, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createSystemUserLogin(login);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createSystemUserLogin(login);
  }
};

PlatformServiceClient.prototype.send_createSystemUserLogin = function(login) {
  var output = new this.pClass(this.output);
  var params = {
    login: login
  };
  var args = new PlatformService_createSystemUserLogin_args(params);
  try {
    output.writeMessageBegin('createSystemUserLogin', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createSystemUserLogin = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createSystemUserLogin_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.failureException) {
    return callback(result.failureException);
  }
  callback(null);
};

PlatformServiceClient.prototype.migrateCompany = function(company, dryRun, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_migrateCompany(company, dryRun);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_migrateCompany(company, dryRun);
  }
};

PlatformServiceClient.prototype.send_migrateCompany = function(company, dryRun) {
  var output = new this.pClass(this.output);
  var params = {
    company: company,
    dryRun: dryRun
  };
  var args = new PlatformService_migrateCompany_args(params);
  try {
    output.writeMessageBegin('migrateCompany', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_migrateCompany = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_migrateCompany_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('migrateCompany failed: unknown result');
};

PlatformServiceClient.prototype.getCompanyByDomain = function(domain, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getCompanyByDomain(domain);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getCompanyByDomain(domain);
  }
};

PlatformServiceClient.prototype.send_getCompanyByDomain = function(domain) {
  var output = new this.pClass(this.output);
  var params = {
    domain: domain
  };
  var args = new PlatformService_getCompanyByDomain_args(params);
  try {
    output.writeMessageBegin('getCompanyByDomain', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getCompanyByDomain = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getCompanyByDomain_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getCompanyByDomain failed: unknown result');
};

PlatformServiceClient.prototype.createCompanyWithDomain = function(name, domain, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createCompanyWithDomain(name, domain);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createCompanyWithDomain(name, domain);
  }
};

PlatformServiceClient.prototype.send_createCompanyWithDomain = function(name, domain) {
  var output = new this.pClass(this.output);
  var params = {
    name: name,
    domain: domain
  };
  var args = new PlatformService_createCompanyWithDomain_args(params);
  try {
    output.writeMessageBegin('createCompanyWithDomain', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createCompanyWithDomain = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createCompanyWithDomain_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyAlreadyExists) {
    return callback(result.companyAlreadyExists);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createCompanyWithDomain failed: unknown result');
};

PlatformServiceClient.prototype.createUser = function(companyId, passwordHash, user, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createUser(companyId, passwordHash, user);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createUser(companyId, passwordHash, user);
  }
};

PlatformServiceClient.prototype.send_createUser = function(companyId, passwordHash, user) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    passwordHash: passwordHash,
    user: user
  };
  var args = new PlatformService_createUser_args(params);
  try {
    output.writeMessageBegin('createUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_createUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_createUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.communicationPlatformNotFoundException) {
    return callback(result.communicationPlatformNotFoundException);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createUser failed: unknown result');
};

PlatformServiceClient.prototype.getCompaniesWithServiceEnabled = function(serviceSku, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getCompaniesWithServiceEnabled(serviceSku);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getCompaniesWithServiceEnabled(serviceSku);
  }
};

PlatformServiceClient.prototype.send_getCompaniesWithServiceEnabled = function(serviceSku) {
  var output = new this.pClass(this.output);
  var params = {
    serviceSku: serviceSku
  };
  var args = new PlatformService_getCompaniesWithServiceEnabled_args(params);
  try {
    output.writeMessageBegin('getCompaniesWithServiceEnabled', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getCompaniesWithServiceEnabled = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getCompaniesWithServiceEnabled_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getCompaniesWithServiceEnabled failed: unknown result');
};

PlatformServiceClient.prototype.getCompanyArchives = function(companyId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getCompanyArchives(companyId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getCompanyArchives(companyId);
  }
};

PlatformServiceClient.prototype.send_getCompanyArchives = function(companyId) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId
  };
  var args = new PlatformService_getCompanyArchives_args(params);
  try {
    output.writeMessageBegin('getCompanyArchives', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getCompanyArchives = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getCompanyArchives_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getCompanyArchives failed: unknown result');
};

PlatformServiceClient.prototype.findUsersWithAllEntitlements = function(companyId, applicationName, entitlements, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_findUsersWithAllEntitlements(companyId, applicationName, entitlements);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_findUsersWithAllEntitlements(companyId, applicationName, entitlements);
  }
};

PlatformServiceClient.prototype.send_findUsersWithAllEntitlements = function(companyId, applicationName, entitlements) {
  var output = new this.pClass(this.output);
  var params = {
    companyId: companyId,
    applicationName: applicationName,
    entitlements: entitlements
  };
  var args = new PlatformService_findUsersWithAllEntitlements_args(params);
  try {
    output.writeMessageBegin('findUsersWithAllEntitlements', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_findUsersWithAllEntitlements = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_findUsersWithAllEntitlements_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.companyNotFound) {
    return callback(result.companyNotFound);
  }
  if (null !== result.companyApplicationNotFound) {
    return callback(result.companyApplicationNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('findUsersWithAllEntitlements failed: unknown result');
};

PlatformServiceClient.prototype.getCompanyServiceConfigBySku = function(sku, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getCompanyServiceConfigBySku(sku);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getCompanyServiceConfigBySku(sku);
  }
};

PlatformServiceClient.prototype.send_getCompanyServiceConfigBySku = function(sku) {
  var output = new this.pClass(this.output);
  var params = {
    sku: sku
  };
  var args = new PlatformService_getCompanyServiceConfigBySku_args(params);
  try {
    output.writeMessageBegin('getCompanyServiceConfigBySku', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getCompanyServiceConfigBySku = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getCompanyServiceConfigBySku_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getCompanyServiceConfigBySku failed: unknown result');
};

PlatformServiceClient.prototype.getEntitlementsForUserByApplicationNameWithConstraints = function(userId, applicationName, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getEntitlementsForUserByApplicationNameWithConstraints(userId, applicationName);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getEntitlementsForUserByApplicationNameWithConstraints(userId, applicationName);
  }
};

PlatformServiceClient.prototype.send_getEntitlementsForUserByApplicationNameWithConstraints = function(userId, applicationName) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId,
    applicationName: applicationName
  };
  var args = new PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_args(params);
  try {
    output.writeMessageBegin('getEntitlementsForUserByApplicationNameWithConstraints', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getEntitlementsForUserByApplicationNameWithConstraints = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getEntitlementsForUserByApplicationNameWithConstraints failed: unknown result');
};

PlatformServiceClient.prototype.setWebsiteRoleConstraintsToUser = function(userId, roleId, applicationInstance, applicationName, listOfConstraints, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_setWebsiteRoleConstraintsToUser(userId, roleId, applicationInstance, applicationName, listOfConstraints);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_setWebsiteRoleConstraintsToUser(userId, roleId, applicationInstance, applicationName, listOfConstraints);
  }
};

PlatformServiceClient.prototype.send_setWebsiteRoleConstraintsToUser = function(userId, roleId, applicationInstance, applicationName, listOfConstraints) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId,
    roleId: roleId,
    applicationInstance: applicationInstance,
    applicationName: applicationName,
    listOfConstraints: listOfConstraints
  };
  var args = new PlatformService_setWebsiteRoleConstraintsToUser_args(params);
  try {
    output.writeMessageBegin('setWebsiteRoleConstraintsToUser', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_setWebsiteRoleConstraintsToUser = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_setWebsiteRoleConstraintsToUser_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  callback(null);
};

PlatformServiceClient.prototype.getMessageAccessExclusions = function(userId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getMessageAccessExclusions(userId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getMessageAccessExclusions(userId);
  }
};

PlatformServiceClient.prototype.send_getMessageAccessExclusions = function(userId) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId
  };
  var args = new PlatformService_getMessageAccessExclusions_args(params);
  try {
    output.writeMessageBegin('getMessageAccessExclusions', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getMessageAccessExclusions = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getMessageAccessExclusions_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getMessageAccessExclusions failed: unknown result');
};

PlatformServiceClient.prototype.getAccessibleCompanies = function(userId, applicationName, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getAccessibleCompanies(userId, applicationName);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getAccessibleCompanies(userId, applicationName);
  }
};

PlatformServiceClient.prototype.send_getAccessibleCompanies = function(userId, applicationName) {
  var output = new this.pClass(this.output);
  var params = {
    userId: userId,
    applicationName: applicationName
  };
  var args = new PlatformService_getAccessibleCompanies_args(params);
  try {
    output.writeMessageBegin('getAccessibleCompanies', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PlatformServiceClient.prototype.recv_getAccessibleCompanies = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PlatformService_getAccessibleCompanies_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.failure) {
    return callback(result.failure);
  }
  if (null !== result.userNotFound) {
    return callback(result.userNotFound);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getAccessibleCompanies failed: unknown result');
};
var PlatformServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler;
};
PlatformServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
};
PlatformServiceProcessor.prototype.process_getVersion = function(seqid, input, output) {
  var args = new PlatformService_getVersion_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getVersion.length === 0) {
    Q.fcall(this._handler.getVersion.bind(this._handler)
    ).then(function(result) {
      var result_obj = new PlatformService_getVersion_result({success: result});
      output.writeMessageBegin("getVersion", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("getVersion", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getVersion(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new PlatformService_getVersion_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getVersion", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getVersion", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_setPreferredMailboxRecoveryAddress = function(seqid, input, output) {
  var args = new PlatformService_setPreferredMailboxRecoveryAddress_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.setPreferredMailboxRecoveryAddress.length === 2) {
    Q.fcall(this._handler.setPreferredMailboxRecoveryAddress.bind(this._handler),
      args.userId,
      args.userAliasId
    ).then(function(result) {
      var result_obj = new PlatformService_setPreferredMailboxRecoveryAddress_result({success: result});
      output.writeMessageBegin("setPreferredMailboxRecoveryAddress", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.UserAliasNotFoundException || err instanceof ttypes.UserAliasNotValidMailboxRecoveryAddressException) {
        result = new PlatformService_setPreferredMailboxRecoveryAddress_result(err);
        output.writeMessageBegin("setPreferredMailboxRecoveryAddress", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setPreferredMailboxRecoveryAddress", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.setPreferredMailboxRecoveryAddress(args.userId, args.userAliasId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.UserAliasNotFoundException || err instanceof ttypes.UserAliasNotValidMailboxRecoveryAddressException) {
        result_obj = new PlatformService_setPreferredMailboxRecoveryAddress_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("setPreferredMailboxRecoveryAddress", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setPreferredMailboxRecoveryAddress", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_removePreferredMailboxRecoveryAddress = function(seqid, input, output) {
  var args = new PlatformService_removePreferredMailboxRecoveryAddress_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.removePreferredMailboxRecoveryAddress.length === 1) {
    Q.fcall(this._handler.removePreferredMailboxRecoveryAddress.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_removePreferredMailboxRecoveryAddress_result({success: result});
      output.writeMessageBegin("removePreferredMailboxRecoveryAddress", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_removePreferredMailboxRecoveryAddress_result(err);
        output.writeMessageBegin("removePreferredMailboxRecoveryAddress", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("removePreferredMailboxRecoveryAddress", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.removePreferredMailboxRecoveryAddress(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_removePreferredMailboxRecoveryAddress_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("removePreferredMailboxRecoveryAddress", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("removePreferredMailboxRecoveryAddress", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getMailboxRecoveryAddresses = function(seqid, input, output) {
  var args = new PlatformService_getMailboxRecoveryAddresses_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getMailboxRecoveryAddresses.length === 1) {
    Q.fcall(this._handler.getMailboxRecoveryAddresses.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_getMailboxRecoveryAddresses_result({success: result});
      output.writeMessageBegin("getMailboxRecoveryAddresses", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getMailboxRecoveryAddresses_result(err);
        output.writeMessageBegin("getMailboxRecoveryAddresses", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getMailboxRecoveryAddresses", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getMailboxRecoveryAddresses(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getMailboxRecoveryAddresses_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getMailboxRecoveryAddresses", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getMailboxRecoveryAddresses", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createCompany = function(seqid, input, output) {
  var args = new PlatformService_createCompany_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createCompany.length === 1) {
    Q.fcall(this._handler.createCompany.bind(this._handler),
      args.companyLegalName
    ).then(function(result) {
      var result_obj = new PlatformService_createCompany_result({success: result});
      output.writeMessageBegin("createCompany", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyAlreadyExistsException) {
        result = new PlatformService_createCompany_result(err);
        output.writeMessageBegin("createCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createCompany(args.companyLegalName, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyAlreadyExistsException) {
        result_obj = new PlatformService_createCompany_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_deleteCompany = function(seqid, input, output) {
  var args = new PlatformService_deleteCompany_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.deleteCompany.length === 1) {
    Q.fcall(this._handler.deleteCompany.bind(this._handler),
      args.companyId
    ).then(function(result) {
      var result_obj = new PlatformService_deleteCompany_result({success: result});
      output.writeMessageBegin("deleteCompany", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_deleteCompany_result(err);
        output.writeMessageBegin("deleteCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deleteCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.deleteCompany(args.companyId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_deleteCompany_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("deleteCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deleteCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_findCompanies = function(seqid, input, output) {
  var args = new PlatformService_findCompanies_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.findCompanies.length === 1) {
    Q.fcall(this._handler.findCompanies.bind(this._handler),
      args.queryStruct
    ).then(function(result) {
      var result_obj = new PlatformService_findCompanies_result({success: result});
      output.writeMessageBegin("findCompanies", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_findCompanies_result(err);
        output.writeMessageBegin("findCompanies", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("findCompanies", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.findCompanies(args.queryStruct, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_findCompanies_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("findCompanies", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("findCompanies", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createUsers = function(seqid, input, output) {
  var args = new PlatformService_createUsers_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createUsers.length === 3) {
    Q.fcall(this._handler.createUsers.bind(this._handler),
      args.companyId,
      args.passwordHash,
      args.users
    ).then(function(result) {
      var result_obj = new PlatformService_createUsers_result({success: result});
      output.writeMessageBegin("createUsers", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.InvalidUserCountException || err instanceof ttypes.UserCountTooLargeException || err instanceof ttypes.CommunicationPlatformNotFoundException) {
        result = new PlatformService_createUsers_result(err);
        output.writeMessageBegin("createUsers", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createUsers", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createUsers(args.companyId, args.passwordHash, args.users, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.InvalidUserCountException || err instanceof ttypes.UserCountTooLargeException || err instanceof ttypes.CommunicationPlatformNotFoundException) {
        result_obj = new PlatformService_createUsers_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createUsers", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createUsers", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_deleteUser = function(seqid, input, output) {
  var args = new PlatformService_deleteUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.deleteUser.length === 1) {
    Q.fcall(this._handler.deleteUser.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_deleteUser_result({success: result});
      output.writeMessageBegin("deleteUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_deleteUser_result(err);
        output.writeMessageBegin("deleteUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deleteUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.deleteUser(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_deleteUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("deleteUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deleteUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createCompanyDomain = function(seqid, input, output) {
  var args = new PlatformService_createCompanyDomain_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createCompanyDomain.length === 2) {
    Q.fcall(this._handler.createCompanyDomain.bind(this._handler),
      args.companyId,
      args.domainName
    ).then(function(result) {
      var result_obj = new PlatformService_createCompanyDomain_result({success: result});
      output.writeMessageBegin("createCompanyDomain", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_createCompanyDomain_result(err);
        output.writeMessageBegin("createCompanyDomain", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createCompanyDomain", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createCompanyDomain(args.companyId, args.domainName, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_createCompanyDomain_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createCompanyDomain", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createCompanyDomain", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_deleteCompanyDomain = function(seqid, input, output) {
  var args = new PlatformService_deleteCompanyDomain_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.deleteCompanyDomain.length === 2) {
    Q.fcall(this._handler.deleteCompanyDomain.bind(this._handler),
      args.companyId,
      args.companyDomainId
    ).then(function(result) {
      var result_obj = new PlatformService_deleteCompanyDomain_result({success: result});
      output.writeMessageBegin("deleteCompanyDomain", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_deleteCompanyDomain_result(err);
        output.writeMessageBegin("deleteCompanyDomain", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deleteCompanyDomain", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.deleteCompanyDomain(args.companyId, args.companyDomainId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_deleteCompanyDomain_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("deleteCompanyDomain", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deleteCompanyDomain", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getCompanyDomains = function(seqid, input, output) {
  var args = new PlatformService_getCompanyDomains_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getCompanyDomains.length === 1) {
    Q.fcall(this._handler.getCompanyDomains.bind(this._handler),
      args.companyId
    ).then(function(result) {
      var result_obj = new PlatformService_getCompanyDomains_result({success: result});
      output.writeMessageBegin("getCompanyDomains", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_getCompanyDomains_result(err);
        output.writeMessageBegin("getCompanyDomains", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyDomains", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getCompanyDomains(args.companyId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_getCompanyDomains_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getCompanyDomains", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyDomains", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createCompanyDomainV2 = function(seqid, input, output) {
  var args = new PlatformService_createCompanyDomainV2_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createCompanyDomainV2.length === 3) {
    Q.fcall(this._handler.createCompanyDomainV2.bind(this._handler),
      args.companyId,
      args.domainName,
      args.isDoingBusinessAs
    ).then(function(result) {
      var result_obj = new PlatformService_createCompanyDomainV2_result({success: result});
      output.writeMessageBegin("createCompanyDomainV2", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_createCompanyDomainV2_result(err);
        output.writeMessageBegin("createCompanyDomainV2", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createCompanyDomainV2", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createCompanyDomainV2(args.companyId, args.domainName, args.isDoingBusinessAs, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_createCompanyDomainV2_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createCompanyDomainV2", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createCompanyDomainV2", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createGroup = function(seqid, input, output) {
  var args = new PlatformService_createGroup_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createGroup.length === 2) {
    Q.fcall(this._handler.createGroup.bind(this._handler),
      args.companyId,
      args.groupName
    ).then(function(result) {
      var result_obj = new PlatformService_createGroup_result({success: result});
      output.writeMessageBegin("createGroup", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.GroupAlreadyExistsException) {
        result = new PlatformService_createGroup_result(err);
        output.writeMessageBegin("createGroup", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createGroup", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createGroup(args.companyId, args.groupName, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.GroupAlreadyExistsException) {
        result_obj = new PlatformService_createGroup_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createGroup", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createGroup", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_deleteGroup = function(seqid, input, output) {
  var args = new PlatformService_deleteGroup_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.deleteGroup.length === 1) {
    Q.fcall(this._handler.deleteGroup.bind(this._handler),
      args.groupId
    ).then(function(result) {
      var result_obj = new PlatformService_deleteGroup_result({success: result});
      output.writeMessageBegin("deleteGroup", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.GroupNotFoundException) {
        result = new PlatformService_deleteGroup_result(err);
        output.writeMessageBegin("deleteGroup", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deleteGroup", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.deleteGroup(args.groupId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.GroupNotFoundException) {
        result_obj = new PlatformService_deleteGroup_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("deleteGroup", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deleteGroup", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_findGroups = function(seqid, input, output) {
  var args = new PlatformService_findGroups_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.findGroups.length === 1) {
    Q.fcall(this._handler.findGroups.bind(this._handler),
      args.groupQuery
    ).then(function(result) {
      var result_obj = new PlatformService_findGroups_result({success: result});
      output.writeMessageBegin("findGroups", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_findGroups_result(err);
        output.writeMessageBegin("findGroups", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("findGroups", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.findGroups(args.groupQuery, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_findGroups_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("findGroups", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("findGroups", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_addUsersToGroup = function(seqid, input, output) {
  var args = new PlatformService_addUsersToGroup_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.addUsersToGroup.length === 2) {
    Q.fcall(this._handler.addUsersToGroup.bind(this._handler),
      args.groupId,
      args.userIds
    ).then(function(result) {
      var result_obj = new PlatformService_addUsersToGroup_result({success: result});
      output.writeMessageBegin("addUsersToGroup", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.GroupNotFoundException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_addUsersToGroup_result(err);
        output.writeMessageBegin("addUsersToGroup", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("addUsersToGroup", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.addUsersToGroup(args.groupId, args.userIds, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.GroupNotFoundException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_addUsersToGroup_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("addUsersToGroup", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("addUsersToGroup", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_removeUsersFromGroup = function(seqid, input, output) {
  var args = new PlatformService_removeUsersFromGroup_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.removeUsersFromGroup.length === 2) {
    Q.fcall(this._handler.removeUsersFromGroup.bind(this._handler),
      args.groupId,
      args.userIds
    ).then(function(result) {
      var result_obj = new PlatformService_removeUsersFromGroup_result({success: result});
      output.writeMessageBegin("removeUsersFromGroup", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.GroupNotFoundException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_removeUsersFromGroup_result(err);
        output.writeMessageBegin("removeUsersFromGroup", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("removeUsersFromGroup", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.removeUsersFromGroup(args.groupId, args.userIds, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.GroupNotFoundException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_removeUsersFromGroup_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("removeUsersFromGroup", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("removeUsersFromGroup", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_findUsersInGroup = function(seqid, input, output) {
  var args = new PlatformService_findUsersInGroup_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.findUsersInGroup.length === 1) {
    Q.fcall(this._handler.findUsersInGroup.bind(this._handler),
      args.groupId
    ).then(function(result) {
      var result_obj = new PlatformService_findUsersInGroup_result({success: result});
      output.writeMessageBegin("findUsersInGroup", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.GroupNotFoundException) {
        result = new PlatformService_findUsersInGroup_result(err);
        output.writeMessageBegin("findUsersInGroup", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("findUsersInGroup", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.findUsersInGroup(args.groupId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.GroupNotFoundException) {
        result_obj = new PlatformService_findUsersInGroup_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("findUsersInGroup", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("findUsersInGroup", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getCompanyDefaultDateTimeDisplayTimeZone = function(seqid, input, output) {
  var args = new PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getCompanyDefaultDateTimeDisplayTimeZone.length === 1) {
    Q.fcall(this._handler.getCompanyDefaultDateTimeDisplayTimeZone.bind(this._handler),
      args.companyId
    ).then(function(result) {
      var result_obj = new PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_result({success: result});
      output.writeMessageBegin("getCompanyDefaultDateTimeDisplayTimeZone", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_result(err);
        output.writeMessageBegin("getCompanyDefaultDateTimeDisplayTimeZone", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyDefaultDateTimeDisplayTimeZone", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getCompanyDefaultDateTimeDisplayTimeZone(args.companyId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_getCompanyDefaultDateTimeDisplayTimeZone_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getCompanyDefaultDateTimeDisplayTimeZone", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyDefaultDateTimeDisplayTimeZone", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getUserDateTimeDisplayTimeZone = function(seqid, input, output) {
  var args = new PlatformService_getUserDateTimeDisplayTimeZone_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getUserDateTimeDisplayTimeZone.length === 1) {
    Q.fcall(this._handler.getUserDateTimeDisplayTimeZone.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_getUserDateTimeDisplayTimeZone_result({success: result});
      output.writeMessageBegin("getUserDateTimeDisplayTimeZone", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getUserDateTimeDisplayTimeZone_result(err);
        output.writeMessageBegin("getUserDateTimeDisplayTimeZone", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserDateTimeDisplayTimeZone", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getUserDateTimeDisplayTimeZone(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getUserDateTimeDisplayTimeZone_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getUserDateTimeDisplayTimeZone", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserDateTimeDisplayTimeZone", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getApplicationsForUserByUserId = function(seqid, input, output) {
  var args = new PlatformService_getApplicationsForUserByUserId_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getApplicationsForUserByUserId.length === 1) {
    Q.fcall(this._handler.getApplicationsForUserByUserId.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_getApplicationsForUserByUserId_result({success: result});
      output.writeMessageBegin("getApplicationsForUserByUserId", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getApplicationsForUserByUserId_result(err);
        output.writeMessageBegin("getApplicationsForUserByUserId", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getApplicationsForUserByUserId", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getApplicationsForUserByUserId(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getApplicationsForUserByUserId_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getApplicationsForUserByUserId", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getApplicationsForUserByUserId", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getApplicationsForSystemUser = function(seqid, input, output) {
  var args = new PlatformService_getApplicationsForSystemUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getApplicationsForSystemUser.length === 0) {
    Q.fcall(this._handler.getApplicationsForSystemUser.bind(this._handler)
    ).then(function(result) {
      var result_obj = new PlatformService_getApplicationsForSystemUser_result({success: result});
      output.writeMessageBegin("getApplicationsForSystemUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_getApplicationsForSystemUser_result(err);
        output.writeMessageBegin("getApplicationsForSystemUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getApplicationsForSystemUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getApplicationsForSystemUser(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_getApplicationsForSystemUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getApplicationsForSystemUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getApplicationsForSystemUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getAllApplications = function(seqid, input, output) {
  var args = new PlatformService_getAllApplications_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getAllApplications.length === 0) {
    Q.fcall(this._handler.getAllApplications.bind(this._handler)
    ).then(function(result) {
      var result_obj = new PlatformService_getAllApplications_result({success: result});
      output.writeMessageBegin("getAllApplications", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_getAllApplications_result(err);
        output.writeMessageBegin("getAllApplications", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getAllApplications", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getAllApplications(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_getAllApplications_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getAllApplications", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getAllApplications", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_setCompanyDefaultDateTimeDisplayTimeZone = function(seqid, input, output) {
  var args = new PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.setCompanyDefaultDateTimeDisplayTimeZone.length === 2) {
    Q.fcall(this._handler.setCompanyDefaultDateTimeDisplayTimeZone.bind(this._handler),
      args.companyId,
      args.timeZone
    ).then(function(result) {
      var result_obj = new PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_result({success: result});
      output.writeMessageBegin("setCompanyDefaultDateTimeDisplayTimeZone", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_result(err);
        output.writeMessageBegin("setCompanyDefaultDateTimeDisplayTimeZone", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setCompanyDefaultDateTimeDisplayTimeZone", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.setCompanyDefaultDateTimeDisplayTimeZone(args.companyId, args.timeZone, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_setCompanyDefaultDateTimeDisplayTimeZone_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("setCompanyDefaultDateTimeDisplayTimeZone", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setCompanyDefaultDateTimeDisplayTimeZone", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_setUserDateTimeDisplayTimeZone = function(seqid, input, output) {
  var args = new PlatformService_setUserDateTimeDisplayTimeZone_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.setUserDateTimeDisplayTimeZone.length === 2) {
    Q.fcall(this._handler.setUserDateTimeDisplayTimeZone.bind(this._handler),
      args.userId,
      args.timeZone
    ).then(function(result) {
      var result_obj = new PlatformService_setUserDateTimeDisplayTimeZone_result({success: result});
      output.writeMessageBegin("setUserDateTimeDisplayTimeZone", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_setUserDateTimeDisplayTimeZone_result(err);
        output.writeMessageBegin("setUserDateTimeDisplayTimeZone", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setUserDateTimeDisplayTimeZone", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.setUserDateTimeDisplayTimeZone(args.userId, args.timeZone, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_setUserDateTimeDisplayTimeZone_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("setUserDateTimeDisplayTimeZone", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setUserDateTimeDisplayTimeZone", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_setUserDateTimeDisplayTimeZoneToCompanyDefault = function(seqid, input, output) {
  var args = new PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.setUserDateTimeDisplayTimeZoneToCompanyDefault.length === 1) {
    Q.fcall(this._handler.setUserDateTimeDisplayTimeZoneToCompanyDefault.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_result({success: result});
      output.writeMessageBegin("setUserDateTimeDisplayTimeZoneToCompanyDefault", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_result(err);
        output.writeMessageBegin("setUserDateTimeDisplayTimeZoneToCompanyDefault", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setUserDateTimeDisplayTimeZoneToCompanyDefault", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.setUserDateTimeDisplayTimeZoneToCompanyDefault(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_setUserDateTimeDisplayTimeZoneToCompanyDefault_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("setUserDateTimeDisplayTimeZoneToCompanyDefault", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setUserDateTimeDisplayTimeZoneToCompanyDefault", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_enableGrMessageForCompany = function(seqid, input, output) {
  var args = new PlatformService_enableGrMessageForCompany_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.enableGrMessageForCompany.length === 1) {
    Q.fcall(this._handler.enableGrMessageForCompany.bind(this._handler),
      args.companyId
    ).then(function(result) {
      var result_obj = new PlatformService_enableGrMessageForCompany_result({success: result});
      output.writeMessageBegin("enableGrMessageForCompany", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_enableGrMessageForCompany_result(err);
        output.writeMessageBegin("enableGrMessageForCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("enableGrMessageForCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.enableGrMessageForCompany(args.companyId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_enableGrMessageForCompany_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("enableGrMessageForCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("enableGrMessageForCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_enableAllServicesForCompany = function(seqid, input, output) {
  var args = new PlatformService_enableAllServicesForCompany_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.enableAllServicesForCompany.length === 1) {
    Q.fcall(this._handler.enableAllServicesForCompany.bind(this._handler),
      args.companyId
    ).then(function(result) {
      var result_obj = new PlatformService_enableAllServicesForCompany_result({success: result});
      output.writeMessageBegin("enableAllServicesForCompany", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_enableAllServicesForCompany_result(err);
        output.writeMessageBegin("enableAllServicesForCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("enableAllServicesForCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.enableAllServicesForCompany(args.companyId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_enableAllServicesForCompany_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("enableAllServicesForCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("enableAllServicesForCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_enableServiceForCompany = function(seqid, input, output) {
  var args = new PlatformService_enableServiceForCompany_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.enableServiceForCompany.length === 2) {
    Q.fcall(this._handler.enableServiceForCompany.bind(this._handler),
      args.companyId,
      args.serviceSku
    ).then(function(result) {
      var result_obj = new PlatformService_enableServiceForCompany_result({success: result});
      output.writeMessageBegin("enableServiceForCompany", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_enableServiceForCompany_result(err);
        output.writeMessageBegin("enableServiceForCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("enableServiceForCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.enableServiceForCompany(args.companyId, args.serviceSku, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_enableServiceForCompany_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("enableServiceForCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("enableServiceForCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_enableServiceForCompanyV2 = function(seqid, input, output) {
  var args = new PlatformService_enableServiceForCompanyV2_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.enableServiceForCompanyV2.length === 1) {
    Q.fcall(this._handler.enableServiceForCompanyV2.bind(this._handler),
      args.enableCompanyServiceStruct
    ).then(function(result) {
      var result_obj = new PlatformService_enableServiceForCompanyV2_result({success: result});
      output.writeMessageBegin("enableServiceForCompanyV2", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_enableServiceForCompanyV2_result(err);
        output.writeMessageBegin("enableServiceForCompanyV2", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("enableServiceForCompanyV2", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.enableServiceForCompanyV2(args.enableCompanyServiceStruct, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_enableServiceForCompanyV2_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("enableServiceForCompanyV2", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("enableServiceForCompanyV2", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_enableReportServiceForCompany = function(seqid, input, output) {
  var args = new PlatformService_enableReportServiceForCompany_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.enableReportServiceForCompany.length === 2) {
    Q.fcall(this._handler.enableReportServiceForCompany.bind(this._handler),
      args.companyId,
      args.reportPackCode
    ).then(function(result) {
      var result_obj = new PlatformService_enableReportServiceForCompany_result({success: result});
      output.writeMessageBegin("enableReportServiceForCompany", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_enableReportServiceForCompany_result(err);
        output.writeMessageBegin("enableReportServiceForCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("enableReportServiceForCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.enableReportServiceForCompany(args.companyId, args.reportPackCode, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_enableReportServiceForCompany_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("enableReportServiceForCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("enableReportServiceForCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_disableServiceForCompany = function(seqid, input, output) {
  var args = new PlatformService_disableServiceForCompany_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.disableServiceForCompany.length === 2) {
    Q.fcall(this._handler.disableServiceForCompany.bind(this._handler),
      args.companyId,
      args.serviceSku
    ).then(function(result) {
      var result_obj = new PlatformService_disableServiceForCompany_result({success: result});
      output.writeMessageBegin("disableServiceForCompany", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_disableServiceForCompany_result(err);
        output.writeMessageBegin("disableServiceForCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("disableServiceForCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.disableServiceForCompany(args.companyId, args.serviceSku, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_disableServiceForCompany_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("disableServiceForCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("disableServiceForCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_vHostExists = function(seqid, input, output) {
  var args = new PlatformService_vHostExists_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.vHostExists.length === 1) {
    Q.fcall(this._handler.vHostExists.bind(this._handler),
      args.vHostPrefix
    ).then(function(result) {
      var result_obj = new PlatformService_vHostExists_result({success: result});
      output.writeMessageBegin("vHostExists", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_vHostExists_result(err);
        output.writeMessageBegin("vHostExists", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("vHostExists", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.vHostExists(args.vHostPrefix, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_vHostExists_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("vHostExists", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("vHostExists", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getArchiveContactInformation = function(seqid, input, output) {
  var args = new PlatformService_getArchiveContactInformation_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getArchiveContactInformation.length === 1) {
    Q.fcall(this._handler.getArchiveContactInformation.bind(this._handler),
      args.archiveId
    ).then(function(result) {
      var result_obj = new PlatformService_getArchiveContactInformation_result({success: result});
      output.writeMessageBegin("getArchiveContactInformation", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.ArchiveNotFoundException) {
        result = new PlatformService_getArchiveContactInformation_result(err);
        output.writeMessageBegin("getArchiveContactInformation", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getArchiveContactInformation", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getArchiveContactInformation(args.archiveId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.ArchiveNotFoundException) {
        result_obj = new PlatformService_getArchiveContactInformation_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getArchiveContactInformation", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getArchiveContactInformation", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getOperationsForUser = function(seqid, input, output) {
  var args = new PlatformService_getOperationsForUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getOperationsForUser.length === 1) {
    Q.fcall(this._handler.getOperationsForUser.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_getOperationsForUser_result({success: result});
      output.writeMessageBegin("getOperationsForUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getOperationsForUser_result(err);
        output.writeMessageBegin("getOperationsForUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getOperationsForUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getOperationsForUser(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getOperationsForUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getOperationsForUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getOperationsForUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getEntitlementsForUser = function(seqid, input, output) {
  var args = new PlatformService_getEntitlementsForUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getEntitlementsForUser.length === 1) {
    Q.fcall(this._handler.getEntitlementsForUser.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_getEntitlementsForUser_result({success: result});
      output.writeMessageBegin("getEntitlementsForUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getEntitlementsForUser_result(err);
        output.writeMessageBegin("getEntitlementsForUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getEntitlementsForUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getEntitlementsForUser(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getEntitlementsForUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getEntitlementsForUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getEntitlementsForUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getServiceManagerOperationsForUser = function(seqid, input, output) {
  var args = new PlatformService_getServiceManagerOperationsForUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getServiceManagerOperationsForUser.length === 2) {
    Q.fcall(this._handler.getServiceManagerOperationsForUser.bind(this._handler),
      args.userId,
      args.companyId
    ).then(function(result) {
      var result_obj = new PlatformService_getServiceManagerOperationsForUser_result({success: result});
      output.writeMessageBegin("getServiceManagerOperationsForUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getServiceManagerOperationsForUser_result(err);
        output.writeMessageBegin("getServiceManagerOperationsForUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getServiceManagerOperationsForUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getServiceManagerOperationsForUser(args.userId, args.companyId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getServiceManagerOperationsForUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getServiceManagerOperationsForUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getServiceManagerOperationsForUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getOperationsForUserByApplicationName = function(seqid, input, output) {
  var args = new PlatformService_getOperationsForUserByApplicationName_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getOperationsForUserByApplicationName.length === 2) {
    Q.fcall(this._handler.getOperationsForUserByApplicationName.bind(this._handler),
      args.userId,
      args.applicationName
    ).then(function(result) {
      var result_obj = new PlatformService_getOperationsForUserByApplicationName_result({success: result});
      output.writeMessageBegin("getOperationsForUserByApplicationName", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getOperationsForUserByApplicationName_result(err);
        output.writeMessageBegin("getOperationsForUserByApplicationName", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getOperationsForUserByApplicationName", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getOperationsForUserByApplicationName(args.userId, args.applicationName, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getOperationsForUserByApplicationName_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getOperationsForUserByApplicationName", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getOperationsForUserByApplicationName", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getUserInfo = function(seqid, input, output) {
  var args = new PlatformService_getUserInfo_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getUserInfo.length === 1) {
    Q.fcall(this._handler.getUserInfo.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_getUserInfo_result({success: result});
      output.writeMessageBegin("getUserInfo", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getUserInfo_result(err);
        output.writeMessageBegin("getUserInfo", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserInfo", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getUserInfo(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getUserInfo_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getUserInfo", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserInfo", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getUserInfoByEmail = function(seqid, input, output) {
  var args = new PlatformService_getUserInfoByEmail_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getUserInfoByEmail.length === 1) {
    Q.fcall(this._handler.getUserInfoByEmail.bind(this._handler),
      args.email
    ).then(function(result) {
      var result_obj = new PlatformService_getUserInfoByEmail_result({success: result});
      output.writeMessageBegin("getUserInfoByEmail", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getUserInfoByEmail_result(err);
        output.writeMessageBegin("getUserInfoByEmail", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserInfoByEmail", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getUserInfoByEmail(args.email, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getUserInfoByEmail_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getUserInfoByEmail", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserInfoByEmail", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getUserInfoBasic = function(seqid, input, output) {
  var args = new PlatformService_getUserInfoBasic_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getUserInfoBasic.length === 1) {
    Q.fcall(this._handler.getUserInfoBasic.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_getUserInfoBasic_result({success: result});
      output.writeMessageBegin("getUserInfoBasic", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getUserInfoBasic_result(err);
        output.writeMessageBegin("getUserInfoBasic", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserInfoBasic", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getUserInfoBasic(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getUserInfoBasic_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getUserInfoBasic", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserInfoBasic", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getSystemUserInfo = function(seqid, input, output) {
  var args = new PlatformService_getSystemUserInfo_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getSystemUserInfo.length === 1) {
    Q.fcall(this._handler.getSystemUserInfo.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_getSystemUserInfo_result({success: result});
      output.writeMessageBegin("getSystemUserInfo", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getSystemUserInfo_result(err);
        output.writeMessageBegin("getSystemUserInfo", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getSystemUserInfo", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getSystemUserInfo(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getSystemUserInfo_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getSystemUserInfo", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getSystemUserInfo", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getUserInfoWithSupportMessage = function(seqid, input, output) {
  var args = new PlatformService_getUserInfoWithSupportMessage_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getUserInfoWithSupportMessage.length === 2) {
    Q.fcall(this._handler.getUserInfoWithSupportMessage.bind(this._handler),
      args.userId,
      args.language
    ).then(function(result) {
      var result_obj = new PlatformService_getUserInfoWithSupportMessage_result({success: result});
      output.writeMessageBegin("getUserInfoWithSupportMessage", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getUserInfoWithSupportMessage_result(err);
        output.writeMessageBegin("getUserInfoWithSupportMessage", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserInfoWithSupportMessage", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getUserInfoWithSupportMessage(args.userId, args.language, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getUserInfoWithSupportMessage_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getUserInfoWithSupportMessage", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserInfoWithSupportMessage", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getProvisionedServices = function(seqid, input, output) {
  var args = new PlatformService_getProvisionedServices_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getProvisionedServices.length === 1) {
    Q.fcall(this._handler.getProvisionedServices.bind(this._handler),
      args.companyId
    ).then(function(result) {
      var result_obj = new PlatformService_getProvisionedServices_result({success: result});
      output.writeMessageBegin("getProvisionedServices", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_getProvisionedServices_result(err);
        output.writeMessageBegin("getProvisionedServices", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getProvisionedServices", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getProvisionedServices(args.companyId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_getProvisionedServices_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getProvisionedServices", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getProvisionedServices", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_setUserCustomerUserId = function(seqid, input, output) {
  var args = new PlatformService_setUserCustomerUserId_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.setUserCustomerUserId.length === 2) {
    Q.fcall(this._handler.setUserCustomerUserId.bind(this._handler),
      args.userId,
      args.customerUserId
    ).then(function(result) {
      var result_obj = new PlatformService_setUserCustomerUserId_result({success: result});
      output.writeMessageBegin("setUserCustomerUserId", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_setUserCustomerUserId_result(err);
        output.writeMessageBegin("setUserCustomerUserId", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setUserCustomerUserId", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.setUserCustomerUserId(args.userId, args.customerUserId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_setUserCustomerUserId_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("setUserCustomerUserId", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setUserCustomerUserId", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_setCompanySupportContactInformation = function(seqid, input, output) {
  var args = new PlatformService_setCompanySupportContactInformation_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.setCompanySupportContactInformation.length === 3) {
    Q.fcall(this._handler.setCompanySupportContactInformation.bind(this._handler),
      args.companyId,
      args.supportMessages,
      args.useSupportMessages
    ).then(function(result) {
      var result_obj = new PlatformService_setCompanySupportContactInformation_result({success: result});
      output.writeMessageBegin("setCompanySupportContactInformation", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_setCompanySupportContactInformation_result(err);
        output.writeMessageBegin("setCompanySupportContactInformation", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setCompanySupportContactInformation", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.setCompanySupportContactInformation(args.companyId, args.supportMessages, args.useSupportMessages, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_setCompanySupportContactInformation_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("setCompanySupportContactInformation", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setCompanySupportContactInformation", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_deactivateUser = function(seqid, input, output) {
  var args = new PlatformService_deactivateUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.deactivateUser.length === 1) {
    Q.fcall(this._handler.deactivateUser.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_deactivateUser_result({success: result});
      output.writeMessageBegin("deactivateUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_deactivateUser_result(err);
        output.writeMessageBegin("deactivateUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deactivateUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.deactivateUser(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_deactivateUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("deactivateUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deactivateUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_activateUser = function(seqid, input, output) {
  var args = new PlatformService_activateUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.activateUser.length === 1) {
    Q.fcall(this._handler.activateUser.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_activateUser_result({success: result});
      output.writeMessageBegin("activateUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_activateUser_result(err);
        output.writeMessageBegin("activateUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("activateUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.activateUser(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_activateUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("activateUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("activateUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getCompanyProfile = function(seqid, input, output) {
  var args = new PlatformService_getCompanyProfile_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getCompanyProfile.length === 1) {
    Q.fcall(this._handler.getCompanyProfile.bind(this._handler),
      args.companyId
    ).then(function(result) {
      var result_obj = new PlatformService_getCompanyProfile_result({success: result});
      output.writeMessageBegin("getCompanyProfile", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_getCompanyProfile_result(err);
        output.writeMessageBegin("getCompanyProfile", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyProfile", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getCompanyProfile(args.companyId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_getCompanyProfile_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getCompanyProfile", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyProfile", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getCompanyProfileBasic = function(seqid, input, output) {
  var args = new PlatformService_getCompanyProfileBasic_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getCompanyProfileBasic.length === 1) {
    Q.fcall(this._handler.getCompanyProfileBasic.bind(this._handler),
      args.companyId
    ).then(function(result) {
      var result_obj = new PlatformService_getCompanyProfileBasic_result({success: result});
      output.writeMessageBegin("getCompanyProfileBasic", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_getCompanyProfileBasic_result(err);
        output.writeMessageBegin("getCompanyProfileBasic", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyProfileBasic", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getCompanyProfileBasic(args.companyId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_getCompanyProfileBasic_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getCompanyProfileBasic", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyProfileBasic", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getCompanyLogo = function(seqid, input, output) {
  var args = new PlatformService_getCompanyLogo_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getCompanyLogo.length === 1) {
    Q.fcall(this._handler.getCompanyLogo.bind(this._handler),
      args.companyId
    ).then(function(result) {
      var result_obj = new PlatformService_getCompanyLogo_result({success: result});
      output.writeMessageBegin("getCompanyLogo", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_getCompanyLogo_result(err);
        output.writeMessageBegin("getCompanyLogo", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyLogo", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getCompanyLogo(args.companyId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_getCompanyLogo_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getCompanyLogo", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyLogo", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_setCompanyProfile = function(seqid, input, output) {
  var args = new PlatformService_setCompanyProfile_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.setCompanyProfile.length === 1) {
    Q.fcall(this._handler.setCompanyProfile.bind(this._handler),
      args.companyProfile
    ).then(function(result) {
      var result_obj = new PlatformService_setCompanyProfile_result({success: result});
      output.writeMessageBegin("setCompanyProfile", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_setCompanyProfile_result(err);
        output.writeMessageBegin("setCompanyProfile", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setCompanyProfile", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.setCompanyProfile(args.companyProfile, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_setCompanyProfile_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("setCompanyProfile", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setCompanyProfile", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getUserProfile = function(seqid, input, output) {
  var args = new PlatformService_getUserProfile_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getUserProfile.length === 2) {
    Q.fcall(this._handler.getUserProfile.bind(this._handler),
      args.userId,
      args.actingUserId
    ).then(function(result) {
      var result_obj = new PlatformService_getUserProfile_result({success: result});
      output.writeMessageBegin("getUserProfile", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getUserProfile_result(err);
        output.writeMessageBegin("getUserProfile", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserProfile", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getUserProfile(args.userId, args.actingUserId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getUserProfile_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getUserProfile", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserProfile", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_setUserProfile = function(seqid, input, output) {
  var args = new PlatformService_setUserProfile_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.setUserProfile.length === 2) {
    Q.fcall(this._handler.setUserProfile.bind(this._handler),
      args.userId,
      args.userSetAttributes
    ).then(function(result) {
      var result_obj = new PlatformService_setUserProfile_result({success: result});
      output.writeMessageBegin("setUserProfile", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserProfileEditabilityException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_setUserProfile_result(err);
        output.writeMessageBegin("setUserProfile", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setUserProfile", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.setUserProfile(args.userId, args.userSetAttributes, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserProfileEditabilityException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_setUserProfile_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("setUserProfile", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setUserProfile", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_userAutoComplete = function(seqid, input, output) {
  var args = new PlatformService_userAutoComplete_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.userAutoComplete.length === 2) {
    Q.fcall(this._handler.userAutoComplete.bind(this._handler),
      args.companyId,
      args.searchTerm
    ).then(function(result) {
      var result_obj = new PlatformService_userAutoComplete_result({success: result});
      output.writeMessageBegin("userAutoComplete", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.InvalidSearchCriteriaException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_userAutoComplete_result(err);
        output.writeMessageBegin("userAutoComplete", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("userAutoComplete", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.userAutoComplete(args.companyId, args.searchTerm, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.InvalidSearchCriteriaException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_userAutoComplete_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("userAutoComplete", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("userAutoComplete", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createExtendedUserProperty = function(seqid, input, output) {
  var args = new PlatformService_createExtendedUserProperty_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createExtendedUserProperty.length === 3) {
    Q.fcall(this._handler.createExtendedUserProperty.bind(this._handler),
      args.companyId,
      args.name,
      args.dataType
    ).then(function(result) {
      var result_obj = new PlatformService_createExtendedUserProperty_result({success: result});
      output.writeMessageBegin("createExtendedUserProperty", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_createExtendedUserProperty_result(err);
        output.writeMessageBegin("createExtendedUserProperty", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createExtendedUserProperty", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createExtendedUserProperty(args.companyId, args.name, args.dataType, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_createExtendedUserProperty_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createExtendedUserProperty", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createExtendedUserProperty", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createExtendedUserPropertyV2 = function(seqid, input, output) {
  var args = new PlatformService_createExtendedUserPropertyV2_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createExtendedUserPropertyV2.length === 1) {
    Q.fcall(this._handler.createExtendedUserPropertyV2.bind(this._handler),
      args.createStruct
    ).then(function(result) {
      var result_obj = new PlatformService_createExtendedUserPropertyV2_result({success: result});
      output.writeMessageBegin("createExtendedUserPropertyV2", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_createExtendedUserPropertyV2_result(err);
        output.writeMessageBegin("createExtendedUserPropertyV2", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createExtendedUserPropertyV2", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createExtendedUserPropertyV2(args.createStruct, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_createExtendedUserPropertyV2_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createExtendedUserPropertyV2", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createExtendedUserPropertyV2", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_deleteExtendedUserProperty = function(seqid, input, output) {
  var args = new PlatformService_deleteExtendedUserProperty_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.deleteExtendedUserProperty.length === 1) {
    Q.fcall(this._handler.deleteExtendedUserProperty.bind(this._handler),
      args.extendedUserPropertyId
    ).then(function(result) {
      var result_obj = new PlatformService_deleteExtendedUserProperty_result({success: result});
      output.writeMessageBegin("deleteExtendedUserProperty", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyExtendedUserPropertyNotFoundException) {
        result = new PlatformService_deleteExtendedUserProperty_result(err);
        output.writeMessageBegin("deleteExtendedUserProperty", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deleteExtendedUserProperty", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.deleteExtendedUserProperty(args.extendedUserPropertyId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyExtendedUserPropertyNotFoundException) {
        result_obj = new PlatformService_deleteExtendedUserProperty_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("deleteExtendedUserProperty", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deleteExtendedUserProperty", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createExtendedPropertyValues = function(seqid, input, output) {
  var args = new PlatformService_createExtendedPropertyValues_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createExtendedPropertyValues.length === 3) {
    Q.fcall(this._handler.createExtendedPropertyValues.bind(this._handler),
      args.userId,
      args.extendedPropertyName,
      args.values
    ).then(function(result) {
      var result_obj = new PlatformService_createExtendedPropertyValues_result({success: result});
      output.writeMessageBegin("createExtendedPropertyValues", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_createExtendedPropertyValues_result(err);
        output.writeMessageBegin("createExtendedPropertyValues", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createExtendedPropertyValues", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createExtendedPropertyValues(args.userId, args.extendedPropertyName, args.values, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_createExtendedPropertyValues_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createExtendedPropertyValues", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createExtendedPropertyValues", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createGroupExtendedPropertyValues = function(seqid, input, output) {
  var args = new PlatformService_createGroupExtendedPropertyValues_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createGroupExtendedPropertyValues.length === 3) {
    Q.fcall(this._handler.createGroupExtendedPropertyValues.bind(this._handler),
      args.companyGroupId,
      args.extendedPropertyName,
      args.values
    ).then(function(result) {
      var result_obj = new PlatformService_createGroupExtendedPropertyValues_result({success: result});
      output.writeMessageBegin("createGroupExtendedPropertyValues", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_createGroupExtendedPropertyValues_result(err);
        output.writeMessageBegin("createGroupExtendedPropertyValues", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createGroupExtendedPropertyValues", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createGroupExtendedPropertyValues(args.companyGroupId, args.extendedPropertyName, args.values, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_createGroupExtendedPropertyValues_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createGroupExtendedPropertyValues", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createGroupExtendedPropertyValues", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getCommunicationPlatforms = function(seqid, input, output) {
  var args = new PlatformService_getCommunicationPlatforms_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getCommunicationPlatforms.length === 0) {
    Q.fcall(this._handler.getCommunicationPlatforms.bind(this._handler)
    ).then(function(result) {
      var result_obj = new PlatformService_getCommunicationPlatforms_result({success: result});
      output.writeMessageBegin("getCommunicationPlatforms", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_getCommunicationPlatforms_result(err);
        output.writeMessageBegin("getCommunicationPlatforms", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCommunicationPlatforms", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getCommunicationPlatforms(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_getCommunicationPlatforms_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getCommunicationPlatforms", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCommunicationPlatforms", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_assignCommunicationPlatform = function(seqid, input, output) {
  var args = new PlatformService_assignCommunicationPlatform_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.assignCommunicationPlatform.length === 2) {
    Q.fcall(this._handler.assignCommunicationPlatform.bind(this._handler),
      args.companyId,
      args.platformCode
    ).then(function(result) {
      var result_obj = new PlatformService_assignCommunicationPlatform_result({success: result});
      output.writeMessageBegin("assignCommunicationPlatform", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.CommunicationPlatformNotFoundException) {
        result = new PlatformService_assignCommunicationPlatform_result(err);
        output.writeMessageBegin("assignCommunicationPlatform", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("assignCommunicationPlatform", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.assignCommunicationPlatform(args.companyId, args.platformCode, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.CommunicationPlatformNotFoundException) {
        result_obj = new PlatformService_assignCommunicationPlatform_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("assignCommunicationPlatform", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("assignCommunicationPlatform", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getCompanyCommunicationPlatforms = function(seqid, input, output) {
  var args = new PlatformService_getCompanyCommunicationPlatforms_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getCompanyCommunicationPlatforms.length === 1) {
    Q.fcall(this._handler.getCompanyCommunicationPlatforms.bind(this._handler),
      args.companyId
    ).then(function(result) {
      var result_obj = new PlatformService_getCompanyCommunicationPlatforms_result({success: result});
      output.writeMessageBegin("getCompanyCommunicationPlatforms", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_getCompanyCommunicationPlatforms_result(err);
        output.writeMessageBegin("getCompanyCommunicationPlatforms", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyCommunicationPlatforms", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getCompanyCommunicationPlatforms(args.companyId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_getCompanyCommunicationPlatforms_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getCompanyCommunicationPlatforms", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyCommunicationPlatforms", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_findUserAliases = function(seqid, input, output) {
  var args = new PlatformService_findUserAliases_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.findUserAliases.length === 1) {
    Q.fcall(this._handler.findUserAliases.bind(this._handler),
      args.queryParameters
    ).then(function(result) {
      var result_obj = new PlatformService_findUserAliases_result({success: result});
      output.writeMessageBegin("findUserAliases", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_findUserAliases_result(err);
        output.writeMessageBegin("findUserAliases", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("findUserAliases", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.findUserAliases(args.queryParameters, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_findUserAliases_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("findUserAliases", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("findUserAliases", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getRolesForCompany = function(seqid, input, output) {
  var args = new PlatformService_getRolesForCompany_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getRolesForCompany.length === 2) {
    Q.fcall(this._handler.getRolesForCompany.bind(this._handler),
      args.companyId,
      args.applicationName
    ).then(function(result) {
      var result_obj = new PlatformService_getRolesForCompany_result({success: result});
      output.writeMessageBegin("getRolesForCompany", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.CompanyApplicationNotFoundException) {
        result = new PlatformService_getRolesForCompany_result(err);
        output.writeMessageBegin("getRolesForCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getRolesForCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getRolesForCompany(args.companyId, args.applicationName, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.CompanyApplicationNotFoundException) {
        result_obj = new PlatformService_getRolesForCompany_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getRolesForCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getRolesForCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getUserRoles = function(seqid, input, output) {
  var args = new PlatformService_getUserRoles_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getUserRoles.length === 2) {
    Q.fcall(this._handler.getUserRoles.bind(this._handler),
      args.userId,
      args.applicationInstance
    ).then(function(result) {
      var result_obj = new PlatformService_getUserRoles_result({success: result});
      output.writeMessageBegin("getUserRoles", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.ApplicationInstanceNotFoundException) {
        result = new PlatformService_getUserRoles_result(err);
        output.writeMessageBegin("getUserRoles", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserRoles", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getUserRoles(args.userId, args.applicationInstance, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.ApplicationInstanceNotFoundException) {
        result_obj = new PlatformService_getUserRoles_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getUserRoles", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserRoles", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createRole = function(seqid, input, output) {
  var args = new PlatformService_createRole_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createRole.length === 3) {
    Q.fcall(this._handler.createRole.bind(this._handler),
      args.roleName,
      args.companyId,
      args.applicationName
    ).then(function(result) {
      var result_obj = new PlatformService_createRole_result({success: result});
      output.writeMessageBegin("createRole", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.CompanyApplicationNotFoundException) {
        result = new PlatformService_createRole_result(err);
        output.writeMessageBegin("createRole", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createRole", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createRole(args.roleName, args.companyId, args.applicationName, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.CompanyApplicationNotFoundException) {
        result_obj = new PlatformService_createRole_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createRole", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createRole", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_deleteRole = function(seqid, input, output) {
  var args = new PlatformService_deleteRole_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.deleteRole.length === 1) {
    Q.fcall(this._handler.deleteRole.bind(this._handler),
      args.roleId
    ).then(function(result) {
      var result_obj = new PlatformService_deleteRole_result({success: result});
      output.writeMessageBegin("deleteRole", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.RoleNotFoundException) {
        result = new PlatformService_deleteRole_result(err);
        output.writeMessageBegin("deleteRole", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deleteRole", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.deleteRole(args.roleId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.RoleNotFoundException) {
        result_obj = new PlatformService_deleteRole_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("deleteRole", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deleteRole", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_setOperationsForRole = function(seqid, input, output) {
  var args = new PlatformService_setOperationsForRole_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.setOperationsForRole.length === 2) {
    Q.fcall(this._handler.setOperationsForRole.bind(this._handler),
      args.roleId,
      args.operations
    ).then(function(result) {
      var result_obj = new PlatformService_setOperationsForRole_result({success: result});
      output.writeMessageBegin("setOperationsForRole", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.RoleNotFoundException || err instanceof ttypes.OperationNotFoundException) {
        result = new PlatformService_setOperationsForRole_result(err);
        output.writeMessageBegin("setOperationsForRole", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setOperationsForRole", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.setOperationsForRole(args.roleId, args.operations, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.RoleNotFoundException || err instanceof ttypes.OperationNotFoundException) {
        result_obj = new PlatformService_setOperationsForRole_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("setOperationsForRole", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setOperationsForRole", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_addRoleToUser = function(seqid, input, output) {
  var args = new PlatformService_addRoleToUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.addRoleToUser.length === 3) {
    Q.fcall(this._handler.addRoleToUser.bind(this._handler),
      args.roleId,
      args.userId,
      args.applicationInstance
    ).then(function(result) {
      var result_obj = new PlatformService_addRoleToUser_result({success: result});
      output.writeMessageBegin("addRoleToUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.RoleNotFoundException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.ApplicationInstanceNotFoundException) {
        result = new PlatformService_addRoleToUser_result(err);
        output.writeMessageBegin("addRoleToUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("addRoleToUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.addRoleToUser(args.roleId, args.userId, args.applicationInstance, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.RoleNotFoundException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.ApplicationInstanceNotFoundException) {
        result_obj = new PlatformService_addRoleToUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("addRoleToUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("addRoleToUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_removeRoleFromUser = function(seqid, input, output) {
  var args = new PlatformService_removeRoleFromUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.removeRoleFromUser.length === 3) {
    Q.fcall(this._handler.removeRoleFromUser.bind(this._handler),
      args.roleId,
      args.userId,
      args.applicationInstance
    ).then(function(result) {
      var result_obj = new PlatformService_removeRoleFromUser_result({success: result});
      output.writeMessageBegin("removeRoleFromUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.RoleNotFoundException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.ApplicationInstanceNotFoundException) {
        result = new PlatformService_removeRoleFromUser_result(err);
        output.writeMessageBegin("removeRoleFromUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("removeRoleFromUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.removeRoleFromUser(args.roleId, args.userId, args.applicationInstance, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.RoleNotFoundException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.ApplicationInstanceNotFoundException) {
        result_obj = new PlatformService_removeRoleFromUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("removeRoleFromUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("removeRoleFromUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_addRoleToGroup = function(seqid, input, output) {
  var args = new PlatformService_addRoleToGroup_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.addRoleToGroup.length === 3) {
    Q.fcall(this._handler.addRoleToGroup.bind(this._handler),
      args.roleId,
      args.groupId,
      args.applicationInstance
    ).then(function(result) {
      var result_obj = new PlatformService_addRoleToGroup_result({success: result});
      output.writeMessageBegin("addRoleToGroup", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.RoleNotFoundException || err instanceof ttypes.GroupNotFoundException || err instanceof ttypes.ApplicationInstanceNotFoundException) {
        result = new PlatformService_addRoleToGroup_result(err);
        output.writeMessageBegin("addRoleToGroup", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("addRoleToGroup", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.addRoleToGroup(args.roleId, args.groupId, args.applicationInstance, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.RoleNotFoundException || err instanceof ttypes.GroupNotFoundException || err instanceof ttypes.ApplicationInstanceNotFoundException) {
        result_obj = new PlatformService_addRoleToGroup_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("addRoleToGroup", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("addRoleToGroup", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_deactivateUserAlias = function(seqid, input, output) {
  var args = new PlatformService_deactivateUserAlias_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.deactivateUserAlias.length === 1) {
    Q.fcall(this._handler.deactivateUserAlias.bind(this._handler),
      args.userAlias
    ).then(function(result) {
      var result_obj = new PlatformService_deactivateUserAlias_result({success: result});
      output.writeMessageBegin("deactivateUserAlias", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserAliasNotFoundException) {
        result = new PlatformService_deactivateUserAlias_result(err);
        output.writeMessageBegin("deactivateUserAlias", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deactivateUserAlias", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.deactivateUserAlias(args.userAlias, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserAliasNotFoundException) {
        result_obj = new PlatformService_deactivateUserAlias_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("deactivateUserAlias", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deactivateUserAlias", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_addAliasesToUser = function(seqid, input, output) {
  var args = new PlatformService_addAliasesToUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.addAliasesToUser.length === 3) {
    Q.fcall(this._handler.addAliasesToUser.bind(this._handler),
      args.companyId,
      args.userId,
      args.aliasList
    ).then(function(result) {
      var result_obj = new PlatformService_addAliasesToUser_result({success: result});
      output.writeMessageBegin("addAliasesToUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_addAliasesToUser_result(err);
        output.writeMessageBegin("addAliasesToUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("addAliasesToUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.addAliasesToUser(args.companyId, args.userId, args.aliasList, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_addAliasesToUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("addAliasesToUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("addAliasesToUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getGroupInformation = function(seqid, input, output) {
  var args = new PlatformService_getGroupInformation_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getGroupInformation.length === 1) {
    Q.fcall(this._handler.getGroupInformation.bind(this._handler),
      args.groupIds
    ).then(function(result) {
      var result_obj = new PlatformService_getGroupInformation_result({success: result});
      output.writeMessageBegin("getGroupInformation", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_getGroupInformation_result(err);
        output.writeMessageBegin("getGroupInformation", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getGroupInformation", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getGroupInformation(args.groupIds, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_getGroupInformation_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getGroupInformation", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getGroupInformation", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_authorizeSocialMediaAccount = function(seqid, input, output) {
  var args = new PlatformService_authorizeSocialMediaAccount_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.authorizeSocialMediaAccount.length === 3) {
    Q.fcall(this._handler.authorizeSocialMediaAccount.bind(this._handler),
      args.userId,
      args.platformCode,
      args.socialMediaAccessToken
    ).then(function(result) {
      var result_obj = new PlatformService_authorizeSocialMediaAccount_result({success: result});
      output.writeMessageBegin("authorizeSocialMediaAccount", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_authorizeSocialMediaAccount_result(err);
        output.writeMessageBegin("authorizeSocialMediaAccount", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("authorizeSocialMediaAccount", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.authorizeSocialMediaAccount(args.userId, args.platformCode, args.socialMediaAccessToken, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_authorizeSocialMediaAccount_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("authorizeSocialMediaAccount", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("authorizeSocialMediaAccount", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getUserProfilePolicy = function(seqid, input, output) {
  var args = new PlatformService_getUserProfilePolicy_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getUserProfilePolicy.length === 1) {
    Q.fcall(this._handler.getUserProfilePolicy.bind(this._handler),
      args.companyId
    ).then(function(result) {
      var result_obj = new PlatformService_getUserProfilePolicy_result({success: result});
      output.writeMessageBegin("getUserProfilePolicy", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_getUserProfilePolicy_result(err);
        output.writeMessageBegin("getUserProfilePolicy", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserProfilePolicy", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getUserProfilePolicy(args.companyId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_getUserProfilePolicy_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getUserProfilePolicy", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getUserProfilePolicy", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_setUserProfilePolicy = function(seqid, input, output) {
  var args = new PlatformService_setUserProfilePolicy_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.setUserProfilePolicy.length === 2) {
    Q.fcall(this._handler.setUserProfilePolicy.bind(this._handler),
      args.companyId,
      args.profilePolicy
    ).then(function(result) {
      var result_obj = new PlatformService_setUserProfilePolicy_result({success: result});
      output.writeMessageBegin("setUserProfilePolicy", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_setUserProfilePolicy_result(err);
        output.writeMessageBegin("setUserProfilePolicy", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setUserProfilePolicy", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.setUserProfilePolicy(args.companyId, args.profilePolicy, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_setUserProfilePolicy_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("setUserProfilePolicy", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setUserProfilePolicy", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_assignMessageAccessRightsToArchive = function(seqid, input, output) {
  var args = new PlatformService_assignMessageAccessRightsToArchive_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.assignMessageAccessRightsToArchive.length === 3) {
    Q.fcall(this._handler.assignMessageAccessRightsToArchive.bind(this._handler),
      args.userId,
      args.archiveId,
      args.accessRights
    ).then(function(result) {
      var result_obj = new PlatformService_assignMessageAccessRightsToArchive_result({success: result});
      output.writeMessageBegin("assignMessageAccessRightsToArchive", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.ArchiveNotFoundException) {
        result = new PlatformService_assignMessageAccessRightsToArchive_result(err);
        output.writeMessageBegin("assignMessageAccessRightsToArchive", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("assignMessageAccessRightsToArchive", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.assignMessageAccessRightsToArchive(args.userId, args.archiveId, args.accessRights, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.ArchiveNotFoundException) {
        result_obj = new PlatformService_assignMessageAccessRightsToArchive_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("assignMessageAccessRightsToArchive", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("assignMessageAccessRightsToArchive", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_enableUser = function(seqid, input, output) {
  var args = new PlatformService_enableUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.enableUser.length === 1) {
    Q.fcall(this._handler.enableUser.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_enableUser_result({success: result});
      output.writeMessageBegin("enableUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_enableUser_result(err);
        output.writeMessageBegin("enableUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("enableUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.enableUser(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_enableUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("enableUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("enableUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_disableUser = function(seqid, input, output) {
  var args = new PlatformService_disableUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.disableUser.length === 1) {
    Q.fcall(this._handler.disableUser.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_disableUser_result({success: result});
      output.writeMessageBegin("disableUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_disableUser_result(err);
        output.writeMessageBegin("disableUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("disableUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.disableUser(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_disableUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("disableUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("disableUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createSystemUser = function(seqid, input, output) {
  var args = new PlatformService_createSystemUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createSystemUser.length === 2) {
    Q.fcall(this._handler.createSystemUser.bind(this._handler),
      args.companyId,
      args.systemUser
    ).then(function(result) {
      var result_obj = new PlatformService_createSystemUser_result({success: result});
      output.writeMessageBegin("createSystemUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_createSystemUser_result(err);
        output.writeMessageBegin("createSystemUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createSystemUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createSystemUser(args.companyId, args.systemUser, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_createSystemUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createSystemUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createSystemUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_deleteSystemUser = function(seqid, input, output) {
  var args = new PlatformService_deleteSystemUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.deleteSystemUser.length === 2) {
    Q.fcall(this._handler.deleteSystemUser.bind(this._handler),
      args.companyId,
      args.systemUserId
    ).then(function(result) {
      var result_obj = new PlatformService_deleteSystemUser_result({success: result});
      output.writeMessageBegin("deleteSystemUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_deleteSystemUser_result(err);
        output.writeMessageBegin("deleteSystemUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deleteSystemUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.deleteSystemUser(args.companyId, args.systemUserId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_deleteSystemUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("deleteSystemUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("deleteSystemUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_updateSystemUser = function(seqid, input, output) {
  var args = new PlatformService_updateSystemUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.updateSystemUser.length === 3) {
    Q.fcall(this._handler.updateSystemUser.bind(this._handler),
      args.companyId,
      args.systemUserId,
      args.systemUser
    ).then(function(result) {
      var result_obj = new PlatformService_updateSystemUser_result({success: result});
      output.writeMessageBegin("updateSystemUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_updateSystemUser_result(err);
        output.writeMessageBegin("updateSystemUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("updateSystemUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.updateSystemUser(args.companyId, args.systemUserId, args.systemUser, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_updateSystemUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("updateSystemUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("updateSystemUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createCompanyUsers = function(seqid, input, output) {
  var args = new PlatformService_createCompanyUsers_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createCompanyUsers.length === 2) {
    Q.fcall(this._handler.createCompanyUsers.bind(this._handler),
      args.companyId,
      args.users
    ).then(function(result) {
      var result_obj = new PlatformService_createCompanyUsers_result({success: result});
      output.writeMessageBegin("createCompanyUsers", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.FailureException) {
        result = new PlatformService_createCompanyUsers_result(err);
        output.writeMessageBegin("createCompanyUsers", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createCompanyUsers", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createCompanyUsers(args.companyId, args.users, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_createCompanyUsers_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createCompanyUsers", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createCompanyUsers", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createCompanyUserLogin = function(seqid, input, output) {
  var args = new PlatformService_createCompanyUserLogin_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createCompanyUserLogin.length === 1) {
    Q.fcall(this._handler.createCompanyUserLogin.bind(this._handler),
      args.login
    ).then(function(result) {
      var result_obj = new PlatformService_createCompanyUserLogin_result({success: result});
      output.writeMessageBegin("createCompanyUserLogin", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.FailureException) {
        result = new PlatformService_createCompanyUserLogin_result(err);
        output.writeMessageBegin("createCompanyUserLogin", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createCompanyUserLogin", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createCompanyUserLogin(args.login, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_createCompanyUserLogin_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createCompanyUserLogin", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createCompanyUserLogin", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createSystemUserLogin = function(seqid, input, output) {
  var args = new PlatformService_createSystemUserLogin_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createSystemUserLogin.length === 1) {
    Q.fcall(this._handler.createSystemUserLogin.bind(this._handler),
      args.login
    ).then(function(result) {
      var result_obj = new PlatformService_createSystemUserLogin_result({success: result});
      output.writeMessageBegin("createSystemUserLogin", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.FailureException) {
        result = new PlatformService_createSystemUserLogin_result(err);
        output.writeMessageBegin("createSystemUserLogin", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createSystemUserLogin", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createSystemUserLogin(args.login, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.UserNotFoundException || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_createSystemUserLogin_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createSystemUserLogin", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createSystemUserLogin", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_migrateCompany = function(seqid, input, output) {
  var args = new PlatformService_migrateCompany_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.migrateCompany.length === 2) {
    Q.fcall(this._handler.migrateCompany.bind(this._handler),
      args.company,
      args.dryRun
    ).then(function(result) {
      var result_obj = new PlatformService_migrateCompany_result({success: result});
      output.writeMessageBegin("migrateCompany", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_migrateCompany_result(err);
        output.writeMessageBegin("migrateCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("migrateCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.migrateCompany(args.company, args.dryRun, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_migrateCompany_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("migrateCompany", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("migrateCompany", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getCompanyByDomain = function(seqid, input, output) {
  var args = new PlatformService_getCompanyByDomain_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getCompanyByDomain.length === 1) {
    Q.fcall(this._handler.getCompanyByDomain.bind(this._handler),
      args.domain
    ).then(function(result) {
      var result_obj = new PlatformService_getCompanyByDomain_result({success: result});
      output.writeMessageBegin("getCompanyByDomain", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.FailureException) {
        result = new PlatformService_getCompanyByDomain_result(err);
        output.writeMessageBegin("getCompanyByDomain", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyByDomain", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getCompanyByDomain(args.domain, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_getCompanyByDomain_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getCompanyByDomain", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyByDomain", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createCompanyWithDomain = function(seqid, input, output) {
  var args = new PlatformService_createCompanyWithDomain_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createCompanyWithDomain.length === 2) {
    Q.fcall(this._handler.createCompanyWithDomain.bind(this._handler),
      args.name,
      args.domain
    ).then(function(result) {
      var result_obj = new PlatformService_createCompanyWithDomain_result({success: result});
      output.writeMessageBegin("createCompanyWithDomain", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyAlreadyExistsException) {
        result = new PlatformService_createCompanyWithDomain_result(err);
        output.writeMessageBegin("createCompanyWithDomain", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createCompanyWithDomain", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createCompanyWithDomain(args.name, args.domain, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyAlreadyExistsException) {
        result_obj = new PlatformService_createCompanyWithDomain_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createCompanyWithDomain", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createCompanyWithDomain", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_createUser = function(seqid, input, output) {
  var args = new PlatformService_createUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createUser.length === 3) {
    Q.fcall(this._handler.createUser.bind(this._handler),
      args.companyId,
      args.passwordHash,
      args.user
    ).then(function(result) {
      var result_obj = new PlatformService_createUser_result({success: result});
      output.writeMessageBegin("createUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.CommunicationPlatformNotFoundException) {
        result = new PlatformService_createUser_result(err);
        output.writeMessageBegin("createUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createUser(args.companyId, args.passwordHash, args.user, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.CommunicationPlatformNotFoundException) {
        result_obj = new PlatformService_createUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getCompaniesWithServiceEnabled = function(seqid, input, output) {
  var args = new PlatformService_getCompaniesWithServiceEnabled_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getCompaniesWithServiceEnabled.length === 1) {
    Q.fcall(this._handler.getCompaniesWithServiceEnabled.bind(this._handler),
      args.serviceSku
    ).then(function(result) {
      var result_obj = new PlatformService_getCompaniesWithServiceEnabled_result({success: result});
      output.writeMessageBegin("getCompaniesWithServiceEnabled", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_getCompaniesWithServiceEnabled_result(err);
        output.writeMessageBegin("getCompaniesWithServiceEnabled", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompaniesWithServiceEnabled", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getCompaniesWithServiceEnabled(args.serviceSku, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_getCompaniesWithServiceEnabled_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getCompaniesWithServiceEnabled", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompaniesWithServiceEnabled", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getCompanyArchives = function(seqid, input, output) {
  var args = new PlatformService_getCompanyArchives_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getCompanyArchives.length === 1) {
    Q.fcall(this._handler.getCompanyArchives.bind(this._handler),
      args.companyId
    ).then(function(result) {
      var result_obj = new PlatformService_getCompanyArchives_result({success: result});
      output.writeMessageBegin("getCompanyArchives", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result = new PlatformService_getCompanyArchives_result(err);
        output.writeMessageBegin("getCompanyArchives", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyArchives", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getCompanyArchives(args.companyId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException) {
        result_obj = new PlatformService_getCompanyArchives_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getCompanyArchives", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyArchives", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_findUsersWithAllEntitlements = function(seqid, input, output) {
  var args = new PlatformService_findUsersWithAllEntitlements_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.findUsersWithAllEntitlements.length === 3) {
    Q.fcall(this._handler.findUsersWithAllEntitlements.bind(this._handler),
      args.companyId,
      args.applicationName,
      args.entitlements
    ).then(function(result) {
      var result_obj = new PlatformService_findUsersWithAllEntitlements_result({success: result});
      output.writeMessageBegin("findUsersWithAllEntitlements", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.CompanyApplicationNotFoundException) {
        result = new PlatformService_findUsersWithAllEntitlements_result(err);
        output.writeMessageBegin("findUsersWithAllEntitlements", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("findUsersWithAllEntitlements", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.findUsersWithAllEntitlements(args.companyId, args.applicationName, args.entitlements, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.CompanyNotFoundException || err instanceof ttypes.CompanyApplicationNotFoundException) {
        result_obj = new PlatformService_findUsersWithAllEntitlements_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("findUsersWithAllEntitlements", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("findUsersWithAllEntitlements", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getCompanyServiceConfigBySku = function(seqid, input, output) {
  var args = new PlatformService_getCompanyServiceConfigBySku_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getCompanyServiceConfigBySku.length === 1) {
    Q.fcall(this._handler.getCompanyServiceConfigBySku.bind(this._handler),
      args.sku
    ).then(function(result) {
      var result_obj = new PlatformService_getCompanyServiceConfigBySku_result({success: result});
      output.writeMessageBegin("getCompanyServiceConfigBySku", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException) {
        result = new PlatformService_getCompanyServiceConfigBySku_result(err);
        output.writeMessageBegin("getCompanyServiceConfigBySku", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyServiceConfigBySku", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getCompanyServiceConfigBySku(args.sku, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException) {
        result_obj = new PlatformService_getCompanyServiceConfigBySku_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getCompanyServiceConfigBySku", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCompanyServiceConfigBySku", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getEntitlementsForUserByApplicationNameWithConstraints = function(seqid, input, output) {
  var args = new PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getEntitlementsForUserByApplicationNameWithConstraints.length === 2) {
    Q.fcall(this._handler.getEntitlementsForUserByApplicationNameWithConstraints.bind(this._handler),
      args.userId,
      args.applicationName
    ).then(function(result) {
      var result_obj = new PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_result({success: result});
      output.writeMessageBegin("getEntitlementsForUserByApplicationNameWithConstraints", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_result(err);
        output.writeMessageBegin("getEntitlementsForUserByApplicationNameWithConstraints", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getEntitlementsForUserByApplicationNameWithConstraints", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getEntitlementsForUserByApplicationNameWithConstraints(args.userId, args.applicationName, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getEntitlementsForUserByApplicationNameWithConstraints_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getEntitlementsForUserByApplicationNameWithConstraints", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getEntitlementsForUserByApplicationNameWithConstraints", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_setWebsiteRoleConstraintsToUser = function(seqid, input, output) {
  var args = new PlatformService_setWebsiteRoleConstraintsToUser_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.setWebsiteRoleConstraintsToUser.length === 5) {
    Q.fcall(this._handler.setWebsiteRoleConstraintsToUser.bind(this._handler),
      args.userId,
      args.roleId,
      args.applicationInstance,
      args.applicationName,
      args.listOfConstraints
    ).then(function(result) {
      var result_obj = new PlatformService_setWebsiteRoleConstraintsToUser_result({success: result});
      output.writeMessageBegin("setWebsiteRoleConstraintsToUser", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_setWebsiteRoleConstraintsToUser_result(err);
        output.writeMessageBegin("setWebsiteRoleConstraintsToUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setWebsiteRoleConstraintsToUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.setWebsiteRoleConstraintsToUser(args.userId, args.roleId, args.applicationInstance, args.applicationName, args.listOfConstraints, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_setWebsiteRoleConstraintsToUser_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("setWebsiteRoleConstraintsToUser", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setWebsiteRoleConstraintsToUser", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getMessageAccessExclusions = function(seqid, input, output) {
  var args = new PlatformService_getMessageAccessExclusions_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getMessageAccessExclusions.length === 1) {
    Q.fcall(this._handler.getMessageAccessExclusions.bind(this._handler),
      args.userId
    ).then(function(result) {
      var result_obj = new PlatformService_getMessageAccessExclusions_result({success: result});
      output.writeMessageBegin("getMessageAccessExclusions", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getMessageAccessExclusions_result(err);
        output.writeMessageBegin("getMessageAccessExclusions", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getMessageAccessExclusions", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getMessageAccessExclusions(args.userId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getMessageAccessExclusions_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getMessageAccessExclusions", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getMessageAccessExclusions", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PlatformServiceProcessor.prototype.process_getAccessibleCompanies = function(seqid, input, output) {
  var args = new PlatformService_getAccessibleCompanies_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getAccessibleCompanies.length === 2) {
    Q.fcall(this._handler.getAccessibleCompanies.bind(this._handler),
      args.userId,
      args.applicationName
    ).then(function(result) {
      var result_obj = new PlatformService_getAccessibleCompanies_result({success: result});
      output.writeMessageBegin("getAccessibleCompanies", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result = new PlatformService_getAccessibleCompanies_result(err);
        output.writeMessageBegin("getAccessibleCompanies", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getAccessibleCompanies", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getAccessibleCompanies(args.userId, args.applicationName, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.FailureException || err instanceof ttypes.UserNotFoundException) {
        result_obj = new PlatformService_getAccessibleCompanies_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getAccessibleCompanies", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getAccessibleCompanies", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
